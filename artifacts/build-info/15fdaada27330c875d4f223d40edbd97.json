{"id":"15fdaada27330c875d4f223d40edbd97","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\nimport \"../solidity-utils/helpers/IAuthentication.sol\";\nimport \"../solidity-utils/helpers/ISignaturesValidator.sol\";\nimport \"../solidity-utils/helpers/ITemporarilyPausable.sol\";\nimport \"../solidity-utils/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"content":"pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"content":"pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/FlashLoanArbitrage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\n\ncontract FlashLoanArbitrage is IFlashLoanRecipient, ReentrancyGuard {\n    IVault private immutable vault;\n    ISwapRouter private immutable uniswapRouter;\n    IUniswapV2Router02 private immutable sushiswapRouter;\n    address public owner;\n\n    // 最小利益率（例: 0.5% = 50）\n    uint256 public constant MIN_PROFIT_BPS = 50;\n    uint256 public constant BPS_DENOMINATOR = 10000;\n\n    event ArbitrageExecuted(\n        address[] tokens,\n        uint256[] amounts,\n        uint256 profit\n    );\n\n    event PriceChecked(\n        address token0,\n        address token1,\n        uint256 uniswapPrice,\n        uint256 sushiswapPrice\n    );\n\n    constructor(\n        IVault _vault,\n        ISwapRouter _uniswapRouter,\n        IUniswapV2Router02 _sushiswapRouter\n    ) {\n        vault = _vault;\n        uniswapRouter = _uniswapRouter;\n        sushiswapRouter = _sushiswapRouter;\n        owner = msg.sender;\n    }\n\n    struct ArbitrageParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 uniswapFee;\n        uint256 deadline;\n    }\n\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external override {\n        require(msg.sender == address(vault), \"Only Balancer Vault\");\n\n        // userData からパラメータをデコード\n        ArbitrageParams memory params = abi.decode(userData, (ArbitrageParams));\n\n        // 1. Uniswap V3での取引\n        uint256 amountReceived = executeUniswapTrade(\n            params.tokenIn,\n            params.tokenOut,\n            amounts[0],\n            params.uniswapFee,\n            params.deadline\n        );\n\n        // 2. SushiSwap V3での逆取引\n        uint256 finalAmount = executeSushiswapTrade(\n            params.tokenOut,\n            params.tokenIn,\n            amountReceived,\n            params.deadline\n        );\n\n        // 利益の計算\n        uint256 profit = finalAmount - (amounts[0] + feeAmounts[0]);\n        require(profit > 0, \"No profit\");\n\n        // 最小利益率のチェック\n        uint256 profitBps = (profit * BPS_DENOMINATOR) / amounts[0];\n        require(profitBps >= MIN_PROFIT_BPS, \"Insufficient profit\");\n\n        // ローンの返済\n        for (uint256 i = 0; i < tokens.length; i++) {\n            IERC20(tokens[i]).transfer(\n                address(vault),\n                amounts[i] + feeAmounts[i]\n            );\n        }\n\n        // 利益を所有者に送信\n        if (profit > 0) {\n            IERC20(params.tokenIn).transfer(owner, profit);\n        }\n\n        emit ArbitrageExecuted(\n            _convertToAddressArray(tokens),\n            amounts,\n            profit\n        );\n    }\n\n    function executeArbitrage(\n        address tokenIn,\n        address tokenOut,\n        uint256 amount,\n        uint24 uniswapFee,\n        uint256 deadline\n    ) external nonReentrant {\n        require(msg.sender == owner, \"Only owner\");\n        \n        // 価格チェック\n        (bool isProfitable,) = checkProfitability(\n            tokenIn,\n            tokenOut,\n            amount,\n            uniswapFee\n        );\n        require(isProfitable, \"No profitable opportunity\");\n\n        // フラッシュローンのパラメータを準備\n        IERC20[] memory tokens = new IERC20[](1);\n        tokens[0] = IERC20(tokenIn);\n\n        uint256[] memory amounts = new uint256[](1);\n        amounts[0] = amount;\n\n        // アービトラージパラメータのエンコード\n        ArbitrageParams memory params = ArbitrageParams({\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            amountIn: amount,\n            uniswapFee: uniswapFee,\n            deadline: deadline\n        });\n\n        // フラッシュローンの実行\n        vault.flashLoan(\n            this,\n            tokens,\n            amounts,\n            abi.encode(params)\n        );\n    }\n\n    function executeUniswapTrade(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint24 fee,\n        uint256 deadline\n    ) internal returns (uint256 amountOut) {\n        // Uniswap V3でのスワップパラメータ\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\n            .ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: address(this),\n                deadline: deadline,\n                amountIn: amountIn,\n                amountOutMinimum: 0, // フラッシュローン内なのでスリッページは考慮しない\n                sqrtPriceLimitX96: 0\n            });\n\n        // トークンの承認\n        IERC20(tokenIn).approve(address(uniswapRouter), amountIn);\n\n        // スワップの実行\n        return uniswapRouter.exactInputSingle(params);\n    }\n\n    function executeSushiswapTrade(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint256 deadline\n    ) internal returns (uint256 amountOut) {\n        // パスの設定\n        address[] memory path = new address[](2);\n        path[0] = tokenIn;\n        path[1] = tokenOut;\n\n        // トークンの承認\n        IERC20(tokenIn).approve(address(sushiswapRouter), amountIn);\n\n        // スワップの実行\n        uint256[] memory amounts = sushiswapRouter.swapExactTokensForTokens(\n            amountIn,\n            0, // フラッシュローン内なのでスリッページは考慮しない\n            path,\n            address(this),\n            deadline\n        );\n\n        return amounts[amounts.length - 1];\n    }\n\n    function checkProfitability(\n        address tokenIn,\n        address tokenOut,\n        uint256 amount,\n        uint24 uniswapFee\n    ) public returns (bool, uint256) {\n        // Uniswapでの予想取引結果\n        uint256 uniswapAmount = getUniswapQuote(\n            tokenIn,\n            tokenOut,\n            amount,\n            uniswapFee\n        );\n\n        // SushiSwapでの予想取引結果\n        uint256 sushiswapAmount = getSushiswapQuote(\n            tokenOut,\n            tokenIn,\n            uniswapAmount\n        );\n\n        // Balancerのフラッシュローン手数料（0.02%）\n        uint256 flashLoanFee = (amount * 2) / 10000;\n\n        // 予想利益の計算\n        if (sushiswapAmount > amount + flashLoanFee) {\n            uint256 expectedProfit = sushiswapAmount - (amount + flashLoanFee);\n            uint256 profitBps = (expectedProfit * BPS_DENOMINATOR) / amount;\n            \n            emit PriceChecked(\n                tokenIn,\n                tokenOut,\n                uniswapAmount,\n                sushiswapAmount\n            );\n\n            return (profitBps >= MIN_PROFIT_BPS, expectedProfit);\n        }\n\n        return (false, 0);\n    }\n\n    function getUniswapQuote(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn,\n        uint24 fee\n    ) internal pure returns (uint256) {\n        // Uniswap V3のクォート取得ロジック\n        // 実際の実装ではQuoterV2コントラクトを使用\n        return amountIn; // 仮の実装\n    }\n\n    function getSushiswapQuote(\n        address tokenIn,\n        address tokenOut,\n        uint256 amountIn\n    ) internal view returns (uint256) {\n        // SushiSwapのクォート取得ロジック\n        address[] memory path = new address[](2);\n        path[0] = tokenIn;\n        path[1] = tokenOut;\n        \n        return sushiswapRouter.getAmountsOut(amountIn, path)[1];\n    }\n\n    function _convertToAddressArray(IERC20[] memory tokens) internal pure returns (address[] memory) {\n        address[] memory addresses = new address[](tokens.length);\n        for (uint256 i = 0; i < tokens.length; i++) {\n            addresses[i] = address(tokens[i]);\n        }\n        return addresses;\n    }\n\n    // 緊急出金関数\n    function emergencyWithdraw(address token) external {\n        require(msg.sender == owner, \"Only owner\");\n        uint256 balance = IERC20(token).balanceOf(address(this));\n        if (balance > 0) {\n            IERC20(token).transfer(owner, balance);\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/FlashLoanArbitrage.sol:248:9:\n    |\n248 |         address tokenIn,\n    |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7406,"file":"contracts/FlashLoanArbitrage.sol","start":7391},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/FlashLoanArbitrage.sol:249:9:\n    |\n249 |         address tokenOut,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7432,"file":"contracts/FlashLoanArbitrage.sol","start":7416},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/FlashLoanArbitrage.sol:251:9:\n    |\n251 |         uint24 fee\n    |         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7478,"file":"contracts/FlashLoanArbitrage.sol","start":7468},"type":"Warning"}],"sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","exportedSymbols":{"IAuthentication":[10]},"id":11,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthentication","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":10,"linearizedBaseContracts":[10],"name":"IAuthentication","nameLocation":"731:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"753:116:0","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":9,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"883:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"selector","nameLocation":"902:8:0","nodeType":"VariableDeclaration","scope":9,"src":"895:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"894:17:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9,"src":"935:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"934:9:0"},"scope":10,"src":"874:70:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11,"src":"721:225:0","usedErrors":[],"usedEvents":[]}],"src":"688:259:0"},"id":0},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","exportedSymbols":{"ISignaturesValidator":[28]},"id":29,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":12,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignaturesValidator","contractDependencies":[],"contractKind":"interface","documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"721:95:1","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":28,"linearizedBaseContracts":[28],"name":"ISignaturesValidator","nameLocation":"827:20:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"854:60:1","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"928:18:1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"946:2:1"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"972:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"971:9:1"},"scope":28,"src":"919:62:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"987:83:1","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nameLocation":"1084:12:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"user","nameLocation":"1105:4:1","nodeType":"VariableDeclaration","scope":27,"src":"1097:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1096:14:1"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"1134:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:1"},"scope":28,"src":"1075:68:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":29,"src":"817:328:1","usedErrors":[],"usedEvents":[]}],"src":"688:458:1"},"id":1},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","exportedSymbols":{"ITemporarilyPausable":[47]},"id":48,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":30,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:2"},{"abstract":false,"baseContracts":[],"canonicalName":"ITemporarilyPausable","contractDependencies":[],"contractKind":"interface","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"721:61:2","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":47,"linearizedBaseContracts":[47],"name":"ITemporarilyPausable","nameLocation":"793:20:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"820:83:2","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"eventSelector":"9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64","id":36,"name":"PausedStateChanged","nameLocation":"914:18:2","nodeType":"EventDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"938:6:2","nodeType":"VariableDeclaration","scope":36,"src":"933:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"933:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"932:13:2"},"src":"908:38:2"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"952:57:2","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nameLocation":"1023:14:2","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1037:2:2"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"paused","nameLocation":"1105:6:2","nodeType":"VariableDeclaration","scope":46,"src":"1100:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1133:18:2","nodeType":"VariableDeclaration","scope":46,"src":"1125:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"bufferPeriodEndTime","nameLocation":"1173:19:2","nodeType":"VariableDeclaration","scope":46,"src":"1165:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:116:2"},"scope":47,"src":"1014:189:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":48,"src":"783:422:2","usedErrors":[],"usedEvents":[36]}],"src":"688:518:2"},"id":2},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","exportedSymbols":{"IERC20":[140],"IWETH":[62]},"id":63,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":49,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:3"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../openzeppelin/IERC20.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":63,"sourceUnit":141,"src":"721:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":52,"name":"IERC20","nameLocations":["929:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"929:6:3"},"id":53,"nodeType":"InheritanceSpecifier","src":"929:6:3"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"759:150:3","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":62,"linearizedBaseContracts":[62,140],"name":"IWETH","nameLocation":"920:5:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":56,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"951:7:3","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"958:2:3"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"977:0:3"},"scope":62,"src":"942:36:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":61,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"993:8:3","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"amount","nameLocation":"1010:6:3","nodeType":"VariableDeclaration","scope":61,"src":"1002:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:16:3"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1026:0:3"},"scope":62,"src":"984:43:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":63,"src":"910:119:3","usedErrors":[],"usedEvents":[130,139]}],"src":"688:342:3"},"id":3},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","exportedSymbols":{"IERC20":[140]},"id":141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":64,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"66:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":140,"linearizedBaseContracts":[140],"name":"IERC20","nameLocation":"147:6:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"160:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"240:11:4","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"251:2:4"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":71,"src":"277:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:4"},"scope":140,"src":"231:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"292:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"378:9:4","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"account","nameLocation":"396:7:4","nodeType":"VariableDeclaration","scope":79,"src":"388:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:4"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"428:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:4"},"scope":140,"src":"369:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"443:209:4","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"666:8:4","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"recipient","nameLocation":"683:9:4","nodeType":"VariableDeclaration","scope":89,"src":"675:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"amount","nameLocation":"702:6:4","nodeType":"VariableDeclaration","scope":89,"src":"694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:4"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":86,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:4"},"scope":140,"src":"657:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"740:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1018:9:4","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"owner","nameLocation":"1036:5:4","nodeType":"VariableDeclaration","scope":99,"src":"1028:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"spender","nameLocation":"1051:7:4","nodeType":"VariableDeclaration","scope":99,"src":"1043:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:4"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"1083:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:4"},"scope":140,"src":"1009:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1098:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":109,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1754:7:4","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"spender","nameLocation":"1770:7:4","nodeType":"VariableDeclaration","scope":109,"src":"1762:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"amount","nameLocation":"1787:6:4","nodeType":"VariableDeclaration","scope":109,"src":"1779:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:4"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"1813:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:4"},"scope":140,"src":"1745:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"1825:296:4","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2135:12:4","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"sender","nameLocation":"2165:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2157:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"recipient","nameLocation":"2189:9:4","nodeType":"VariableDeclaration","scope":121,"src":"2181:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"amount","nameLocation":"2216:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2208:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:81:4"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"2247:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":118,"name":"bool","nodeType":"ElementaryTypeName","src":"2247:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2246:6:4"},"scope":140,"src":"2126:127:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"2259:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":130,"name":"Transfer","nameLocation":"2428:8:4","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2453:4:4","nodeType":"VariableDeclaration","scope":130,"src":"2437:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2475:2:4","nodeType":"VariableDeclaration","scope":130,"src":"2459:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2487:5:4","nodeType":"VariableDeclaration","scope":130,"src":"2479:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:57:4"},"src":"2422:72:4"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"2500:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":139,"name":"Approval","nameLocation":"2659:8:4","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2684:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2668:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2707:7:4","nodeType":"VariableDeclaration","scope":139,"src":"2691:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2724:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2716:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:63:4"},"src":"2653:78:4"}],"scope":141,"src":"137:2596:4","usedErrors":[],"usedEvents":[130,139]}],"src":"33:2701:4"},"id":4},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","exportedSymbols":{"IAsset":[144]},"id":145,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":142,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"721:309:5","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144],"name":"IAsset","nameLocation":"1041:6:5","nodeType":"ContractDefinition","nodes":[],"scope":145,"src":"1031:73:5","usedErrors":[],"usedEvents":[]}],"src":"688:417:5"},"id":5},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[159]},"id":160,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthorizer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":159,"linearizedBaseContracts":[159],"name":"IAuthorizer","nameLocation":"731:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"749:121:6","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nameLocation":"884:10:6","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"actionId","nameLocation":"912:8:6","nodeType":"VariableDeclaration","scope":158,"src":"904:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"938:7:6","nodeType":"VariableDeclaration","scope":158,"src":"930:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"where","nameLocation":"963:5:6","nodeType":"VariableDeclaration","scope":158,"src":"955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"894:80:6"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"998:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"997:6:6"},"scope":159,"src":"875:129:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":160,"src":"721:285:6","usedErrors":[],"usedEvents":[]}],"src":"688:319:6"},"id":6},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","exportedSymbols":{"IERC20":[140],"IFlashLoanRecipient":[179]},"id":180,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":161,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:7"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":141,"src":"773:51:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFlashLoanRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":179,"linearizedBaseContracts":[179],"name":"IFlashLoanRecipient","nameLocation":"836:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"862:496:7","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1372:16:7","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"tokens","nameLocation":"1414:6:7","nodeType":"VariableDeclaration","scope":178,"src":"1398:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":165,"nodeType":"UserDefinedTypeName","pathNode":{"id":164,"name":"IERC20","nameLocations":["1398:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1398:6:7"},"referencedDeclaration":140,"src":"1398:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":166,"nodeType":"ArrayTypeName","src":"1398:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"amounts","nameLocation":"1447:7:7","nodeType":"VariableDeclaration","scope":178,"src":"1430:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":169,"nodeType":"ArrayTypeName","src":"1430:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"feeAmounts","nameLocation":"1481:10:7","nodeType":"VariableDeclaration","scope":178,"src":"1464:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":172,"nodeType":"ArrayTypeName","src":"1464:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"userData","nameLocation":"1514:8:7","nodeType":"VariableDeclaration","scope":178,"src":"1501:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:7"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1537:0:7"},"scope":179,"src":"1363:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":180,"src":"826:714:7","usedErrors":[],"usedEvents":[]}],"src":"688:853:7"},"id":7},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[766],"IWETH":[62]},"id":249,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:8"},{"id":182,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"720:33:8"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":141,"src":"755:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"./IVault.sol","id":184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":767,"src":"808:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":160,"src":"831:27:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProtocolFeesCollector","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"IProtocolFeesCollector","nameLocation":"870:22:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"a9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc","id":189,"name":"SwapFeePercentageChanged","nameLocation":"905:24:8","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"938:20:8","nodeType":"VariableDeclaration","scope":189,"src":"930:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:30:8"},"src":"899:61:8"},{"anonymous":false,"eventSelector":"5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a","id":193,"name":"FlashLoanFeePercentageChanged","nameLocation":"971:29:8","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1009:25:8","nodeType":"VariableDeclaration","scope":193,"src":"1001:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:35:8"},"src":"965:71:8"},{"functionSelector":"6daefab6","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nameLocation":"1051:21:8","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"tokens","nameLocation":"1100:6:8","nodeType":"VariableDeclaration","scope":205,"src":"1082:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":195,"nodeType":"UserDefinedTypeName","pathNode":{"id":194,"name":"IERC20","nameLocations":["1082:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1082:6:8"},"referencedDeclaration":140,"src":"1082:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":196,"nodeType":"ArrayTypeName","src":"1082:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"amounts","nameLocation":"1135:7:8","nodeType":"VariableDeclaration","scope":205,"src":"1116:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":199,"nodeType":"ArrayTypeName","src":"1116:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"recipient","nameLocation":"1160:9:8","nodeType":"VariableDeclaration","scope":205,"src":"1152:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:103:8"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"1184:0:8"},"scope":248,"src":"1042:143:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nameLocation":"1200:20:8","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"1229:20:8","nodeType":"VariableDeclaration","scope":210,"src":"1221:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:30:8"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"1259:0:8"},"scope":248,"src":"1191:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":215,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nameLocation":"1275:25:8","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1309:25:8","nodeType":"VariableDeclaration","scope":215,"src":"1301:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:35:8"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1344:0:8"},"scope":248,"src":"1266:79:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":220,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nameLocation":"1360:20:8","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"1380:2:8"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1405:9:8"},"scope":248,"src":"1351:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nameLocation":"1430:25:8","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"1455:2:8"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"1481:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:9:8"},"scope":248,"src":"1421:69:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nameLocation":"1505:22:8","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"tokens","nameLocation":"1544:6:8","nodeType":"VariableDeclaration","scope":235,"src":"1528:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"IERC20","nameLocations":["1528:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1528:6:8"},"referencedDeclaration":140,"src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":228,"nodeType":"ArrayTypeName","src":"1528:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1527:24:8"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"feeAmounts","nameLocation":"1592:10:8","nodeType":"VariableDeclaration","scope":235,"src":"1575:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ArrayTypeName","src":"1575:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1574:29:8"},"scope":248,"src":"1496:108:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":241,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"1619:13:8","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"1632:2:8"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"1658:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"IAuthorizer","nameLocations":["1658:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"1658:11:8"},"referencedDeclaration":159,"src":"1658:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1657:13:8"},"scope":248,"src":"1610:61:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1686:5:8","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1691:2:8"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1717:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"IVault","nameLocations":["1717:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"1717:6:8"},"referencedDeclaration":766,"src":"1717:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1716:8:8"},"scope":248,"src":"1677:48:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"860:867:8","usedErrors":[],"usedEvents":[189,193]}],"src":"688:1040:8"},"id":8},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[766],"IWETH":[62]},"id":767,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:9"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":141,"src":"723:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"../solidity-utils/helpers/IAuthentication.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":11,"src":"775:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"../solidity-utils/helpers/ISignaturesValidator.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":29,"src":"831:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"../solidity-utils/helpers/ITemporarilyPausable.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":48,"src":"892:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","file":"../solidity-utils/misc/IWETH.sol","id":255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":63,"src":"953:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"./IAsset.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":145,"src":"997:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":160,"src":"1020:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"./IFlashLoanRecipient.sol","id":258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":180,"src":"1048:35:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","file":"./IProtocolFeesCollector.sol","id":259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":767,"sourceUnit":249,"src":"1084:38:9","symbolAliases":[],"unitAlias":""},{"id":260,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"1124:31:9"},{"abstract":false,"baseContracts":[{"baseName":{"id":262,"name":"ISignaturesValidator","nameLocations":["1349:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"1349:20:9"},"id":263,"nodeType":"InheritanceSpecifier","src":"1349:20:9"},{"baseName":{"id":264,"name":"ITemporarilyPausable","nameLocations":["1371:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":47,"src":"1371:20:9"},"id":265,"nodeType":"InheritanceSpecifier","src":"1371:20:9"},{"baseName":{"id":266,"name":"IAuthentication","nameLocations":["1393:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"1393:15:9"},"id":267,"nodeType":"InheritanceSpecifier","src":"1393:15:9"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1157:171:9","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":766,"linearizedBaseContracts":[766,10,47,28],"name":"IVault","nameLocation":"1339:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2906:55:9","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"2975:13:9","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2988:2:9"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"3014:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"IAuthorizer","nameLocations":["3014:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3014:11:9"},"referencedDeclaration":159,"src":"3014:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3013:13:9"},"scope":766,"src":"2966:61:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"3033:175:9","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nameLocation":"3222:13:9","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3248:13:9","nodeType":"VariableDeclaration","scope":281,"src":"3236:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"IAuthorizer","nameLocations":["3236:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3236:11:9"},"referencedDeclaration":159,"src":"3236:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3235:27:9"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"3271:0:9"},"scope":766,"src":"3213:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"3278:80:9","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"eventSelector":"94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef","id":287,"name":"AuthorizerChanged","nameLocation":"3369:17:9","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3407:13:9","nodeType":"VariableDeclaration","scope":287,"src":"3387:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":284,"nodeType":"UserDefinedTypeName","pathNode":{"id":283,"name":"IAuthorizer","nameLocations":["3387:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3387:11:9"},"referencedDeclaration":159,"src":"3387:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3386:35:9"},"src":"3363:59:9"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"4518:99:9","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nameLocation":"4631:18:9","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"user","nameLocation":"4658:4:9","nodeType":"VariableDeclaration","scope":297,"src":"4650:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"relayer","nameLocation":"4672:7:9","nodeType":"VariableDeclaration","scope":297,"src":"4664:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4649:31:9"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"4704:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":294,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4703:6:9"},"scope":766,"src":"4622:88:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"4716:178:9","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nameLocation":"4908:18:9","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"sender","nameLocation":"4944:6:9","nodeType":"VariableDeclaration","scope":307,"src":"4936:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"relayer","nameLocation":"4968:7:9","nodeType":"VariableDeclaration","scope":307,"src":"4960:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"approved","nameLocation":"4990:8:9","nodeType":"VariableDeclaration","scope":307,"src":"4985:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"4985:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:78:9"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"5013:0:9"},"scope":766,"src":"4899:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"5020:104:9","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"eventSelector":"46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8","id":316,"name":"RelayerApprovalChanged","nameLocation":"5135:22:9","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5174:7:9","nodeType":"VariableDeclaration","scope":316,"src":"5158:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5199:6:9","nodeType":"VariableDeclaration","scope":316,"src":"5183:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"5212:8:9","nodeType":"VariableDeclaration","scope":316,"src":"5207:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":313,"name":"bool","nodeType":"ElementaryTypeName","src":"5207:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5157:64:9"},"src":"5129:93:9"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5930:78:9","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nameLocation":"6022:18:9","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"user","nameLocation":"6049:4:9","nodeType":"VariableDeclaration","scope":329,"src":"6041:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"6041:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"tokens","nameLocation":"6071:6:9","nodeType":"VariableDeclaration","scope":329,"src":"6055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"IERC20","nameLocations":["6055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"6055:6:9"},"referencedDeclaration":140,"src":"6055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":322,"nodeType":"ArrayTypeName","src":"6055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"6040:38:9"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"6102:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":326,"nodeType":"ArrayTypeName","src":"6102:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6101:18:9"},"scope":766,"src":"6013:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"6126:416:9","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nameLocation":"6556:17:9","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"ops","nameLocation":"6597:3:9","nodeType":"VariableDeclaration","scope":337,"src":"6574:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$351_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"UserBalanceOp","nameLocations":["6574:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"6574:13:9"},"referencedDeclaration":351,"src":"6574:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$351_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":333,"nodeType":"ArrayTypeName","src":"6574:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$351_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"6573:28:9"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"6618:0:9"},"scope":766,"src":"6547:72:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"6625:175:9","text":" @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\nwithout manual WETH wrapping or unwrapping."},"id":351,"members":[{"constant":false,"id":341,"mutability":"mutable","name":"kind","nameLocation":"6854:4:9","nodeType":"VariableDeclaration","scope":351,"src":"6836:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$356","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":340,"nodeType":"UserDefinedTypeName","pathNode":{"id":339,"name":"UserBalanceOpKind","nameLocations":["6836:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":356,"src":"6836:17:9"},"referencedDeclaration":356,"src":"6836:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$356","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"asset","nameLocation":"6875:5:9","nodeType":"VariableDeclaration","scope":351,"src":"6868:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"IAsset","nameLocations":["6868:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"6868:6:9"},"referencedDeclaration":144,"src":"6868:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"amount","nameLocation":"6898:6:9","nodeType":"VariableDeclaration","scope":351,"src":"6890:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"sender","nameLocation":"6922:6:9","nodeType":"VariableDeclaration","scope":351,"src":"6914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"6914:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"recipient","nameLocation":"6954:9:9","nodeType":"VariableDeclaration","scope":351,"src":"6938:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"6938:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nameLocation":"6812:13:9","nodeType":"StructDefinition","scope":766,"src":"6805:165:9","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":356,"members":[{"id":352,"name":"DEPOSIT_INTERNAL","nameLocation":"8608:16:9","nodeType":"EnumValue","src":"8608:16:9"},{"id":353,"name":"WITHDRAW_INTERNAL","nameLocation":"8626:17:9","nodeType":"EnumValue","src":"8626:17:9"},{"id":354,"name":"TRANSFER_INTERNAL","nameLocation":"8645:17:9","nodeType":"EnumValue","src":"8645:17:9"},{"id":355,"name":"TRANSFER_EXTERNAL","nameLocation":"8664:17:9","nodeType":"EnumValue","src":"8664:17:9"}],"name":"UserBalanceOpKind","nameLocation":"8588:17:9","nodeType":"EnumDefinition","src":"8583:100:9"},{"anonymous":false,"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"8689:317:9","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"eventSelector":"18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42","id":366,"name":"InternalBalanceChanged","nameLocation":"9017:22:9","nodeType":"EventDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"9056:4:9","nodeType":"VariableDeclaration","scope":366,"src":"9040:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9077:5:9","nodeType":"VariableDeclaration","scope":366,"src":"9062:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"IERC20","nameLocations":["9062:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9062:6:9"},"referencedDeclaration":140,"src":"9062:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":364,"indexed":false,"mutability":"mutable","name":"delta","nameLocation":"9091:5:9","nodeType":"VariableDeclaration","scope":366,"src":"9084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":363,"name":"int256","nodeType":"ElementaryTypeName","src":"9084:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9039:58:9"},"src":"9011:87:9"},{"anonymous":false,"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"9104:131:9","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"eventSelector":"540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c","id":378,"name":"ExternalBalanceTransfer","nameLocation":"9246:23:9","nodeType":"EventDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9285:5:9","nodeType":"VariableDeclaration","scope":378,"src":"9270:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":369,"nodeType":"UserDefinedTypeName","pathNode":{"id":368,"name":"IERC20","nameLocations":["9270:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9270:6:9"},"referencedDeclaration":140,"src":"9270:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":372,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"9308:6:9","nodeType":"VariableDeclaration","scope":378,"src":"9292:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"9292:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":374,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"9324:9:9","nodeType":"VariableDeclaration","scope":378,"src":"9316:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":376,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9343:6:9","nodeType":"VariableDeclaration","scope":378,"src":"9335:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:81:9"},"src":"9240:111:9"},{"canonicalName":"IVault.PoolSpecialization","id":382,"members":[{"id":379,"name":"GENERAL","nameLocation":"10457:7:9","nodeType":"EnumValue","src":"10457:7:9"},{"id":380,"name":"MINIMAL_SWAP_INFO","nameLocation":"10466:17:9","nodeType":"EnumValue","src":"10466:17:9"},{"id":381,"name":"TWO_TOKEN","nameLocation":"10485:9:9","nodeType":"EnumValue","src":"10485:9:9"}],"name":"PoolSpecialization","nameLocation":"10436:18:9","nodeType":"EnumDefinition","src":"10431:65:9"},{"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"10502:702:9","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"11218:12:9","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"specialization","nameLocation":"11250:14:9","nodeType":"VariableDeclaration","scope":391,"src":"11231:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"PoolSpecialization","nameLocations":["11231:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"11231:18:9"},"referencedDeclaration":382,"src":"11231:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11230:35:9"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"11284:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11283:9:9"},"scope":766,"src":"11209:84:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"11299:84:9","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"eventSelector":"3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e","id":401,"name":"PoolRegistered","nameLocation":"11394:14:9","nodeType":"EventDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"11425:6:9","nodeType":"VariableDeclaration","scope":401,"src":"11409:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11409:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"poolAddress","nameLocation":"11449:11:9","nodeType":"VariableDeclaration","scope":401,"src":"11433:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"11433:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"indexed":false,"mutability":"mutable","name":"specialization","nameLocation":"11481:14:9","nodeType":"VariableDeclaration","scope":401,"src":"11462:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"PoolSpecialization","nameLocations":["11462:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"11462:18:9"},"referencedDeclaration":382,"src":"11462:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11408:88:9"},"src":"11388:109:9"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"11503:85:9","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":412,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"11602:7:9","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"poolId","nameLocation":"11618:6:9","nodeType":"VariableDeclaration","scope":412,"src":"11610:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11610:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11609:16:9"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"11649:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"11649:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"11658:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"PoolSpecialization","nameLocations":["11658:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":382,"src":"11658:18:9"},"referencedDeclaration":382,"src":"11658:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$382","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11648:29:9"},"scope":766,"src":"11593:85:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"11684:1422:9","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":425,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nameLocation":"13120:14:9","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"poolId","nameLocation":"13152:6:9","nodeType":"VariableDeclaration","scope":425,"src":"13144:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13144:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"tokens","nameLocation":"13184:6:9","nodeType":"VariableDeclaration","scope":425,"src":"13168:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":417,"nodeType":"UserDefinedTypeName","pathNode":{"id":416,"name":"IERC20","nameLocations":["13168:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13168:6:9"},"referencedDeclaration":140,"src":"13168:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":418,"nodeType":"ArrayTypeName","src":"13168:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"assetManagers","nameLocation":"13217:13:9","nodeType":"VariableDeclaration","scope":425,"src":"13200:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"13200:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"nodeType":"ArrayTypeName","src":"13200:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13134:102:9"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"13245:0:9"},"scope":766,"src":"13111:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"13252:89:9","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"eventSelector":"f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4","id":437,"name":"TokensRegistered","nameLocation":"13352:16:9","nodeType":"EventDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"13385:6:9","nodeType":"VariableDeclaration","scope":437,"src":"13369:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13369:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"13402:6:9","nodeType":"VariableDeclaration","scope":437,"src":"13393:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":430,"nodeType":"UserDefinedTypeName","pathNode":{"id":429,"name":"IERC20","nameLocations":["13393:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13393:6:9"},"referencedDeclaration":140,"src":"13393:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":431,"nodeType":"ArrayTypeName","src":"13393:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":435,"indexed":false,"mutability":"mutable","name":"assetManagers","nameLocation":"13420:13:9","nodeType":"VariableDeclaration","scope":437,"src":"13410:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":434,"nodeType":"ArrayTypeName","src":"13410:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13368:66:9"},"src":"13346:89:9"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"13441:567:9","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":447,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nameLocation":"14022:16:9","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"poolId","nameLocation":"14047:6:9","nodeType":"VariableDeclaration","scope":447,"src":"14039:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14039:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"tokens","nameLocation":"14071:6:9","nodeType":"VariableDeclaration","scope":447,"src":"14055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"IERC20","nameLocations":["14055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14055:6:9"},"referencedDeclaration":140,"src":"14055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":443,"nodeType":"ArrayTypeName","src":"14055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14038:40:9"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"14087:0:9"},"scope":766,"src":"14013:75:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"14094:93:9","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"eventSelector":"7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610","id":456,"name":"TokensDeregistered","nameLocation":"14198:18:9","nodeType":"EventDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"14233:6:9","nodeType":"VariableDeclaration","scope":456,"src":"14217:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14217:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"14250:6:9","nodeType":"VariableDeclaration","scope":456,"src":"14241:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":452,"nodeType":"UserDefinedTypeName","pathNode":{"id":451,"name":"IERC20","nameLocations":["14241:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14241:6:9"},"referencedDeclaration":140,"src":"14241:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":453,"nodeType":"ArrayTypeName","src":"14241:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14216:41:9"},"src":"14192:66:9"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"14264:1043:9","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":473,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nameLocation":"15321:16:9","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"poolId","nameLocation":"15346:6:9","nodeType":"VariableDeclaration","scope":473,"src":"15338:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15338:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"token","nameLocation":"15361:5:9","nodeType":"VariableDeclaration","scope":473,"src":"15354:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":461,"nodeType":"UserDefinedTypeName","pathNode":{"id":460,"name":"IERC20","nameLocations":["15354:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"15354:6:9"},"referencedDeclaration":140,"src":"15354:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15337:30:9"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"cash","nameLocation":"15436:4:9","nodeType":"VariableDeclaration","scope":473,"src":"15428:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"15428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"managed","nameLocation":"15462:7:9","nodeType":"VariableDeclaration","scope":473,"src":"15454:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"15491:15:9","nodeType":"VariableDeclaration","scope":473,"src":"15483:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"15483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"assetManager","nameLocation":"15528:12:9","nodeType":"VariableDeclaration","scope":473,"src":"15520:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"15520:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15414:136:9"},"scope":766,"src":"15312:239:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"15557:828:9","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":488,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"16399:13:9","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"poolId","nameLocation":"16421:6:9","nodeType":"VariableDeclaration","scope":488,"src":"16413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:16:9"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"tokens","nameLocation":"16505:6:9","nodeType":"VariableDeclaration","scope":488,"src":"16489:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":479,"nodeType":"UserDefinedTypeName","pathNode":{"id":478,"name":"IERC20","nameLocations":["16489:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"16489:6:9"},"referencedDeclaration":140,"src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":480,"nodeType":"ArrayTypeName","src":"16489:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"balances","nameLocation":"16542:8:9","nodeType":"VariableDeclaration","scope":488,"src":"16525:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":483,"nodeType":"ArrayTypeName","src":"16525:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"16572:15:9","nodeType":"VariableDeclaration","scope":488,"src":"16564:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"16564:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16475:122:9"},"scope":766,"src":"16390:208:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"16604:2304:9","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":501,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nameLocation":"18922:8:9","nodeType":"FunctionDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"poolId","nameLocation":"18948:6:9","nodeType":"VariableDeclaration","scope":501,"src":"18940:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18940:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"sender","nameLocation":"18972:6:9","nodeType":"VariableDeclaration","scope":501,"src":"18964:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"18964:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"recipient","nameLocation":"18996:9:9","nodeType":"VariableDeclaration","scope":501,"src":"18988:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"request","nameLocation":"19038:7:9","nodeType":"VariableDeclaration","scope":501,"src":"19015:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$513_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":497,"nodeType":"UserDefinedTypeName","pathNode":{"id":496,"name":"JoinPoolRequest","nameLocations":["19015:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"19015:15:9"},"referencedDeclaration":513,"src":"19015:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$513_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"18930:121:9"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"19068:0:9"},"scope":766,"src":"18913:156:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":513,"members":[{"constant":false,"id":505,"mutability":"mutable","name":"assets","nameLocation":"19117:6:9","nodeType":"VariableDeclaration","scope":513,"src":"19108:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":503,"nodeType":"UserDefinedTypeName","pathNode":{"id":502,"name":"IAsset","nameLocations":["19108:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"19108:6:9"},"referencedDeclaration":144,"src":"19108:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":504,"nodeType":"ArrayTypeName","src":"19108:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"19143:12:9","nodeType":"VariableDeclaration","scope":513,"src":"19133:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"19133:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":507,"nodeType":"ArrayTypeName","src":"19133:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"userData","nameLocation":"19171:8:9","nodeType":"VariableDeclaration","scope":513,"src":"19165:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":509,"name":"bytes","nodeType":"ElementaryTypeName","src":"19165:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"19194:19:9","nodeType":"VariableDeclaration","scope":513,"src":"19189:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"19189:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nameLocation":"19082:15:9","nodeType":"StructDefinition","scope":766,"src":"19075:145:9","visibility":"public"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"19226:2489:9","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":526,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nameLocation":"21729:8:9","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"poolId","nameLocation":"21755:6:9","nodeType":"VariableDeclaration","scope":526,"src":"21747:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"sender","nameLocation":"21779:6:9","nodeType":"VariableDeclaration","scope":526,"src":"21771:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"21771:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"recipient","nameLocation":"21811:9:9","nodeType":"VariableDeclaration","scope":526,"src":"21795:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"21795:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"request","nameLocation":"21853:7:9","nodeType":"VariableDeclaration","scope":526,"src":"21830:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$538_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":522,"nodeType":"UserDefinedTypeName","pathNode":{"id":521,"name":"ExitPoolRequest","nameLocations":["21830:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":538,"src":"21830:15:9"},"referencedDeclaration":538,"src":"21830:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$538_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"21737:129:9"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"21875:0:9"},"scope":766,"src":"21720:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":538,"members":[{"constant":false,"id":530,"mutability":"mutable","name":"assets","nameLocation":"21924:6:9","nodeType":"VariableDeclaration","scope":538,"src":"21915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"IAsset","nameLocations":["21915:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"21915:6:9"},"referencedDeclaration":144,"src":"21915:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":529,"nodeType":"ArrayTypeName","src":"21915:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"minAmountsOut","nameLocation":"21950:13:9","nodeType":"VariableDeclaration","scope":538,"src":"21940:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"21940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"nodeType":"ArrayTypeName","src":"21940:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"userData","nameLocation":"21979:8:9","nodeType":"VariableDeclaration","scope":538,"src":"21973:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"21973:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"toInternalBalance","nameLocation":"22002:17:9","nodeType":"VariableDeclaration","scope":538,"src":"21997:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":536,"name":"bool","nodeType":"ElementaryTypeName","src":"21997:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nameLocation":"21889:15:9","nodeType":"StructDefinition","scope":766,"src":"21882:144:9","visibility":"public"},{"anonymous":false,"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"22032:116:9","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"eventSelector":"e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78","id":555,"name":"PoolBalanceChanged","nameLocation":"22159:18:9","nodeType":"EventDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"22203:6:9","nodeType":"VariableDeclaration","scope":555,"src":"22187:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22187:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":543,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"22235:17:9","nodeType":"VariableDeclaration","scope":555,"src":"22219:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"22219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"22271:6:9","nodeType":"VariableDeclaration","scope":555,"src":"22262:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"IERC20","nameLocations":["22262:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"22262:6:9"},"referencedDeclaration":140,"src":"22262:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":546,"nodeType":"ArrayTypeName","src":"22262:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":550,"indexed":false,"mutability":"mutable","name":"deltas","nameLocation":"22296:6:9","nodeType":"VariableDeclaration","scope":555,"src":"22287:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":548,"name":"int256","nodeType":"ElementaryTypeName","src":"22287:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":549,"nodeType":"ArrayTypeName","src":"22287:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":553,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nameLocation":"22322:18:9","nodeType":"VariableDeclaration","scope":555,"src":"22312:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"22312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":552,"nodeType":"ArrayTypeName","src":"22312:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22177:169:9"},"src":"22153:194:9"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":558,"members":[{"id":556,"name":"JOIN","nameLocation":"22382:4:9","nodeType":"EnumValue","src":"22382:4:9"},{"id":557,"name":"EXIT","nameLocation":"22388:4:9","nodeType":"EnumValue","src":"22388:4:9"}],"name":"PoolBalanceChangeKind","nameLocation":"22358:21:9","nodeType":"EnumDefinition","src":"22353:41:9"},{"canonicalName":"IVault.SwapKind","id":561,"members":[{"id":559,"name":"GIVEN_IN","nameLocation":"25995:8:9","nodeType":"EnumValue","src":"25995:8:9"},{"id":560,"name":"GIVEN_OUT","nameLocation":"26005:9:9","nodeType":"EnumValue","src":"26005:9:9"}],"name":"SwapKind","nameLocation":"25984:8:9","nodeType":"EnumDefinition","src":"25979:37:9"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"26022:587:9","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"26623:4:9","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"singleSwap","nameLocation":"26655:10:9","nodeType":"VariableDeclaration","scope":577,"src":"26637:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$594_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":564,"nodeType":"UserDefinedTypeName","pathNode":{"id":563,"name":"SingleSwap","nameLocations":["26637:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":594,"src":"26637:10:9"},"referencedDeclaration":594,"src":"26637:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$594_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"funds","nameLocation":"26697:5:9","nodeType":"VariableDeclaration","scope":577,"src":"26675:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":567,"nodeType":"UserDefinedTypeName","pathNode":{"id":566,"name":"FundManagement","nameLocations":["26675:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"26675:14:9"},"referencedDeclaration":657,"src":"26675:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"limit","nameLocation":"26720:5:9","nodeType":"VariableDeclaration","scope":577,"src":"26712:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"26712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"deadline","nameLocation":"26743:8:9","nodeType":"VariableDeclaration","scope":577,"src":"26735:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"26735:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26627:130:9"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"26784:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"26784:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26783:9:9"},"scope":766,"src":"26614:179:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"26799:545:9","text":" @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n the `kind` value.\n `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n used to extend swap behavior."},"id":594,"members":[{"constant":false,"id":580,"mutability":"mutable","name":"poolId","nameLocation":"27385:6:9","nodeType":"VariableDeclaration","scope":594,"src":"27377:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27377:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"kind","nameLocation":"27410:4:9","nodeType":"VariableDeclaration","scope":594,"src":"27401:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"},"typeName":{"id":582,"nodeType":"UserDefinedTypeName","pathNode":{"id":581,"name":"SwapKind","nameLocations":["27401:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"27401:8:9"},"referencedDeclaration":561,"src":"27401:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"assetIn","nameLocation":"27431:7:9","nodeType":"VariableDeclaration","scope":594,"src":"27424:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"IAsset","nameLocations":["27424:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27424:6:9"},"referencedDeclaration":144,"src":"27424:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"assetOut","nameLocation":"27455:8:9","nodeType":"VariableDeclaration","scope":594,"src":"27448:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"IAsset","nameLocations":["27448:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27448:6:9"},"referencedDeclaration":144,"src":"27448:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"amount","nameLocation":"27481:6:9","nodeType":"VariableDeclaration","scope":594,"src":"27473:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"27473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"userData","nameLocation":"27503:8:9","nodeType":"VariableDeclaration","scope":594,"src":"27497:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":592,"name":"bytes","nodeType":"ElementaryTypeName","src":"27497:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nameLocation":"27356:10:9","nodeType":"StructDefinition","scope":766,"src":"27349:169:9","visibility":"public"},{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"27524:1980:9","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":620,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"29518:9:9","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"kind","nameLocation":"29546:4:9","nodeType":"VariableDeclaration","scope":620,"src":"29537:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"},"typeName":{"id":597,"nodeType":"UserDefinedTypeName","pathNode":{"id":596,"name":"SwapKind","nameLocations":["29537:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"29537:8:9"},"referencedDeclaration":561,"src":"29537:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"swaps","nameLocation":"29583:5:9","nodeType":"VariableDeclaration","scope":620,"src":"29560:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$632_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":600,"nodeType":"UserDefinedTypeName","pathNode":{"id":599,"name":"BatchSwapStep","nameLocations":["29560:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"29560:13:9"},"referencedDeclaration":632,"src":"29560:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$632_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":601,"nodeType":"ArrayTypeName","src":"29560:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$632_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"assets","nameLocation":"29614:6:9","nodeType":"VariableDeclaration","scope":620,"src":"29598:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":604,"nodeType":"UserDefinedTypeName","pathNode":{"id":603,"name":"IAsset","nameLocations":["29598:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"29598:6:9"},"referencedDeclaration":144,"src":"29598:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":605,"nodeType":"ArrayTypeName","src":"29598:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"funds","nameLocation":"29652:5:9","nodeType":"VariableDeclaration","scope":620,"src":"29630:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":608,"nodeType":"UserDefinedTypeName","pathNode":{"id":607,"name":"FundManagement","nameLocations":["29630:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"29630:14:9"},"referencedDeclaration":657,"src":"29630:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"limits","nameLocation":"29683:6:9","nodeType":"VariableDeclaration","scope":620,"src":"29667:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":610,"name":"int256","nodeType":"ElementaryTypeName","src":"29667:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":611,"nodeType":"ArrayTypeName","src":"29667:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"deadline","nameLocation":"29707:8:9","nodeType":"VariableDeclaration","scope":620,"src":"29699:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"29699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29527:194:9"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"29748:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":616,"name":"int256","nodeType":"ElementaryTypeName","src":"29748:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":617,"nodeType":"ArrayTypeName","src":"29748:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"29747:17:9"},"scope":766,"src":"29509:256:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"29771:551:9","text":" @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n `assets` array passed to that function, and ETH assets are converted to WETH.\n If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n from the previous swap, depending on the swap kind.\n The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n used to extend swap behavior."},"id":632,"members":[{"constant":false,"id":623,"mutability":"mutable","name":"poolId","nameLocation":"30366:6:9","nodeType":"VariableDeclaration","scope":632,"src":"30358:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30358:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"assetInIndex","nameLocation":"30390:12:9","nodeType":"VariableDeclaration","scope":632,"src":"30382:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"30382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"assetOutIndex","nameLocation":"30420:13:9","nodeType":"VariableDeclaration","scope":632,"src":"30412:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"30412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"amount","nameLocation":"30451:6:9","nodeType":"VariableDeclaration","scope":632,"src":"30443:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"30443:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"userData","nameLocation":"30473:8:9","nodeType":"VariableDeclaration","scope":632,"src":"30467:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"30467:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nameLocation":"30334:13:9","nodeType":"StructDefinition","scope":766,"src":"30327:161:9","visibility":"public"},{"anonymous":false,"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"30494:92:9","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"eventSelector":"2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b","id":647,"name":"Swap","nameLocation":"30597:4:9","nodeType":"EventDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"30627:6:9","nodeType":"VariableDeclaration","scope":647,"src":"30611:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30611:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":638,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"30658:7:9","nodeType":"VariableDeclaration","scope":647,"src":"30643:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":637,"nodeType":"UserDefinedTypeName","pathNode":{"id":636,"name":"IERC20","nameLocations":["30643:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30643:6:9"},"referencedDeclaration":140,"src":"30643:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":641,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"30690:8:9","nodeType":"VariableDeclaration","scope":647,"src":"30675:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":640,"nodeType":"UserDefinedTypeName","pathNode":{"id":639,"name":"IERC20","nameLocations":["30675:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30675:6:9"},"referencedDeclaration":140,"src":"30675:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":643,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"30716:8:9","nodeType":"VariableDeclaration","scope":647,"src":"30708:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"30708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"30742:9:9","nodeType":"VariableDeclaration","scope":647,"src":"30734:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"30734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30601:156:9"},"src":"30591:167:9"},{"canonicalName":"IVault.FundManagement","documentation":{"id":648,"nodeType":"StructuredDocumentation","src":"30764:920:9","text":" @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n `recipient` account.\n If the caller is not `sender`, it must be an authorized relayer for them.\n If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n `joinPool`.\n If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n transferred. This matches the behavior of `exitPool`.\n Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n revert."},"id":657,"members":[{"constant":false,"id":650,"mutability":"mutable","name":"sender","nameLocation":"31729:6:9","nodeType":"VariableDeclaration","scope":657,"src":"31721:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"31721:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"31750:19:9","nodeType":"VariableDeclaration","scope":657,"src":"31745:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"31745:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"recipient","nameLocation":"31795:9:9","nodeType":"VariableDeclaration","scope":657,"src":"31779:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"31779:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"toInternalBalance","nameLocation":"31819:17:9","nodeType":"VariableDeclaration","scope":657,"src":"31814:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":655,"name":"bool","nodeType":"ElementaryTypeName","src":"31814:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nameLocation":"31696:14:9","nodeType":"StructDefinition","scope":766,"src":"31689:154:9","visibility":"public"},{"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"31849:1027:9","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nameLocation":"32890:14:9","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"kind","nameLocation":"32923:4:9","nodeType":"VariableDeclaration","scope":678,"src":"32914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"},"typeName":{"id":660,"nodeType":"UserDefinedTypeName","pathNode":{"id":659,"name":"SwapKind","nameLocations":["32914:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":561,"src":"32914:8:9"},"referencedDeclaration":561,"src":"32914:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$561","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"swaps","nameLocation":"32960:5:9","nodeType":"VariableDeclaration","scope":678,"src":"32937:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$632_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"BatchSwapStep","nameLocations":["32937:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"32937:13:9"},"referencedDeclaration":632,"src":"32937:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$632_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":664,"nodeType":"ArrayTypeName","src":"32937:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$632_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"assets","nameLocation":"32991:6:9","nodeType":"VariableDeclaration","scope":678,"src":"32975:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":667,"nodeType":"UserDefinedTypeName","pathNode":{"id":666,"name":"IAsset","nameLocations":["32975:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"32975:6:9"},"referencedDeclaration":144,"src":"32975:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":668,"nodeType":"ArrayTypeName","src":"32975:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"funds","nameLocation":"33029:5:9","nodeType":"VariableDeclaration","scope":678,"src":"33007:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":671,"nodeType":"UserDefinedTypeName","pathNode":{"id":670,"name":"FundManagement","nameLocations":["33007:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":657,"src":"33007:14:9"},"referencedDeclaration":657,"src":"33007:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$657_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"32904:136:9"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"assetDeltas","nameLocation":"33075:11:9","nodeType":"VariableDeclaration","scope":678,"src":"33059:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":674,"name":"int256","nodeType":"ElementaryTypeName","src":"33059:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":675,"nodeType":"ArrayTypeName","src":"33059:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33058:29:9"},"scope":766,"src":"32881:207:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"33114:604:9","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":694,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"33732:9:9","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"recipient","nameLocation":"33771:9:9","nodeType":"VariableDeclaration","scope":694,"src":"33751:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":681,"nodeType":"UserDefinedTypeName","pathNode":{"id":680,"name":"IFlashLoanRecipient","nameLocations":["33751:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"33751:19:9"},"referencedDeclaration":179,"src":"33751:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"tokens","nameLocation":"33806:6:9","nodeType":"VariableDeclaration","scope":694,"src":"33790:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":684,"nodeType":"UserDefinedTypeName","pathNode":{"id":683,"name":"IERC20","nameLocations":["33790:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"33790:6:9"},"referencedDeclaration":140,"src":"33790:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":685,"nodeType":"ArrayTypeName","src":"33790:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"amounts","nameLocation":"33839:7:9","nodeType":"VariableDeclaration","scope":694,"src":"33822:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"33822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":688,"nodeType":"ArrayTypeName","src":"33822:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"userData","nameLocation":"33869:8:9","nodeType":"VariableDeclaration","scope":694,"src":"33856:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":690,"name":"bytes","nodeType":"ElementaryTypeName","src":"33856:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33741:142:9"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"33892:0:9"},"scope":766,"src":"33723:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"33899:88:9","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"eventSelector":"0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f0","id":707,"name":"FlashLoan","nameLocation":"33998:9:9","nodeType":"EventDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"34036:9:9","nodeType":"VariableDeclaration","scope":707,"src":"34008:37:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"IFlashLoanRecipient","nameLocations":["34008:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"34008:19:9"},"referencedDeclaration":179,"src":"34008:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":701,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"34062:5:9","nodeType":"VariableDeclaration","scope":707,"src":"34047:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"IERC20","nameLocations":["34047:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"34047:6:9"},"referencedDeclaration":140,"src":"34047:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":703,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"34077:6:9","nodeType":"VariableDeclaration","scope":707,"src":"34069:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"34069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":705,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"34093:9:9","nodeType":"VariableDeclaration","scope":707,"src":"34085:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"34085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34007:96:9"},"src":"33992:112:9"},{"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"35100:434:9","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":715,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nameLocation":"35548:17:9","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"ops","nameLocation":"35589:3:9","nodeType":"VariableDeclaration","scope":715,"src":"35566:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$726_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":710,"nodeType":"UserDefinedTypeName","pathNode":{"id":709,"name":"PoolBalanceOp","nameLocations":["35566:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"35566:13:9"},"referencedDeclaration":726,"src":"35566:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$726_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":711,"nodeType":"ArrayTypeName","src":"35566:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$726_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"35565:28:9"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"35602:0:9"},"scope":766,"src":"35539:64:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":726,"members":[{"constant":false,"id":718,"mutability":"mutable","name":"kind","nameLocation":"35658:4:9","nodeType":"VariableDeclaration","scope":726,"src":"35640:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$731","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":717,"nodeType":"UserDefinedTypeName","pathNode":{"id":716,"name":"PoolBalanceOpKind","nameLocations":["35640:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":731,"src":"35640:17:9"},"referencedDeclaration":731,"src":"35640:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$731","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"poolId","nameLocation":"35680:6:9","nodeType":"VariableDeclaration","scope":726,"src":"35672:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"token","nameLocation":"35703:5:9","nodeType":"VariableDeclaration","scope":726,"src":"35696:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":722,"nodeType":"UserDefinedTypeName","pathNode":{"id":721,"name":"IERC20","nameLocations":["35696:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"35696:6:9"},"referencedDeclaration":140,"src":"35696:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"amount","nameLocation":"35726:6:9","nodeType":"VariableDeclaration","scope":726,"src":"35718:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"35718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nameLocation":"35616:13:9","nodeType":"StructDefinition","scope":766,"src":"35609:130:9","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"35745:486:9","text":" Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss)."},"id":731,"members":[{"id":728,"name":"WITHDRAW","nameLocation":"36261:8:9","nodeType":"EnumValue","src":"36261:8:9"},{"id":729,"name":"DEPOSIT","nameLocation":"36271:7:9","nodeType":"EnumValue","src":"36271:7:9"},{"id":730,"name":"UPDATE","nameLocation":"36280:6:9","nodeType":"EnumValue","src":"36280:6:9"}],"name":"PoolBalanceOpKind","nameLocation":"36241:17:9","nodeType":"EnumDefinition","src":"36236:52:9"},{"anonymous":false,"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"36294:109:9","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"eventSelector":"6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a","id":745,"name":"PoolBalanceManaged","nameLocation":"36414:18:9","nodeType":"EventDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"36458:6:9","nodeType":"VariableDeclaration","scope":745,"src":"36442:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36442:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":true,"mutability":"mutable","name":"assetManager","nameLocation":"36490:12:9","nodeType":"VariableDeclaration","scope":745,"src":"36474:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"36527:5:9","nodeType":"VariableDeclaration","scope":745,"src":"36512:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":738,"nodeType":"UserDefinedTypeName","pathNode":{"id":737,"name":"IERC20","nameLocations":["36512:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"36512:6:9"},"referencedDeclaration":140,"src":"36512:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":741,"indexed":false,"mutability":"mutable","name":"cashDelta","nameLocation":"36549:9:9","nodeType":"VariableDeclaration","scope":745,"src":"36542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":740,"name":"int256","nodeType":"ElementaryTypeName","src":"36542:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":743,"indexed":false,"mutability":"mutable","name":"managedDelta","nameLocation":"36575:12:9","nodeType":"VariableDeclaration","scope":745,"src":"36568:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":742,"name":"int256","nodeType":"ElementaryTypeName","src":"36568:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36432:161:9"},"src":"36408:186:9"},{"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"37471:64:9","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nameLocation":"37549:24:9","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"37573:2:9"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":752,"src":"37599:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"IProtocolFeesCollector","nameLocations":["37599:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"37599:22:9"},"referencedDeclaration":248,"src":"37599:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"37598:24:9"},"scope":766,"src":"37540:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"37629:635:9","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":758,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"38278:9:9","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"paused","nameLocation":"38293:6:9","nodeType":"VariableDeclaration","scope":758,"src":"38288:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":754,"name":"bool","nodeType":"ElementaryTypeName","src":"38288:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:13:9"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"38309:0:9"},"scope":766,"src":"38269:41:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"38316:58:9","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":765,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"38388:4:9","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"38392:2:9"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"38418:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"},"typeName":{"id":762,"nodeType":"UserDefinedTypeName","pathNode":{"id":761,"name":"IWETH","nameLocations":["38418:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"38418:5:9"},"referencedDeclaration":62,"src":"38418:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"38417:7:9"},"scope":766,"src":"38379:46:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":767,"src":"1329:37155:9","usedErrors":[],"usedEvents":[36,287,316,366,378,401,437,456,555,647,707,745]}],"src":"688:37797:9"},"id":9},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[831]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":768,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"137:750:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831],"name":"ReentrancyGuard","nameLocation":"906:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":772,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:10","nodeType":"VariableDeclaration","scope":831,"src":"1676:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":775,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:10","nodeType":"VariableDeclaration","scope":831,"src":"1723:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":777,"mutability":"mutable","name":"_status","nameLocation":"1783:7:10","nodeType":"VariableDeclaration","scope":831,"src":"1767:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":784,"nodeType":"Block","src":"1811:39:10","statements":[{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":780,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":781,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"1831:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"nodeType":"ExpressionStatement","src":"1821:22:10"}]},"id":785,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"1808:2:10"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"1811:0:10"},"scope":831,"src":"1797:53:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"2251:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"2261:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"2261:21:10"},{"id":791,"nodeType":"PlaceholderStatement","src":"2292:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":792,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"2303:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"2303:20:10"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"1856:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":796,"name":"nonReentrant","nameLocation":"2236:12:10","nodeType":"ModifierDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"2248:2:10"},"src":"2227:103:10","virtual":false,"visibility":"internal"},{"body":{"id":810,"nodeType":"Block","src":"2375:248:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2468:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":801,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"2479:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"ExpressionStatement","src":"2460:63:10"},{"expression":{"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":806,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2598:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":807,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"2608:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":809,"nodeType":"ExpressionStatement","src":"2598:18:10"}]},"id":811,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:10","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"2364:2:10"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"2375:0:10"},"scope":831,"src":"2336:287:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":818,"nodeType":"Block","src":"2667:171:10","statements":[{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":814,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":815,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"2819:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":817,"nodeType":"ExpressionStatement","src":"2809:22:10"}]},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:10","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"2656:2:10"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"2667:0:10"},"scope":831,"src":"2629:209:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":829,"nodeType":"Block","src":"3081:43:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":825,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3098:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":826,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3109:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":824,"id":828,"nodeType":"Return","src":"3091:26:10"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"2844:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:10","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"3049:2:10"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"3075:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":822,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:10"},"scope":831,"src":"3017:107:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":832,"src":"888:2238:10","usedErrors":[],"usedEvents":[]}],"src":"112:3015:10"},"id":10},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","exportedSymbols":{"IUniswapV2Router01":[1139]},"id":1140,"nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Router01","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1139,"linearizedBaseContracts":[1139],"name":"IUniswapV2Router01","nameLocation":"36:18:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"70:7:11","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"77:2:11"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"103:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:9:11"},"scope":1139,"src":"61:51:11","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"ad5c4648","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"126:4:11","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"130:2:11"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"156:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"155:9:11"},"scope":1139,"src":"117:48:11","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"e8e33700","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"180:12:11","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"tokenA","nameLocation":"210:6:11","nodeType":"VariableDeclaration","scope":868,"src":"202:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"tokenB","nameLocation":"234:6:11","nodeType":"VariableDeclaration","scope":868,"src":"226:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"amountADesired","nameLocation":"255:14:11","nodeType":"VariableDeclaration","scope":868,"src":"250:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint","nodeType":"ElementaryTypeName","src":"250:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"amountBDesired","nameLocation":"284:14:11","nodeType":"VariableDeclaration","scope":868,"src":"279:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"amountAMin","nameLocation":"313:10:11","nodeType":"VariableDeclaration","scope":868,"src":"308:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"amountBMin","nameLocation":"338:10:11","nodeType":"VariableDeclaration","scope":868,"src":"333:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint","nodeType":"ElementaryTypeName","src":"333:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"366:2:11","nodeType":"VariableDeclaration","scope":868,"src":"358:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"deadline","nameLocation":"383:8:11","nodeType":"VariableDeclaration","scope":868,"src":"378:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint","nodeType":"ElementaryTypeName","src":"378:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:205:11"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"amountA","nameLocation":"421:7:11","nodeType":"VariableDeclaration","scope":868,"src":"416:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint","nodeType":"ElementaryTypeName","src":"416:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"amountB","nameLocation":"435:7:11","nodeType":"VariableDeclaration","scope":868,"src":"430:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint","nodeType":"ElementaryTypeName","src":"430:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"liquidity","nameLocation":"449:9:11","nodeType":"VariableDeclaration","scope":868,"src":"444:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint","nodeType":"ElementaryTypeName","src":"444:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:44:11"},"scope":1139,"src":"171:289:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f305d719","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nameLocation":"474:15:11","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"token","nameLocation":"507:5:11","nodeType":"VariableDeclaration","scope":889,"src":"499:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"amountTokenDesired","nameLocation":"527:18:11","nodeType":"VariableDeclaration","scope":889,"src":"522:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint","nodeType":"ElementaryTypeName","src":"522:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"amountTokenMin","nameLocation":"560:14:11","nodeType":"VariableDeclaration","scope":889,"src":"555:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint","nodeType":"ElementaryTypeName","src":"555:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"amountETHMin","nameLocation":"589:12:11","nodeType":"VariableDeclaration","scope":889,"src":"584:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint","nodeType":"ElementaryTypeName","src":"584:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"to","nameLocation":"619:2:11","nodeType":"VariableDeclaration","scope":889,"src":"611:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"deadline","nameLocation":"636:8:11","nodeType":"VariableDeclaration","scope":889,"src":"631:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint","nodeType":"ElementaryTypeName","src":"631:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:161:11"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"amountToken","nameLocation":"682:11:11","nodeType":"VariableDeclaration","scope":889,"src":"677:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint","nodeType":"ElementaryTypeName","src":"677:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"amountETH","nameLocation":"700:9:11","nodeType":"VariableDeclaration","scope":889,"src":"695:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint","nodeType":"ElementaryTypeName","src":"695:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"liquidity","nameLocation":"716:9:11","nodeType":"VariableDeclaration","scope":889,"src":"711:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint","nodeType":"ElementaryTypeName","src":"711:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:50:11"},"scope":1139,"src":"465:262:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"baa2abde","id":910,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"741:15:11","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"tokenA","nameLocation":"774:6:11","nodeType":"VariableDeclaration","scope":910,"src":"766:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"tokenB","nameLocation":"798:6:11","nodeType":"VariableDeclaration","scope":910,"src":"790:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"liquidity","nameLocation":"819:9:11","nodeType":"VariableDeclaration","scope":910,"src":"814:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint","nodeType":"ElementaryTypeName","src":"814:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"amountAMin","nameLocation":"843:10:11","nodeType":"VariableDeclaration","scope":910,"src":"838:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint","nodeType":"ElementaryTypeName","src":"838:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"amountBMin","nameLocation":"868:10:11","nodeType":"VariableDeclaration","scope":910,"src":"863:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint","nodeType":"ElementaryTypeName","src":"863:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"896:2:11","nodeType":"VariableDeclaration","scope":910,"src":"888:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"deadline","nameLocation":"913:8:11","nodeType":"VariableDeclaration","scope":910,"src":"908:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint","nodeType":"ElementaryTypeName","src":"908:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:171:11"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"amountA","nameLocation":"951:7:11","nodeType":"VariableDeclaration","scope":910,"src":"946:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint","nodeType":"ElementaryTypeName","src":"946:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"amountB","nameLocation":"965:7:11","nodeType":"VariableDeclaration","scope":910,"src":"960:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:28:11"},"scope":1139,"src":"732:242:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02751cec","id":929,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nameLocation":"988:18:11","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"token","nameLocation":"1024:5:11","nodeType":"VariableDeclaration","scope":929,"src":"1016:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"1016:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"liquidity","nameLocation":"1044:9:11","nodeType":"VariableDeclaration","scope":929,"src":"1039:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint","nodeType":"ElementaryTypeName","src":"1039:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1068:14:11","nodeType":"VariableDeclaration","scope":929,"src":"1063:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint","nodeType":"ElementaryTypeName","src":"1063:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"amountETHMin","nameLocation":"1097:12:11","nodeType":"VariableDeclaration","scope":929,"src":"1092:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint","nodeType":"ElementaryTypeName","src":"1092:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"to","nameLocation":"1127:2:11","nodeType":"VariableDeclaration","scope":929,"src":"1119:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"deadline","nameLocation":"1144:8:11","nodeType":"VariableDeclaration","scope":929,"src":"1139:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint","nodeType":"ElementaryTypeName","src":"1139:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:152:11"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"amountToken","nameLocation":"1182:11:11","nodeType":"VariableDeclaration","scope":929,"src":"1177:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint","nodeType":"ElementaryTypeName","src":"1177:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"amountETH","nameLocation":"1200:9:11","nodeType":"VariableDeclaration","scope":929,"src":"1195:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1176:34:11"},"scope":1139,"src":"979:232:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2195995c","id":958,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nameLocation":"1225:25:11","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"tokenA","nameLocation":"1268:6:11","nodeType":"VariableDeclaration","scope":958,"src":"1260:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"tokenB","nameLocation":"1292:6:11","nodeType":"VariableDeclaration","scope":958,"src":"1284:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"liquidity","nameLocation":"1313:9:11","nodeType":"VariableDeclaration","scope":958,"src":"1308:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint","nodeType":"ElementaryTypeName","src":"1308:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"amountAMin","nameLocation":"1337:10:11","nodeType":"VariableDeclaration","scope":958,"src":"1332:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint","nodeType":"ElementaryTypeName","src":"1332:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"amountBMin","nameLocation":"1362:10:11","nodeType":"VariableDeclaration","scope":958,"src":"1357:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint","nodeType":"ElementaryTypeName","src":"1357:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"to","nameLocation":"1390:2:11","nodeType":"VariableDeclaration","scope":958,"src":"1382:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"deadline","nameLocation":"1407:8:11","nodeType":"VariableDeclaration","scope":958,"src":"1402:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint","nodeType":"ElementaryTypeName","src":"1402:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"approveMax","nameLocation":"1430:10:11","nodeType":"VariableDeclaration","scope":958,"src":"1425:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":944,"name":"bool","nodeType":"ElementaryTypeName","src":"1425:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"v","nameLocation":"1448:1:11","nodeType":"VariableDeclaration","scope":958,"src":"1442:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":946,"name":"uint8","nodeType":"ElementaryTypeName","src":"1442:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"r","nameLocation":"1459:1:11","nodeType":"VariableDeclaration","scope":958,"src":"1451:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"s","nameLocation":"1470:1:11","nodeType":"VariableDeclaration","scope":958,"src":"1462:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1250:227:11"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"amountA","nameLocation":"1501:7:11","nodeType":"VariableDeclaration","scope":958,"src":"1496:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint","nodeType":"ElementaryTypeName","src":"1496:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"amountB","nameLocation":"1515:7:11","nodeType":"VariableDeclaration","scope":958,"src":"1510:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:28:11"},"scope":1139,"src":"1216:308:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ded9382a","id":985,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nameLocation":"1538:28:11","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"token","nameLocation":"1584:5:11","nodeType":"VariableDeclaration","scope":985,"src":"1576:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"liquidity","nameLocation":"1604:9:11","nodeType":"VariableDeclaration","scope":985,"src":"1599:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint","nodeType":"ElementaryTypeName","src":"1599:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1628:14:11","nodeType":"VariableDeclaration","scope":985,"src":"1623:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint","nodeType":"ElementaryTypeName","src":"1623:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"amountETHMin","nameLocation":"1657:12:11","nodeType":"VariableDeclaration","scope":985,"src":"1652:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint","nodeType":"ElementaryTypeName","src":"1652:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"to","nameLocation":"1687:2:11","nodeType":"VariableDeclaration","scope":985,"src":"1679:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"deadline","nameLocation":"1704:8:11","nodeType":"VariableDeclaration","scope":985,"src":"1699:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint","nodeType":"ElementaryTypeName","src":"1699:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"approveMax","nameLocation":"1727:10:11","nodeType":"VariableDeclaration","scope":985,"src":"1722:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"1722:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"v","nameLocation":"1745:1:11","nodeType":"VariableDeclaration","scope":985,"src":"1739:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":973,"name":"uint8","nodeType":"ElementaryTypeName","src":"1739:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"r","nameLocation":"1756:1:11","nodeType":"VariableDeclaration","scope":985,"src":"1748:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1748:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"s","nameLocation":"1767:1:11","nodeType":"VariableDeclaration","scope":985,"src":"1759:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1566:208:11"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"amountToken","nameLocation":"1798:11:11","nodeType":"VariableDeclaration","scope":985,"src":"1793:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint","nodeType":"ElementaryTypeName","src":"1793:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"amountETH","nameLocation":"1816:9:11","nodeType":"VariableDeclaration","scope":985,"src":"1811:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint","nodeType":"ElementaryTypeName","src":"1811:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:34:11"},"scope":1139,"src":"1529:298:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38ed1739","id":1002,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"1841:24:11","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"amountIn","nameLocation":"1880:8:11","nodeType":"VariableDeclaration","scope":1002,"src":"1875:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint","nodeType":"ElementaryTypeName","src":"1875:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"amountOutMin","nameLocation":"1903:12:11","nodeType":"VariableDeclaration","scope":1002,"src":"1898:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint","nodeType":"ElementaryTypeName","src":"1898:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"path","nameLocation":"1944:4:11","nodeType":"VariableDeclaration","scope":1002,"src":"1925:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ArrayTypeName","src":"1925:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"to","nameLocation":"1966:2:11","nodeType":"VariableDeclaration","scope":1002,"src":"1958:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"deadline","nameLocation":"1983:8:11","nodeType":"VariableDeclaration","scope":1002,"src":"1978:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint","nodeType":"ElementaryTypeName","src":"1978:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:132:11"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"amounts","nameLocation":"2030:7:11","nodeType":"VariableDeclaration","scope":1002,"src":"2016:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":998,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":999,"nodeType":"ArrayTypeName","src":"2016:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2015:23:11"},"scope":1139,"src":"1832:207:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8803dbee","id":1019,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nameLocation":"2053:24:11","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"amountOut","nameLocation":"2092:9:11","nodeType":"VariableDeclaration","scope":1019,"src":"2087:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint","nodeType":"ElementaryTypeName","src":"2087:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"amountInMax","nameLocation":"2116:11:11","nodeType":"VariableDeclaration","scope":1019,"src":"2111:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint","nodeType":"ElementaryTypeName","src":"2111:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"path","nameLocation":"2156:4:11","nodeType":"VariableDeclaration","scope":1019,"src":"2137:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1008,"nodeType":"ArrayTypeName","src":"2137:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"to","nameLocation":"2178:2:11","nodeType":"VariableDeclaration","scope":1019,"src":"2170:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"2170:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"deadline","nameLocation":"2195:8:11","nodeType":"VariableDeclaration","scope":1019,"src":"2190:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint","nodeType":"ElementaryTypeName","src":"2190:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2077:132:11"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"amounts","nameLocation":"2242:7:11","nodeType":"VariableDeclaration","scope":1019,"src":"2228:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1015,"name":"uint","nodeType":"ElementaryTypeName","src":"2228:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1016,"nodeType":"ArrayTypeName","src":"2228:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2227:23:11"},"scope":1139,"src":"2044:207:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"2265:21:11","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"amountOutMin","nameLocation":"2292:12:11","nodeType":"VariableDeclaration","scope":1034,"src":"2287:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint","nodeType":"ElementaryTypeName","src":"2287:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"path","nameLocation":"2325:4:11","nodeType":"VariableDeclaration","scope":1034,"src":"2306:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1023,"nodeType":"ArrayTypeName","src":"2306:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"to","nameLocation":"2339:2:11","nodeType":"VariableDeclaration","scope":1034,"src":"2331:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"2331:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"deadline","nameLocation":"2348:8:11","nodeType":"VariableDeclaration","scope":1034,"src":"2343:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint","nodeType":"ElementaryTypeName","src":"2343:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:71:11"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"amounts","nameLocation":"2422:7:11","nodeType":"VariableDeclaration","scope":1034,"src":"2408:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1030,"name":"uint","nodeType":"ElementaryTypeName","src":"2408:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1031,"nodeType":"ArrayTypeName","src":"2408:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2407:23:11"},"scope":1139,"src":"2256:175:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4a25d94a","id":1051,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nameLocation":"2445:21:11","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"amountOut","nameLocation":"2472:9:11","nodeType":"VariableDeclaration","scope":1051,"src":"2467:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint","nodeType":"ElementaryTypeName","src":"2467:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"amountInMax","nameLocation":"2488:11:11","nodeType":"VariableDeclaration","scope":1051,"src":"2483:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint","nodeType":"ElementaryTypeName","src":"2483:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"path","nameLocation":"2520:4:11","nodeType":"VariableDeclaration","scope":1051,"src":"2501:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1040,"nodeType":"ArrayTypeName","src":"2501:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"to","nameLocation":"2534:2:11","nodeType":"VariableDeclaration","scope":1051,"src":"2526:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"deadline","nameLocation":"2543:8:11","nodeType":"VariableDeclaration","scope":1051,"src":"2538:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint","nodeType":"ElementaryTypeName","src":"2538:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2466:86:11"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"amounts","nameLocation":"2601:7:11","nodeType":"VariableDeclaration","scope":1051,"src":"2587:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1047,"name":"uint","nodeType":"ElementaryTypeName","src":"2587:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1048,"nodeType":"ArrayTypeName","src":"2587:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2586:23:11"},"scope":1139,"src":"2436:174:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"2624:21:11","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"amountIn","nameLocation":"2651:8:11","nodeType":"VariableDeclaration","scope":1068,"src":"2646:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint","nodeType":"ElementaryTypeName","src":"2646:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"amountOutMin","nameLocation":"2666:12:11","nodeType":"VariableDeclaration","scope":1068,"src":"2661:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint","nodeType":"ElementaryTypeName","src":"2661:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"path","nameLocation":"2699:4:11","nodeType":"VariableDeclaration","scope":1068,"src":"2680:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1057,"nodeType":"ArrayTypeName","src":"2680:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"to","nameLocation":"2713:2:11","nodeType":"VariableDeclaration","scope":1068,"src":"2705:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"deadline","nameLocation":"2722:8:11","nodeType":"VariableDeclaration","scope":1068,"src":"2717:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint","nodeType":"ElementaryTypeName","src":"2717:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2645:86:11"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"amounts","nameLocation":"2780:7:11","nodeType":"VariableDeclaration","scope":1068,"src":"2766:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1064,"name":"uint","nodeType":"ElementaryTypeName","src":"2766:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ArrayTypeName","src":"2766:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2765:23:11"},"scope":1139,"src":"2615:174:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb3bdb41","id":1083,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nameLocation":"2803:21:11","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"amountOut","nameLocation":"2830:9:11","nodeType":"VariableDeclaration","scope":1083,"src":"2825:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint","nodeType":"ElementaryTypeName","src":"2825:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"path","nameLocation":"2860:4:11","nodeType":"VariableDeclaration","scope":1083,"src":"2841:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"2841:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1072,"nodeType":"ArrayTypeName","src":"2841:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"to","nameLocation":"2874:2:11","nodeType":"VariableDeclaration","scope":1083,"src":"2866:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"deadline","nameLocation":"2883:8:11","nodeType":"VariableDeclaration","scope":1083,"src":"2878:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint","nodeType":"ElementaryTypeName","src":"2878:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:68:11"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"amounts","nameLocation":"2957:7:11","nodeType":"VariableDeclaration","scope":1083,"src":"2943:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1079,"name":"uint","nodeType":"ElementaryTypeName","src":"2943:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ArrayTypeName","src":"2943:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2942:23:11"},"scope":1139,"src":"2794:172:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ad615dec","id":1094,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"2981:5:11","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"amountA","nameLocation":"2992:7:11","nodeType":"VariableDeclaration","scope":1094,"src":"2987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint","nodeType":"ElementaryTypeName","src":"2987:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"reserveA","nameLocation":"3006:8:11","nodeType":"VariableDeclaration","scope":1094,"src":"3001:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint","nodeType":"ElementaryTypeName","src":"3001:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"reserveB","nameLocation":"3021:8:11","nodeType":"VariableDeclaration","scope":1094,"src":"3016:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint","nodeType":"ElementaryTypeName","src":"3016:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2986:44:11"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"amountB","nameLocation":"3059:7:11","nodeType":"VariableDeclaration","scope":1094,"src":"3054:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint","nodeType":"ElementaryTypeName","src":"3054:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:14:11"},"scope":1139,"src":"2972:96:11","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"054d50d4","id":1105,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3082:12:11","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"amountIn","nameLocation":"3100:8:11","nodeType":"VariableDeclaration","scope":1105,"src":"3095:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint","nodeType":"ElementaryTypeName","src":"3095:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"reserveIn","nameLocation":"3115:9:11","nodeType":"VariableDeclaration","scope":1105,"src":"3110:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint","nodeType":"ElementaryTypeName","src":"3110:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"reserveOut","nameLocation":"3131:10:11","nodeType":"VariableDeclaration","scope":1105,"src":"3126:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint","nodeType":"ElementaryTypeName","src":"3126:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:48:11"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"amountOut","nameLocation":"3171:9:11","nodeType":"VariableDeclaration","scope":1105,"src":"3166:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint","nodeType":"ElementaryTypeName","src":"3166:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:16:11"},"scope":1139,"src":"3073:109:11","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"85f8c259","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"3196:11:11","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"amountOut","nameLocation":"3213:9:11","nodeType":"VariableDeclaration","scope":1116,"src":"3208:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint","nodeType":"ElementaryTypeName","src":"3208:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"reserveIn","nameLocation":"3229:9:11","nodeType":"VariableDeclaration","scope":1116,"src":"3224:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint","nodeType":"ElementaryTypeName","src":"3224:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"reserveOut","nameLocation":"3245:10:11","nodeType":"VariableDeclaration","scope":1116,"src":"3240:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint","nodeType":"ElementaryTypeName","src":"3240:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:49:11"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"amountIn","nameLocation":"3285:8:11","nodeType":"VariableDeclaration","scope":1116,"src":"3280:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint","nodeType":"ElementaryTypeName","src":"3280:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:15:11"},"scope":1139,"src":"3187:108:11","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"3309:13:11","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"amountIn","nameLocation":"3328:8:11","nodeType":"VariableDeclaration","scope":1127,"src":"3323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint","nodeType":"ElementaryTypeName","src":"3323:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"path","nameLocation":"3357:4:11","nodeType":"VariableDeclaration","scope":1127,"src":"3338:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1120,"nodeType":"ArrayTypeName","src":"3338:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3322:40:11"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"amounts","nameLocation":"3400:7:11","nodeType":"VariableDeclaration","scope":1127,"src":"3386:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1123,"name":"uint","nodeType":"ElementaryTypeName","src":"3386:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"nodeType":"ArrayTypeName","src":"3386:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3385:23:11"},"scope":1139,"src":"3300:109:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f00ca74","id":1138,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nameLocation":"3423:12:11","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"amountOut","nameLocation":"3441:9:11","nodeType":"VariableDeclaration","scope":1138,"src":"3436:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint","nodeType":"ElementaryTypeName","src":"3436:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"path","nameLocation":"3471:4:11","nodeType":"VariableDeclaration","scope":1138,"src":"3452:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1131,"nodeType":"ArrayTypeName","src":"3452:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3435:41:11"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"amounts","nameLocation":"3514:7:11","nodeType":"VariableDeclaration","scope":1138,"src":"3500:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1134,"name":"uint","nodeType":"ElementaryTypeName","src":"3500:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1135,"nodeType":"ArrayTypeName","src":"3500:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3499:23:11"},"scope":1139,"src":"3414:109:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1140,"src":"26:3499:11","usedErrors":[],"usedEvents":[]}],"src":"0:3526:11"},"id":11},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","exportedSymbols":{"IUniswapV2Router01":[1139],"IUniswapV2Router02":[1227]},"id":1228,"nodeType":"SourceUnit","nodes":[{"id":1141,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:12"},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","file":"./IUniswapV2Router01.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1228,"sourceUnit":1140,"src":"26:34:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1143,"name":"IUniswapV2Router01","nameLocations":["94:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":1139,"src":"94:18:12"},"id":1144,"nodeType":"InheritanceSpecifier","src":"94:18:12"}],"canonicalName":"IUniswapV2Router02","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1227,"linearizedBaseContracts":[1227,1139],"name":"IUniswapV2Router02","nameLocation":"72:18:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"af2979eb","id":1161,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nameLocation":"128:47:12","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"token","nameLocation":"193:5:12","nodeType":"VariableDeclaration","scope":1161,"src":"185:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"liquidity","nameLocation":"213:9:12","nodeType":"VariableDeclaration","scope":1161,"src":"208:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint","nodeType":"ElementaryTypeName","src":"208:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"amountTokenMin","nameLocation":"237:14:12","nodeType":"VariableDeclaration","scope":1161,"src":"232:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint","nodeType":"ElementaryTypeName","src":"232:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"amountETHMin","nameLocation":"266:12:12","nodeType":"VariableDeclaration","scope":1161,"src":"261:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint","nodeType":"ElementaryTypeName","src":"261:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"to","nameLocation":"296:2:12","nodeType":"VariableDeclaration","scope":1161,"src":"288:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"deadline","nameLocation":"313:8:12","nodeType":"VariableDeclaration","scope":1161,"src":"308:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175:152:12"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"amountETH","nameLocation":"351:9:12","nodeType":"VariableDeclaration","scope":1161,"src":"346:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:16:12"},"scope":1227,"src":"119:243:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0d5984","id":1186,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nameLocation":"376:57:12","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"token","nameLocation":"451:5:12","nodeType":"VariableDeclaration","scope":1186,"src":"443:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"liquidity","nameLocation":"471:9:12","nodeType":"VariableDeclaration","scope":1186,"src":"466:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint","nodeType":"ElementaryTypeName","src":"466:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"amountTokenMin","nameLocation":"495:14:12","nodeType":"VariableDeclaration","scope":1186,"src":"490:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint","nodeType":"ElementaryTypeName","src":"490:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"amountETHMin","nameLocation":"524:12:12","nodeType":"VariableDeclaration","scope":1186,"src":"519:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint","nodeType":"ElementaryTypeName","src":"519:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"554:2:12","nodeType":"VariableDeclaration","scope":1186,"src":"546:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"deadline","nameLocation":"571:8:12","nodeType":"VariableDeclaration","scope":1186,"src":"566:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"approveMax","nameLocation":"594:10:12","nodeType":"VariableDeclaration","scope":1186,"src":"589:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1174,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"v","nameLocation":"612:1:12","nodeType":"VariableDeclaration","scope":1186,"src":"606:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1176,"name":"uint8","nodeType":"ElementaryTypeName","src":"606:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"r","nameLocation":"623:1:12","nodeType":"VariableDeclaration","scope":1186,"src":"615:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"s","nameLocation":"634:1:12","nodeType":"VariableDeclaration","scope":1186,"src":"626:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"433:208:12"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"amountETH","nameLocation":"665:9:12","nodeType":"VariableDeclaration","scope":1186,"src":"660:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint","nodeType":"ElementaryTypeName","src":"660:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"659:16:12"},"scope":1227,"src":"367:309:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c11d795","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nameLocation":"691:53:12","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"amountIn","nameLocation":"759:8:12","nodeType":"VariableDeclaration","scope":1200,"src":"754:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint","nodeType":"ElementaryTypeName","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"amountOutMin","nameLocation":"782:12:12","nodeType":"VariableDeclaration","scope":1200,"src":"777:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint","nodeType":"ElementaryTypeName","src":"777:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"path","nameLocation":"823:4:12","nodeType":"VariableDeclaration","scope":1200,"src":"804:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1192,"nodeType":"ArrayTypeName","src":"804:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"to","nameLocation":"845:2:12","nodeType":"VariableDeclaration","scope":1200,"src":"837:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"deadline","nameLocation":"862:8:12","nodeType":"VariableDeclaration","scope":1200,"src":"857:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint","nodeType":"ElementaryTypeName","src":"857:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:132:12"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"885:0:12"},"scope":1227,"src":"682:204:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6f9de95","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nameLocation":"900:50:12","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"amountOutMin","nameLocation":"965:12:12","nodeType":"VariableDeclaration","scope":1212,"src":"960:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"path","nameLocation":"1006:4:12","nodeType":"VariableDeclaration","scope":1212,"src":"987:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1204,"nodeType":"ArrayTypeName","src":"987:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"to","nameLocation":"1028:2:12","nodeType":"VariableDeclaration","scope":1212,"src":"1020:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"deadline","nameLocation":"1045:8:12","nodeType":"VariableDeclaration","scope":1212,"src":"1040:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint","nodeType":"ElementaryTypeName","src":"1040:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:109:12"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"1076:0:12"},"scope":1227,"src":"891:186:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"791ac947","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nameLocation":"1091:50:12","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"amountIn","nameLocation":"1156:8:12","nodeType":"VariableDeclaration","scope":1226,"src":"1151:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint","nodeType":"ElementaryTypeName","src":"1151:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"amountOutMin","nameLocation":"1179:12:12","nodeType":"VariableDeclaration","scope":1226,"src":"1174:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"path","nameLocation":"1220:4:12","nodeType":"VariableDeclaration","scope":1226,"src":"1201:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1218,"nodeType":"ArrayTypeName","src":"1201:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"to","nameLocation":"1242:2:12","nodeType":"VariableDeclaration","scope":1226,"src":"1234:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"deadline","nameLocation":"1259:8:12","nodeType":"VariableDeclaration","scope":1226,"src":"1254:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint","nodeType":"ElementaryTypeName","src":"1254:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:132:12"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"1282:0:12"},"scope":1227,"src":"1082:201:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1228,"src":"62:1223:12","usedErrors":[],"usedEvents":[]}],"src":"0:1286:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[1241]},"id":1242,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1229,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"71:144:13","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":1241,"linearizedBaseContracts":[1241],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"254:898:13","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":1240,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:13","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:13","nodeType":"VariableDeclaration","scope":1240,"src":"1197:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1232,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:13","nodeType":"VariableDeclaration","scope":1240,"src":"1226:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1234,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"data","nameLocation":"1270:4:13","nodeType":"VariableDeclaration","scope":1240,"src":"1255:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:13"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"1289:0:13"},"scope":1241,"src":"1157:133:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1242,"src":"215:1077:13","usedErrors":[],"usedEvents":[]}],"src":"45:1248:13"},"id":13},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[1341],"IUniswapV3SwapCallback":[1241]},"id":1342,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:14"},{"id":1244,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:14"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1342,"sourceUnit":1242,"src":"91:83:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IUniswapV3SwapCallback","nameLocations":["305:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"305:22:14"},"id":1248,"nodeType":"InheritanceSpecifier","src":"305:22:14"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"176:104:14","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":1341,"linearizedBaseContracts":[1341,1241],"name":"ISwapRouter","nameLocation":"290:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":1265,"members":[{"constant":false,"id":1250,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:14","nodeType":"VariableDeclaration","scope":1265,"src":"374:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:14","nodeType":"VariableDeclaration","scope":1265,"src":"399:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"fee","nameLocation":"432:3:14","nodeType":"VariableDeclaration","scope":1265,"src":"425:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1253,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"recipient","nameLocation":"453:9:14","nodeType":"VariableDeclaration","scope":1265,"src":"445:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"deadline","nameLocation":"480:8:14","nodeType":"VariableDeclaration","scope":1265,"src":"472:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:14","nodeType":"VariableDeclaration","scope":1265,"src":"498:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:14","nodeType":"VariableDeclaration","scope":1265,"src":"524:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:14","nodeType":"VariableDeclaration","scope":1265,"src":"558:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1263,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:14","nodeType":"StructDefinition","scope":1341,"src":"334:256:14","visibility":"public"},{"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"596:250:14","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":1274,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:14","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"params","nameLocation":"909:6:14","nodeType":"VariableDeclaration","scope":1274,"src":"877:38:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"ExactInputSingleParams","nameLocations":["877:22:14"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"877:22:14"},"referencedDeclaration":1265,"src":"877:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:14"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:14","nodeType":"VariableDeclaration","scope":1274,"src":"943:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:14"},"scope":1341,"src":"851:111:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":1285,"members":[{"constant":false,"id":1276,"mutability":"mutable","name":"path","nameLocation":"1008:4:14","nodeType":"VariableDeclaration","scope":1285,"src":"1002:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1275,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:14","nodeType":"VariableDeclaration","scope":1285,"src":"1022:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:14","nodeType":"VariableDeclaration","scope":1285,"src":"1049:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:14","nodeType":"VariableDeclaration","scope":1285,"src":"1075:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:14","nodeType":"VariableDeclaration","scope":1285,"src":"1101:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:14","nodeType":"StructDefinition","scope":1341,"src":"968:164:14","visibility":"public"},{"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"1138:273:14","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":1294,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:14","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"params","nameLocation":"1462:6:14","nodeType":"VariableDeclaration","scope":1294,"src":"1436:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$1285_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":1288,"nodeType":"UserDefinedTypeName","pathNode":{"id":1287,"name":"ExactInputParams","nameLocations":["1436:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":1285,"src":"1436:16:14"},"referencedDeclaration":1285,"src":"1436:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$1285_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:14"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:14","nodeType":"VariableDeclaration","scope":1294,"src":"1496:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:14"},"scope":1341,"src":"1416:99:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":1311,"members":[{"constant":false,"id":1296,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:14","nodeType":"VariableDeclaration","scope":1311,"src":"1562:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:14","nodeType":"VariableDeclaration","scope":1311,"src":"1587:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"fee","nameLocation":"1620:3:14","nodeType":"VariableDeclaration","scope":1311,"src":"1613:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1299,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:14","nodeType":"VariableDeclaration","scope":1311,"src":"1633:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:14","nodeType":"VariableDeclaration","scope":1311,"src":"1660:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:14","nodeType":"VariableDeclaration","scope":1311,"src":"1686:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:14","nodeType":"VariableDeclaration","scope":1311,"src":"1713:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:14","nodeType":"VariableDeclaration","scope":1311,"src":"1746:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1309,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:14","nodeType":"StructDefinition","scope":1341,"src":"1521:257:14","visibility":"public"},{"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"1784:250:14","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":1320,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:14","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"params","nameLocation":"2099:6:14","nodeType":"VariableDeclaration","scope":1320,"src":"2066:39:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$1311_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"ExactOutputSingleParams","nameLocations":["2066:23:14"],"nodeType":"IdentifierPath","referencedDeclaration":1311,"src":"2066:23:14"},"referencedDeclaration":1311,"src":"2066:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$1311_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:14"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:14","nodeType":"VariableDeclaration","scope":1320,"src":"2133:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:14"},"scope":1341,"src":"2039:112:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":1331,"members":[{"constant":false,"id":1322,"mutability":"mutable","name":"path","nameLocation":"2198:4:14","nodeType":"VariableDeclaration","scope":1331,"src":"2192:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:14","nodeType":"VariableDeclaration","scope":1331,"src":"2212:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:14","nodeType":"VariableDeclaration","scope":1331,"src":"2239:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:14","nodeType":"VariableDeclaration","scope":1331,"src":"2265:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:14","nodeType":"VariableDeclaration","scope":1331,"src":"2292:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:14","nodeType":"StructDefinition","scope":1341,"src":"2157:165:14","visibility":"public"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2328:284:14","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":1340,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:14","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"params","nameLocation":"2665:6:14","nodeType":"VariableDeclaration","scope":1340,"src":"2638:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$1331_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"ExactOutputParams","nameLocations":["2638:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":1331,"src":"2638:17:14"},"referencedDeclaration":1331,"src":"2638:17:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$1331_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:14"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:14","nodeType":"VariableDeclaration","scope":1340,"src":"2699:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:14"},"scope":1341,"src":"2617:100:14","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1342,"src":"280:2439:14","usedErrors":[],"usedEvents":[]}],"src":"45:2675:14"},"id":14},"contracts/FlashLoanArbitrage.sol":{"ast":{"absolutePath":"contracts/FlashLoanArbitrage.sol","exportedSymbols":{"FlashLoanArbitrage":[2043],"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ISwapRouter":[1341],"ITemporarilyPausable":[47],"IUniswapV2Router01":[1139],"IUniswapV2Router02":[1227],"IUniswapV3SwapCallback":[1241],"IVault":[766],"IWETH":[62],"ReentrancyGuard":[831]},"id":2044,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":1344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":767,"src":"58:65:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","id":1345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":180,"src":"124:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":1346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":141,"src":"203:87:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":832,"src":"291:62:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":1348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":1342,"src":"354:68:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","id":1349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2044,"sourceUnit":1228,"src":"423:75:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1350,"name":"IFlashLoanRecipient","nameLocations":["531:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"531:19:15"},"id":1351,"nodeType":"InheritanceSpecifier","src":"531:19:15"},{"baseName":{"id":1352,"name":"ReentrancyGuard","nameLocations":["552:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"552:15:15"},"id":1353,"nodeType":"InheritanceSpecifier","src":"552:15:15"}],"canonicalName":"FlashLoanArbitrage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2043,"linearizedBaseContracts":[2043,831,179],"name":"FlashLoanArbitrage","nameLocation":"509:18:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1356,"mutability":"immutable","name":"vault","nameLocation":"599:5:15","nodeType":"VariableDeclaration","scope":2043,"src":"574:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"},"typeName":{"id":1355,"nodeType":"UserDefinedTypeName","pathNode":{"id":1354,"name":"IVault","nameLocations":["574:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"574:6:15"},"referencedDeclaration":766,"src":"574:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"visibility":"private"},{"constant":false,"id":1359,"mutability":"immutable","name":"uniswapRouter","nameLocation":"640:13:15","nodeType":"VariableDeclaration","scope":2043,"src":"610:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"},"typeName":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"ISwapRouter","nameLocations":["610:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1341,"src":"610:11:15"},"referencedDeclaration":1341,"src":"610:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"visibility":"private"},{"constant":false,"id":1362,"mutability":"immutable","name":"sushiswapRouter","nameLocation":"696:15:15","nodeType":"VariableDeclaration","scope":2043,"src":"659:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"},"typeName":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"IUniswapV2Router02","nameLocations":["659:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":1227,"src":"659:18:15"},"referencedDeclaration":1227,"src":"659:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"visibility":"private"},{"constant":false,"functionSelector":"8da5cb5b","id":1364,"mutability":"mutable","name":"owner","nameLocation":"732:5:15","nodeType":"VariableDeclaration","scope":2043,"src":"717:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"507a2291","id":1367,"mutability":"constant","name":"MIN_PROFIT_BPS","nameLocation":"811:14:15","nodeType":"VariableDeclaration","scope":2043,"src":"787:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"functionSelector":"e1a45218","id":1370,"mutability":"constant","name":"BPS_DENOMINATOR","nameLocation":"860:15:15","nodeType":"VariableDeclaration","scope":2043,"src":"836:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"878:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"anonymous":false,"eventSelector":"12024cca099db52261a6691770d3065970efa9afd5e6deafd4e1225e3a51201c","id":1380,"name":"ArbitrageExecuted","nameLocation":"896:17:15","nodeType":"EventDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"933:6:15","nodeType":"VariableDeclaration","scope":1380,"src":"923:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1372,"nodeType":"ArrayTypeName","src":"923:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1376,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"959:7:15","nodeType":"VariableDeclaration","scope":1380,"src":"949:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ArrayTypeName","src":"949:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1378,"indexed":false,"mutability":"mutable","name":"profit","nameLocation":"984:6:15","nodeType":"VariableDeclaration","scope":1380,"src":"976:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"913:83:15"},"src":"890:107:15"},{"anonymous":false,"eventSelector":"173af69db85fc7c0aecdbe45fc8b7a7d0873ad923ae56c1fb04ec3a98f5aa07e","id":1390,"name":"PriceChecked","nameLocation":"1009:12:15","nodeType":"EventDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"indexed":false,"mutability":"mutable","name":"token0","nameLocation":"1039:6:15","nodeType":"VariableDeclaration","scope":1390,"src":"1031:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"indexed":false,"mutability":"mutable","name":"token1","nameLocation":"1063:6:15","nodeType":"VariableDeclaration","scope":1390,"src":"1055:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"1055:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"indexed":false,"mutability":"mutable","name":"uniswapPrice","nameLocation":"1087:12:15","nodeType":"VariableDeclaration","scope":1390,"src":"1079:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1388,"indexed":false,"mutability":"mutable","name":"sushiswapPrice","nameLocation":"1117:14:15","nodeType":"VariableDeclaration","scope":1390,"src":"1109:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:116:15"},"src":"1003:135:15"},{"body":{"id":1419,"nodeType":"Block","src":"1266:143:15","statements":[{"expression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1402,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1276:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1403,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1284:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"src":"1276:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"id":1405,"nodeType":"ExpressionStatement","src":"1276:14:15"},{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1406,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"1300:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1407,"name":"_uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1316:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"src":"1300:30:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"id":1409,"nodeType":"ExpressionStatement","src":"1300:30:15"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"1340:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1411,"name":"_sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"1358:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"src":"1340:34:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"id":1413,"nodeType":"ExpressionStatement","src":"1340:34:15"},{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1384:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1415,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1392:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1392:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1384:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1418,"nodeType":"ExpressionStatement","src":"1384:18:15"}]},"id":1420,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"_vault","nameLocation":"1172:6:15","nodeType":"VariableDeclaration","scope":1420,"src":"1165:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"},"typeName":{"id":1392,"nodeType":"UserDefinedTypeName","pathNode":{"id":1391,"name":"IVault","nameLocations":["1165:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":766,"src":"1165:6:15"},"referencedDeclaration":766,"src":"1165:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"1200:14:15","nodeType":"VariableDeclaration","scope":1420,"src":"1188:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"},"typeName":{"id":1395,"nodeType":"UserDefinedTypeName","pathNode":{"id":1394,"name":"ISwapRouter","nameLocations":["1188:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1341,"src":"1188:11:15"},"referencedDeclaration":1341,"src":"1188:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"_sushiswapRouter","nameLocation":"1243:16:15","nodeType":"VariableDeclaration","scope":1420,"src":"1224:35:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"},"typeName":{"id":1398,"nodeType":"UserDefinedTypeName","pathNode":{"id":1397,"name":"IUniswapV2Router02","nameLocations":["1224:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":1227,"src":"1224:18:15"},"referencedDeclaration":1227,"src":"1224:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"visibility":"internal"}],"src":"1155:110:15"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[],"src":"1266:0:15"},"scope":2043,"src":"1144:265:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"FlashLoanArbitrage.ArbitrageParams","id":1431,"members":[{"constant":false,"id":1422,"mutability":"mutable","name":"tokenIn","nameLocation":"1456:7:15","nodeType":"VariableDeclaration","scope":1431,"src":"1448:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"tokenOut","nameLocation":"1481:8:15","nodeType":"VariableDeclaration","scope":1431,"src":"1473:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1473:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"amountIn","nameLocation":"1507:8:15","nodeType":"VariableDeclaration","scope":1431,"src":"1499:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"uniswapFee","nameLocation":"1532:10:15","nodeType":"VariableDeclaration","scope":1431,"src":"1525:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1427,"name":"uint24","nodeType":"ElementaryTypeName","src":"1525:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"deadline","nameLocation":"1560:8:15","nodeType":"VariableDeclaration","scope":1431,"src":"1552:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ArbitrageParams","nameLocation":"1422:15:15","nodeType":"StructDefinition","scope":2043,"src":"1415:160:15","visibility":"public"},{"baseFunctions":[178],"body":{"id":1588,"nodeType":"Block","src":"1765:1488:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1783:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1787:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1783:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1452,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1805:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}],"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"1797:7:15","typeDescriptions":{}}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1783:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792042616c616e636572205661756c74","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1813:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bec779a091766eb809048cf84d103b020badca80f63c0dbba7135454237490e5","typeString":"literal_string \"Only Balancer Vault\""},"value":"Only Balancer Vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bec779a091766eb809048cf84d103b020badca80f63c0dbba7135454237490e5","typeString":"literal_string \"Only Balancer Vault\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1775:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"1775:60:15"},{"assignments":[1460],"declarations":[{"constant":false,"id":1460,"mutability":"mutable","name":"params","nameLocation":"1926:6:15","nodeType":"VariableDeclaration","scope":1588,"src":"1903:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams"},"typeName":{"id":1459,"nodeType":"UserDefinedTypeName","pathNode":{"id":1458,"name":"ArbitrageParams","nameLocations":["1903:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"1903:15:15"},"referencedDeclaration":1431,"src":"1903:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_storage_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams"}},"visibility":"internal"}],"id":1467,"initialValue":{"arguments":[{"id":1463,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1946:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1464,"name":"ArbitrageParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"1957:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$1431_storage_ptr_$","typeString":"type(struct FlashLoanArbitrage.ArbitrageParams storage pointer)"}}],"id":1465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1956:17:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$1431_storage_ptr_$","typeString":"type(struct FlashLoanArbitrage.ArbitrageParams storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$1431_storage_ptr_$","typeString":"type(struct FlashLoanArbitrage.ArbitrageParams storage pointer)"}],"expression":{"id":1461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1935:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1939:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1935:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1903:71:15"},{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"amountReceived","nameLocation":"2030:14:15","nodeType":"VariableDeclaration","scope":1588,"src":"2022:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2022:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"initialValue":{"arguments":[{"expression":{"id":1471,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2080:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2087:7:15","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"2080:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1473,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2108:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2115:8:15","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"2108:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1475,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2137:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1477,"indexExpression":{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2137:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1478,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2161:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2168:10:15","memberName":"uniswapFee","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"2161:17:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":1480,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2192:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2199:8:15","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"2192:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1470,"name":"executeUniswapTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2047:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint24_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint24,uint256) returns (uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:170:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2022:195:15"},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"finalAmount","nameLocation":"2278:11:15","nodeType":"VariableDeclaration","scope":1588,"src":"2270:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1495,"initialValue":{"arguments":[{"expression":{"id":1487,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2327:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:15","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"2327:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1489,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2356:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2363:7:15","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"2356:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"amountReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"2384:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1492,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"2412:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2419:8:15","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"2412:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"executeSushiswapTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"2292:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint256) returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:145:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2270:167:15"},{"assignments":[1497],"declarations":[{"constant":false,"id":1497,"mutability":"mutable","name":"profit","nameLocation":"2483:6:15","nodeType":"VariableDeclaration","scope":1588,"src":"2475:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1498,"name":"finalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2492:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1499,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2507:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1501,"indexExpression":{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2515:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2507:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1502,"name":"feeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2520:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1504,"indexExpression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2531:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2520:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2507:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2506:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2492:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2475:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2552:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2561:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2552:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726f666974","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2564:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b8077984201be275e1ea17f5751a9d31c877fc60f88f5c477062be112bf7b97","typeString":"literal_string \"No profit\""},"value":"No profit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b8077984201be275e1ea17f5751a9d31c877fc60f88f5c477062be112bf7b97","typeString":"literal_string \"No profit\""}],"id":1509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2544:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2544:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"2544:32:15"},{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"profitBps","nameLocation":"2637:9:15","nodeType":"VariableDeclaration","scope":1588,"src":"2629:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1526,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2650:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1519,"name":"BPS_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2659:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2650:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2649:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"id":1522,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2678:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1524,"indexExpression":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2686:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2678:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2649:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2629:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1528,"name":"profitBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"2706:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1529,"name":"MIN_PROFIT_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2719:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2706:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742070726f666974","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2735:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b152b760143d31fd8ff5fec447c2175b6bd780222e6f19b3a88d930da500fa9c","typeString":"literal_string \"Insufficient profit\""},"value":"Insufficient profit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b152b760143d31fd8ff5fec447c2175b6bd780222e6f19b3a88d930da500fa9c","typeString":"literal_string \"Insufficient profit\""}],"id":1527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2698:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"ExpressionStatement","src":"2698:59:15"},{"body":{"id":1564,"nodeType":"Block","src":"2842:141:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":1553,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2908:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2900:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:15","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1555,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2932:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1557,"indexExpression":{"id":1556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2940:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2932:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1558,"name":"feeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"2945:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1560,"indexExpression":{"id":1559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2956:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2945:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1546,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2863:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1548,"indexExpression":{"id":1547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2863:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}],"id":1545,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2856:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2874:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"2856:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:116:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1563,"nodeType":"ExpressionStatement","src":"2856:116:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2818:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1539,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2822:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2829:6:15","memberName":"length","nodeType":"MemberAccess","src":"2822:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2818:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1565,"initializationExpression":{"assignments":[1535],"declarations":[{"constant":false,"id":1535,"mutability":"mutable","name":"i","nameLocation":"2811:1:15","nodeType":"VariableDeclaration","scope":1565,"src":"2803:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1537,"initialValue":{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2815:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2803:13:15"},"loopExpression":{"expression":{"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2837:3:15","subExpression":{"id":1542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2837:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"nodeType":"ExpressionStatement","src":"2837:3:15"},"nodeType":"ForStatement","src":"2798:185:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3036:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3036:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"IfStatement","src":"3032:87:15","trueBody":{"id":1578,"nodeType":"Block","src":"3048:71:15","statements":[{"expression":{"arguments":[{"id":1574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"3094:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3101:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1570,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"3069:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"id":1571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3076:7:15","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"3069:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1569,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3062:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"3062:31:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"ExpressionStatement","src":"3062:46:15"}]}},{"eventCall":{"arguments":[{"arguments":[{"id":1582,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3188:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}],"id":1581,"name":"_convertToAddressArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"3165:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (contract IERC20[] memory) pure returns (address[] memory)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1584,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"3209:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1585,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3230:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"ArbitrageExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3134:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256[] memory,uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:112:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1587,"nodeType":"EmitStatement","src":"3129:117:15"}]},"functionSelector":"f04f2707","id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1590:16:15","nodeType":"FunctionDefinition","overrides":{"id":1445,"nodeType":"OverrideSpecifier","overrides":[],"src":"1756:8:15"},"parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"tokens","nameLocation":"1632:6:15","nodeType":"VariableDeclaration","scope":1589,"src":"1616:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1433,"nodeType":"UserDefinedTypeName","pathNode":{"id":1432,"name":"IERC20","nameLocations":["1616:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1616:6:15"},"referencedDeclaration":140,"src":"1616:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1434,"nodeType":"ArrayTypeName","src":"1616:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"amounts","nameLocation":"1665:7:15","nodeType":"VariableDeclaration","scope":1589,"src":"1648:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ArrayTypeName","src":"1648:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"feeAmounts","nameLocation":"1699:10:15","nodeType":"VariableDeclaration","scope":1589,"src":"1682:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ArrayTypeName","src":"1682:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"userData","nameLocation":"1732:8:15","nodeType":"VariableDeclaration","scope":1589,"src":"1719:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"1719:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1606:140:15"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"1765:0:15"},"scope":2043,"src":"1581:1672:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1686,"nodeType":"Block","src":"3441:1008:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3459:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3463:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3459:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1607,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"3473:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3459:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3480:12:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":1604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3451:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"ExpressionStatement","src":"3451:42:15"},{"assignments":[1613,null],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"isProfitable","nameLocation":"3548:12:15","nodeType":"VariableDeclaration","scope":1686,"src":"3543:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1612,"name":"bool","nodeType":"ElementaryTypeName","src":"3543:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1620,"initialValue":{"arguments":[{"id":1615,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3597:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"3618:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3640:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1618,"name":"uniswapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"3660:10:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1614,"name":"checkProfitability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"3565:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_bool_$_t_uint256_$","typeString":"function (address,address,uint256,uint24) returns (bool,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:115:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3542:138:15"},{"expression":{"arguments":[{"id":1622,"name":"isProfitable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"3698:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070726f66697461626c65206f70706f7274756e697479","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3712:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_21971e62578e10cd34ab65d1697b9c5f963a7a937afc895e049ad66dce7f0f37","typeString":"literal_string \"No profitable opportunity\""},"value":"No profitable opportunity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_21971e62578e10cd34ab65d1697b9c5f963a7a937afc895e049ad66dce7f0f37","typeString":"literal_string \"No profitable opportunity\""}],"id":1621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3690:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"ExpressionStatement","src":"3690:50:15"},{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"tokens","nameLocation":"3830:6:15","nodeType":"VariableDeclaration","scope":1686,"src":"3814:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1628,"nodeType":"UserDefinedTypeName","pathNode":{"id":1627,"name":"IERC20","nameLocations":["3814:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"3814:6:15"},"referencedDeclaration":140,"src":"3814:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1629,"nodeType":"ArrayTypeName","src":"3814:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":1637,"initialValue":{"arguments":[{"hexValue":"31","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3839:12:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":1632,"nodeType":"UserDefinedTypeName","pathNode":{"id":1631,"name":"IERC20","nameLocations":["3843:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"3843:6:15"},"referencedDeclaration":140,"src":"3843:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1633,"nodeType":"ArrayTypeName","src":"3843:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3814:40:15"},{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1638,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3864:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1640,"indexExpression":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3871:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3864:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1642,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3883:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3876:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"src":"3864:27:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1645,"nodeType":"ExpressionStatement","src":"3864:27:15"},{"assignments":[1650],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"amounts","nameLocation":"3919:7:15","nodeType":"VariableDeclaration","scope":1686,"src":"3902:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"nodeType":"ArrayTypeName","src":"3902:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1656,"initialValue":{"arguments":[{"hexValue":"31","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3929:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ArrayTypeName","src":"3933:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3929:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3902:43:15"},{"expression":{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1657,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"3955:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1659,"indexExpression":{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3955:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3968:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3955:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1662,"nodeType":"ExpressionStatement","src":"3955:19:15"},{"assignments":[1665],"declarations":[{"constant":false,"id":1665,"mutability":"mutable","name":"params","nameLocation":"4074:6:15","nodeType":"VariableDeclaration","scope":1686,"src":"4051:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams"},"typeName":{"id":1664,"nodeType":"UserDefinedTypeName","pathNode":{"id":1663,"name":"ArbitrageParams","nameLocations":["4051:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"4051:15:15"},"referencedDeclaration":1431,"src":"4051:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_storage_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams"}},"visibility":"internal"}],"id":1673,"initialValue":{"arguments":[{"id":1667,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4122:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4153:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4185:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1670,"name":"uniswapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4217:10:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":1671,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"4251:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"name":"ArbitrageParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4083:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ArbitrageParams_$1431_storage_ptr_$","typeString":"type(struct FlashLoanArbitrage.ArbitrageParams storage pointer)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4113:7:15","4143:8:15","4175:8:15","4205:10:15","4241:8:15"],"names":["tokenIn","tokenOut","amountIn","uniswapFee","deadline"],"nodeType":"FunctionCall","src":"4083:187:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4051:219:15"},{"expression":{"arguments":[{"id":1677,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4355:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}},{"id":1678,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"4373:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":1679,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"4393:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1682,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"4425:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ArbitrageParams_$1431_memory_ptr","typeString":"struct FlashLoanArbitrage.ArbitrageParams memory"}],"expression":{"id":1680,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4414:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4418:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4414:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4414:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1674,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"4326:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$766","typeString":"contract IVault"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4332:9:15","memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":694,"src":"4326:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$179_$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4326:116:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"4326:116:15"}]},"functionSelector":"0f99d519","id":1687,"implemented":true,"kind":"function","modifiers":[{"id":1602,"kind":"modifierInvocation","modifierName":{"id":1601,"name":"nonReentrant","nameLocations":["3428:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":796,"src":"3428:12:15"},"nodeType":"ModifierInvocation","src":"3428:12:15"}],"name":"executeArbitrage","nameLocation":"3268:16:15","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"tokenIn","nameLocation":"3302:7:15","nodeType":"VariableDeclaration","scope":1687,"src":"3294:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"tokenOut","nameLocation":"3327:8:15","nodeType":"VariableDeclaration","scope":1687,"src":"3319:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"3319:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"amount","nameLocation":"3353:6:15","nodeType":"VariableDeclaration","scope":1687,"src":"3345:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"uniswapFee","nameLocation":"3376:10:15","nodeType":"VariableDeclaration","scope":1687,"src":"3369:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1596,"name":"uint24","nodeType":"ElementaryTypeName","src":"3369:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"deadline","nameLocation":"3404:8:15","nodeType":"VariableDeclaration","scope":1687,"src":"3396:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3284:134:15"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"3441:0:15"},"scope":2043,"src":"3259:1190:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1738,"nodeType":"Block","src":"4650:737:15","statements":[{"assignments":[1706],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"params","nameLocation":"4757:6:15","nodeType":"VariableDeclaration","scope":1738,"src":"4715:48:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":1705,"nodeType":"UserDefinedTypeName","pathNode":{"id":1704,"name":"ISwapRouter.ExactInputSingleParams","nameLocations":["4715:11:15","4727:22:15"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"4715:34:15"},"referencedDeclaration":1265,"src":"4715:34:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":1721,"initialValue":{"arguments":[{"id":1709,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"4841:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"4876:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"4907:3:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":1714,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4947:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}],"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4939:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"4939:7:15","typeDescriptions":{}}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1716,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"4980:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1717,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5016:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5174:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1707,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4766:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$1341_$","typeString":"type(contract ISwapRouter)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:22:15","memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"4766:47:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$1265_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4832:7:15","4866:8:15","4902:3:15","4928:9:15","4970:8:15","5006:8:15","5042:16:15","5155:17:15"],"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"4766:424:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"4715:475:15"},{"expression":{"arguments":[{"arguments":[{"id":1728,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"5266:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5258:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"5258:7:15","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5258:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1730,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5282:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1723,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5241:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1722,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"5234:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5234:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5250:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"5234:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5234:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1732,"nodeType":"ExpressionStatement","src":"5234:57:15"},{"expression":{"arguments":[{"id":1735,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5373:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$1265_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":1733,"name":"uniswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"5342:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$1341","typeString":"contract ISwapRouter"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5356:16:15","memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":1274,"src":"5342:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$1265_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5342:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1737,"nodeType":"Return","src":"5335:45:15"}]},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"executeUniswapTrade","nameLocation":"4464:19:15","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"tokenIn","nameLocation":"4501:7:15","nodeType":"VariableDeclaration","scope":1739,"src":"4493:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"tokenOut","nameLocation":"4526:8:15","nodeType":"VariableDeclaration","scope":1739,"src":"4518:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"4518:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"amountIn","nameLocation":"4552:8:15","nodeType":"VariableDeclaration","scope":1739,"src":"4544:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"fee","nameLocation":"4577:3:15","nodeType":"VariableDeclaration","scope":1739,"src":"4570:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1694,"name":"uint24","nodeType":"ElementaryTypeName","src":"4570:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"deadline","nameLocation":"4598:8:15","nodeType":"VariableDeclaration","scope":1739,"src":"4590:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4483:129:15"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"amountOut","nameLocation":"4639:9:15","nodeType":"VariableDeclaration","scope":1739,"src":"4631:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:19:15"},"scope":2043,"src":"4455:932:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1810,"nodeType":"Block","src":"5570:588:15","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"path","nameLocation":"5624:4:15","nodeType":"VariableDeclaration","scope":1810,"src":"5607:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"5607:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1755,"nodeType":"ArrayTypeName","src":"5607:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1762,"initialValue":{"arguments":[{"hexValue":"32","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5645:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5631:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"5635:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1758,"nodeType":"ArrayTypeName","src":"5635:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5607:40:15"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1763,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5657:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1765,"indexExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5662:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5657:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1766,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5667:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5657:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1768,"nodeType":"ExpressionStatement","src":"5657:17:15"},{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1769,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5684:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1771,"indexExpression":{"hexValue":"31","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5689:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5684:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1772,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"5694:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5684:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1774,"nodeType":"ExpressionStatement","src":"5684:18:15"},{"expression":{"arguments":[{"arguments":[{"id":1781,"name":"sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5778:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5770:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"5770:7:15","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5770:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1783,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"5796:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1776,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5753:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1775,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"5746:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5746:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5762:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"5746:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5746:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1785,"nodeType":"ExpressionStatement","src":"5746:59:15"},{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"amounts","nameLocation":"5866:7:15","nodeType":"VariableDeclaration","scope":1810,"src":"5849:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1789,"nodeType":"ArrayTypeName","src":"5849:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1802,"initialValue":{"arguments":[{"id":1793,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"5930:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1795,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"6043:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":1798,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6069:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6061:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"6061:7:15","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6061:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"6088:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1791,"name":"sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"5876:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5892:24:15","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":1002,"src":"5876:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5876:230:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5849:257:15"},{"expression":{"baseExpression":{"id":1803,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6124:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1808,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1804,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6132:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6140:6:15","memberName":"length","nodeType":"MemberAccess","src":"6132:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6132:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6124:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1751,"id":1809,"nodeType":"Return","src":"6117:34:15"}]},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"executeSushiswapTrade","nameLocation":"5402:21:15","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"tokenIn","nameLocation":"5441:7:15","nodeType":"VariableDeclaration","scope":1811,"src":"5433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"5433:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"tokenOut","nameLocation":"5466:8:15","nodeType":"VariableDeclaration","scope":1811,"src":"5458:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"5458:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"amountIn","nameLocation":"5492:8:15","nodeType":"VariableDeclaration","scope":1811,"src":"5484:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"deadline","nameLocation":"5518:8:15","nodeType":"VariableDeclaration","scope":1811,"src":"5510:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5423:109:15"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"amountOut","nameLocation":"5559:9:15","nodeType":"VariableDeclaration","scope":1811,"src":"5551:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"5551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5550:19:15"},"scope":2043,"src":"5393:765:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"6331:1020:15","statements":[{"assignments":[1827],"declarations":[{"constant":false,"id":1827,"mutability":"mutable","name":"uniswapAmount","nameLocation":"6392:13:15","nodeType":"VariableDeclaration","scope":1894,"src":"6384:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"6384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1834,"initialValue":{"arguments":[{"id":1829,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6437:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1830,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"6458:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6480:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1832,"name":"uniswapFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"6500:10:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1828,"name":"getUniswapQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"6408:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_uint256_$","typeString":"function (address,address,uint256,uint24) pure returns (uint256)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6408:112:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6384:136:15"},{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"sushiswapAmount","nameLocation":"6584:15:15","nodeType":"VariableDeclaration","scope":1894,"src":"6576:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"arguments":[{"id":1838,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"6633:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6655:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"uniswapAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6676:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"getSushiswapQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"6602:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6602:97:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6576:123:15"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"flashLoanFee","nameLocation":"6785:12:15","nodeType":"VariableDeclaration","scope":1894,"src":"6777:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"6777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1851,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6801:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6800:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6815:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6800:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6777:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"sushiswapAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6868:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6886:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1854,"name":"flashLoanFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6895:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6868:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"6864:453:15","trueBody":{"id":1888,"nodeType":"Block","src":"6909:408:15","statements":[{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"expectedProfit","nameLocation":"6931:14:15","nodeType":"VariableDeclaration","scope":1888,"src":"6923:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"6923:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1865,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"sushiswapAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6948:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"6967:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1861,"name":"flashLoanFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"6976:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6967:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6966:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6948:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6923:66:15"},{"assignments":[1867],"declarations":[{"constant":false,"id":1867,"mutability":"mutable","name":"profitBps","nameLocation":"7011:9:15","nodeType":"VariableDeclaration","scope":1888,"src":"7003:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7003:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"expectedProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7024:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1869,"name":"BPS_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"7041:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7024:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7023:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"7060:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7023:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7003:63:15"},{"eventCall":{"arguments":[{"id":1876,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"7128:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1877,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"7153:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1878,"name":"uniswapAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"7179:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1879,"name":"sushiswapAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7210:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"name":"PriceChecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"7098:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7098:141:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"EmitStatement","src":"7093:146:15"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"profitBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7262:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1883,"name":"MIN_PROFIT_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7275:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7262:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1885,"name":"expectedProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7291:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7261:45:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1825,"id":1887,"nodeType":"Return","src":"7254:52:15"}]}},{"expression":{"components":[{"hexValue":"66616c7365","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7335:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7334:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1825,"id":1893,"nodeType":"Return","src":"7327:17:15"}]},"functionSelector":"5abaaa74","id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"checkProfitability","nameLocation":"6173:18:15","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"tokenIn","nameLocation":"6209:7:15","nodeType":"VariableDeclaration","scope":1895,"src":"6201:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"6201:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"tokenOut","nameLocation":"6234:8:15","nodeType":"VariableDeclaration","scope":1895,"src":"6226:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"6226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"amount","nameLocation":"6260:6:15","nodeType":"VariableDeclaration","scope":1895,"src":"6252:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"uniswapFee","nameLocation":"6283:10:15","nodeType":"VariableDeclaration","scope":1895,"src":"6276:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1818,"name":"uint24","nodeType":"ElementaryTypeName","src":"6276:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"6191:108:15"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"6316:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1821,"name":"bool","nodeType":"ElementaryTypeName","src":"6316:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"6322:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6315:15:15"},"scope":2043,"src":"6164:1187:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1910,"nodeType":"Block","src":"7517:171:15","statements":[{"expression":{"id":1908,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"7657:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1907,"id":1909,"nodeType":"Return","src":"7650:15:15"}]},"id":1911,"implemented":true,"kind":"function","modifiers":[],"name":"getUniswapQuote","nameLocation":"7366:15:15","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"tokenIn","nameLocation":"7399:7:15","nodeType":"VariableDeclaration","scope":1911,"src":"7391:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"7391:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"tokenOut","nameLocation":"7424:8:15","nodeType":"VariableDeclaration","scope":1911,"src":"7416:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"7416:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"amountIn","nameLocation":"7450:8:15","nodeType":"VariableDeclaration","scope":1911,"src":"7442:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"7442:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"fee","nameLocation":"7475:3:15","nodeType":"VariableDeclaration","scope":1911,"src":"7468:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1902,"name":"uint24","nodeType":"ElementaryTypeName","src":"7468:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"7381:103:15"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"7508:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"7508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7507:9:15"},"scope":2043,"src":"7357:331:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"7836:240:15","statements":[{"assignments":[1926],"declarations":[{"constant":false,"id":1926,"mutability":"mutable","name":"path","nameLocation":"7917:4:15","nodeType":"VariableDeclaration","scope":1953,"src":"7900:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1925,"nodeType":"ArrayTypeName","src":"7900:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1932,"initialValue":{"arguments":[{"hexValue":"32","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7924:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"7928:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1928,"nodeType":"ArrayTypeName","src":"7928:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7924:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7900:40:15"},{"expression":{"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1933,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"7950:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1935,"indexExpression":{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7955:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7950:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1936,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"7960:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7950:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1938,"nodeType":"ExpressionStatement","src":"7950:17:15"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1939,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"7977:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1941,"indexExpression":{"hexValue":"31","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7977:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1942,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"7987:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7977:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1944,"nodeType":"ExpressionStatement","src":"7977:18:15"},{"expression":{"baseExpression":{"arguments":[{"id":1947,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"8051:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1948,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"8061:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":1945,"name":"sushiswapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"8021:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1227","typeString":"contract IUniswapV2Router02"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8037:13:15","memberName":"getAmountsOut","nodeType":"MemberAccess","referencedDeclaration":1127,"src":"8021:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address[] memory) view external returns (uint256[] memory)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1951,"indexExpression":{"hexValue":"31","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8021:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1921,"id":1952,"nodeType":"Return","src":"8014:55:15"}]},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"getSushiswapQuote","nameLocation":"7703:17:15","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"tokenIn","nameLocation":"7738:7:15","nodeType":"VariableDeclaration","scope":1954,"src":"7730:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"7730:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"tokenOut","nameLocation":"7763:8:15","nodeType":"VariableDeclaration","scope":1954,"src":"7755:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"7755:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"amountIn","nameLocation":"7789:8:15","nodeType":"VariableDeclaration","scope":1954,"src":"7781:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"7781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:83:15"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"7827:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7827:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7826:9:15"},"scope":2043,"src":"7694:382:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2002,"nodeType":"Block","src":"8179:211:15","statements":[{"assignments":[1968],"declarations":[{"constant":false,"id":1968,"mutability":"mutable","name":"addresses","nameLocation":"8206:9:15","nodeType":"VariableDeclaration","scope":2002,"src":"8189:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"8189:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1967,"nodeType":"ArrayTypeName","src":"8189:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1975,"initialValue":{"arguments":[{"expression":{"id":1972,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8232:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8239:6:15","memberName":"length","nodeType":"MemberAccess","src":"8232:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8218:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"8222:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1970,"nodeType":"ArrayTypeName","src":"8222:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8218:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8189:57:15"},{"body":{"id":1998,"nodeType":"Block","src":"8300:58:15","statements":[{"expression":{"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1987,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8314:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1989,"indexExpression":{"id":1988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8324:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8314:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1992,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8337:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1994,"indexExpression":{"id":1993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8344:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8337:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8329:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"8329:7:15","typeDescriptions":{}}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8314:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1997,"nodeType":"ExpressionStatement","src":"8314:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1981,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8280:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8287:6:15","memberName":"length","nodeType":"MemberAccess","src":"8280:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8276:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"initializationExpression":{"assignments":[1977],"declarations":[{"constant":false,"id":1977,"mutability":"mutable","name":"i","nameLocation":"8269:1:15","nodeType":"VariableDeclaration","scope":1999,"src":"8261:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"8261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1979,"initialValue":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8273:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8261:13:15"},"loopExpression":{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8295:3:15","subExpression":{"id":1984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"8295:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"8295:3:15"},"nodeType":"ForStatement","src":"8256:102:15"},{"expression":{"id":2000,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"8374:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1963,"id":2001,"nodeType":"Return","src":"8367:16:15"}]},"id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAddressArray","nameLocation":"8091:22:15","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"tokens","nameLocation":"8130:6:15","nodeType":"VariableDeclaration","scope":2003,"src":"8114:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1956,"nodeType":"UserDefinedTypeName","pathNode":{"id":1955,"name":"IERC20","nameLocations":["8114:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"8114:6:15"},"referencedDeclaration":140,"src":"8114:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1957,"nodeType":"ArrayTypeName","src":"8114:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"8113:24:15"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2003,"src":"8161:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"8161:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1961,"nodeType":"ArrayTypeName","src":"8161:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8160:18:15"},"scope":2043,"src":"8082:308:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"8473:214:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8491:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8495:6:15","memberName":"sender","nodeType":"MemberAccess","src":"8491:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8505:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8491:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8512:12:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":2008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8483:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8483:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2015,"nodeType":"ExpressionStatement","src":"8483:42:15"},{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"balance","nameLocation":"8543:7:15","nodeType":"VariableDeclaration","scope":2041,"src":"8535:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"8535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2027,"initialValue":{"arguments":[{"arguments":[{"id":2024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8585:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FlashLoanArbitrage_$2043","typeString":"contract FlashLoanArbitrage"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8577:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"8577:7:15","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8577:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2019,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"8560:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2018,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"8553:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8567:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"8553:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8535:56:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2028,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"8605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8605:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2040,"nodeType":"IfStatement","src":"8601:80:15","trueBody":{"id":2039,"nodeType":"Block","src":"8618:63:15","statements":[{"expression":{"arguments":[{"id":2035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8655:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2036,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"8662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2032,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"8639:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2031,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"8632:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8632:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8646:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"8632:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8632:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"ExpressionStatement","src":"8632:38:15"}]}}]},"functionSelector":"6ff1c9bc","id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"8431:17:15","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"token","nameLocation":"8457:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"8449:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"8449:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8448:15:15"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"8473:0:15"},"scope":2043,"src":"8422:265:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2044,"src":"500:8189:15","usedErrors":[],"usedEvents":[1380,1390]}],"src":"32:8657:15"},"id":15}},"contracts":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"IAsset":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"IUniswapV2Router01":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"IUniswapV2Router02":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/FlashLoanArbitrage.sol":{"FlashLoanArbitrage":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"_vault","type":"address"},{"internalType":"contract ISwapRouter","name":"_uniswapRouter","type":"address"},{"internalType":"contract IUniswapV2Router02","name":"_sushiswapRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"profit","type":"uint256"}],"name":"ArbitrageExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token0","type":"address"},{"indexed":false,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"uint256","name":"uniswapPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sushiswapPrice","type":"uint256"}],"name":"PriceChecked","type":"event"},{"inputs":[],"name":"BPS_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_PROFIT_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"uniswapFee","type":"uint24"}],"name":"checkProfitability","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"uniswapFee","type":"uint24"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"executeArbitrage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1420":{"entryPoint":null,"id":1420,"parameterSlots":3,"returnSlots":0},"@_785":{"entryPoint":null,"id":785,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_contract$_IVault_$766t_contract$_ISwapRouter_$1341t_contract$_IUniswapV2Router02_$1227_fromMemory":{"entryPoint":132,"id":null,"parameterSlots":2,"returnSlots":3},"validator_revert_contract_IVault":{"entryPoint":107,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:764:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"67:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"131:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"140:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"143:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"133:6:16"},"nodeType":"YulFunctionCall","src":"133:12:16"},"nodeType":"YulExpressionStatement","src":"133:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"90:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"101:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"116:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"121:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"112:3:16"},"nodeType":"YulFunctionCall","src":"112:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"125:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"108:3:16"},"nodeType":"YulFunctionCall","src":"108:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"97:3:16"},"nodeType":"YulFunctionCall","src":"97:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"87:2:16"},"nodeType":"YulFunctionCall","src":"87:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80:6:16"},"nodeType":"YulFunctionCall","src":"80:50:16"},"nodeType":"YulIf","src":"77:70:16"}]},"name":"validator_revert_contract_IVault","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"56:5:16","type":""}],"src":"14:139:16"},{"body":{"nodeType":"YulBlock","src":"334:428:16","statements":[{"body":{"nodeType":"YulBlock","src":"380:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"389:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"392:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"382:6:16"},"nodeType":"YulFunctionCall","src":"382:12:16"},"nodeType":"YulExpressionStatement","src":"382:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"355:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"364:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"351:3:16"},"nodeType":"YulFunctionCall","src":"351:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"376:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"347:3:16"},"nodeType":"YulFunctionCall","src":"347:32:16"},"nodeType":"YulIf","src":"344:52:16"},{"nodeType":"YulVariableDeclaration","src":"405:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"424:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"418:5:16"},"nodeType":"YulFunctionCall","src":"418:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"409:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"476:5:16"}],"functionName":{"name":"validator_revert_contract_IVault","nodeType":"YulIdentifier","src":"443:32:16"},"nodeType":"YulFunctionCall","src":"443:39:16"},"nodeType":"YulExpressionStatement","src":"443:39:16"},{"nodeType":"YulAssignment","src":"491:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"501:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"491:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"515:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"540:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"551:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"536:3:16"},"nodeType":"YulFunctionCall","src":"536:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"530:5:16"},"nodeType":"YulFunctionCall","src":"530:25:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"519:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"597:7:16"}],"functionName":{"name":"validator_revert_contract_IVault","nodeType":"YulIdentifier","src":"564:32:16"},"nodeType":"YulFunctionCall","src":"564:41:16"},"nodeType":"YulExpressionStatement","src":"564:41:16"},{"nodeType":"YulAssignment","src":"614:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"624:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"614:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"640:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"665:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"676:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"661:3:16"},"nodeType":"YulFunctionCall","src":"661:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"655:5:16"},"nodeType":"YulFunctionCall","src":"655:25:16"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"644:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"722:7:16"}],"functionName":{"name":"validator_revert_contract_IVault","nodeType":"YulIdentifier","src":"689:32:16"},"nodeType":"YulFunctionCall","src":"689:41:16"},"nodeType":"YulExpressionStatement","src":"689:41:16"},{"nodeType":"YulAssignment","src":"739:17:16","value":{"name":"value_2","nodeType":"YulIdentifier","src":"749:7:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"739:6:16"}]}]},"name":"abi_decode_tuple_t_contract$_IVault_$766t_contract$_ISwapRouter_$1341t_contract$_IUniswapV2Router02_$1227_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"295:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"307:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"315:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"323:6:16","type":""}],"src":"158:604:16"}]},"contents":"{\n    { }\n    function validator_revert_contract_IVault(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IVault_$766t_contract$_ISwapRouter_$1341t_contract$_IUniswapV2Router02_$1227_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IVault(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IVault(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_IVault(value_2)\n        value2 := value_2\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17E4 CODESIZE SUB DUP1 PUSH3 0x17E4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 MSTORE SWAP2 DUP4 AND PUSH1 0xA0 MSTORE SWAP1 SWAP2 AND PUSH1 0xC0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0xD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0xA7 DUP2 PUSH3 0x6B JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0xBA DUP2 PUSH3 0x6B JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0xCD DUP2 PUSH3 0x6B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x16B9 PUSH3 0x12B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA8D ADD MSTORE DUP2 DUP2 PUSH2 0xD87 ADD MSTORE PUSH2 0xE1F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xB8C ADD MSTORE PUSH2 0xC7A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2BF ADD MSTORE DUP2 DUP2 PUSH2 0x5E4 ADD MSTORE PUSH2 0x7F4 ADD MSTORE PUSH2 0x16B9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FF1C9BC GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF99D519 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x507A2291 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x5ABAAA74 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x198 DUP7 DUP7 DUP7 DUP7 PUSH2 0x3B8 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F66697461626C65206F70706F7274756E69747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x21E JUMPI PUSH2 0x21E PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C38449E ADDRESS DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x343 SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1328 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x3B1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 PUSH2 0x3C8 DUP8 DUP10 DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x3DA DUP9 PUSH1 0x2 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP2 DUP9 PUSH2 0x142F JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 PUSH2 0x403 DUP3 DUP10 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x40D SWAP1 DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH2 0x41E PUSH2 0x2710 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP3 MSTORE DUP14 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x173AF69DB85FC7C0AECDBE45FC8B7A7D0873AD923AE56C1FB04EC3A98F5AA07E SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x32 GT ISZERO SWAP6 POP SWAP4 POP PUSH2 0x499 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E4810985B185B98D95C8815985D5B1D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x698 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B4 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x702 SWAP1 DUP4 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x139BC81C1C9BD99A5D PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 DUP4 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081C1C9BD99A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP10 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7DC JUMPI PUSH2 0x7DC PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x825 JUMPI PUSH2 0x825 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI PUSH2 0x83F PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP DUP1 PUSH2 0x8CB DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7C1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x954 JUMPI DUP5 MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP JUMPDEST PUSH32 0x12024CCA099DB52261A6691770D3065970EFA9AFD5E6DEAFD4E1225E3A51201C PUSH2 0x97E DUP11 PUSH2 0xED8 JUMP JUMPDEST DUP10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x98F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA68 JUMPI PUSH2 0xA68 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0xAC6 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB1D JUMPI PUSH2 0xB1D PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP4 MSTORE DUP8 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xFFFFFF DUP7 AND DUP4 DUP6 ADD MSTORE ADDRESS PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP5 ADD MLOAD DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 AND PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD62 JUMPI PUSH2 0xD62 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE04 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xE5C SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP8 SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEA3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF6 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF1F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF84 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xF7C DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF25 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xFD7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xFE7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0xFFE DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1030 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1040 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1057 DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x107F DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x1086 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1117 PUSH2 0x1112 DUP4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1151 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x113A JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x119A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x109C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x121E PUSH2 0x1112 DUP4 PUSH2 0x10CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1264 JUMPI DUP6 CALLDATALOAD PUSH2 0x1255 DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP9 POP POP DUP9 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x127A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1286 DUP9 DUP4 DUP10 ADD PUSH2 0x10F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP9 DUP4 DUP10 ADD PUSH2 0x10F1 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12CB DUP8 DUP3 DUP9 ADD PUSH2 0x115C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1301 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x80 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP7 MLOAD SWAP2 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP8 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xA0 DUP7 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1358 JUMP JUMPDEST POP POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x138A DUP2 DUP10 PUSH2 0x12ED JUMP JUMPDEST SWAP4 POP POP DUP5 DUP4 SUB PUSH1 0x60 DUP7 ADD MSTORE DUP6 MLOAD SWAP2 POP DUP2 DUP4 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13BA JUMPI DUP7 DUP2 ADD DUP3 ADD MLOAD DUP5 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x139F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP4 ADD DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x142A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C5 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x14D3 DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x14E3 DUP2 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1500 DUP2 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x152A JUMPI PUSH2 0x152A PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x157D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1531 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x158F DUP2 DUP7 PUSH2 0x12ED JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1531 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x160A PUSH2 0x1112 DUP3 PUSH2 0x10CD JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xCEA JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x162E JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1666 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD CHAINID 0xAA 0x49 0x49 0xEA 0x4D 0x4B 0xBC PUSH27 0x8CA21123A82224F4860EA3F1A9065207337A382CB1664736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"500:8189:15:-:0;;;1144:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:10;1821:7;:22;;;-1:-1:-1;;;;;1276:14:15;;;;;1300:30;;;;;1340:34;;;;;1384:18;;-1:-1:-1;;;;;;1384:18:15;1392:10;1384:18;;;500:8189;;14:139:16;-1:-1:-1;;;;;97:31:16;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:604::-;307:6;315;323;376:2;364:9;355:7;351:23;347:32;344:52;;;392:1;389;382:12;344:52;424:9;418:16;443:39;476:5;443:39;:::i;:::-;551:2;536:18;;530:25;501:5;;-1:-1:-1;564:41:16;530:25;564:41;:::i;:::-;676:2;661:18;;655:25;624:7;;-1:-1:-1;689:41:16;655:25;689:41;:::i;:::-;749:7;739:17;;;158:604;;;;;:::o;:::-;500:8189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BPS_DENOMINATOR_1370":{"entryPoint":null,"id":1370,"parameterSlots":0,"returnSlots":0},"@MIN_PROFIT_BPS_1367":{"entryPoint":null,"id":1367,"parameterSlots":0,"returnSlots":0},"@_convertToAddressArray_2003":{"entryPoint":3800,"id":2003,"parameterSlots":1,"returnSlots":1},"@_nonReentrantAfter_819":{"entryPoint":null,"id":819,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_811":{"entryPoint":2466,"id":811,"parameterSlots":0,"returnSlots":0},"@checkProfitability_1895":{"entryPoint":952,"id":1895,"parameterSlots":4,"returnSlots":2},"@emergencyWithdraw_2042":{"entryPoint":1186,"id":2042,"parameterSlots":1,"returnSlots":0},"@executeArbitrage_1687":{"entryPoint":310,"id":1687,"parameterSlots":5,"returnSlots":0},"@executeSushiswapTrade_1811":{"entryPoint":3317,"id":1811,"parameterSlots":4,"returnSlots":1},"@executeUniswapTrade_1739":{"entryPoint":2863,"id":1739,"parameterSlots":5,"returnSlots":1},"@getSushiswapQuote_1954":{"entryPoint":2555,"id":1954,"parameterSlots":3,"returnSlots":1},"@getUniswapQuote_1911":{"entryPoint":null,"id":1911,"parameterSlots":4,"returnSlots":1},"@owner_1364":{"entryPoint":null,"id":1364,"parameterSlots":0,"returnSlots":0},"@receiveFlashLoan_1589":{"entryPoint":1497,"id":1589,"parameterSlots":4,"returnSlots":0},"abi_decode_array_uint256_dyn":{"entryPoint":4337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":4444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4194,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint24":{"entryPoint":4111,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint24t_uint256":{"entryPoint":4020,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":4556,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":5569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr_fromMemory":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":5425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":4845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5482,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_FlashLoanArbitrage_$2043_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4904,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_21971e62578e10cd34ab65d1697b9c5f963a7a937afc895e049ad66dce7f0f37__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6b8077984201be275e1ea17f5751a9d31c877fc60f88f5c477062be112bf7b97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b152b760143d31fd8ff5fec447c2175b6bd780222e6f19b3a88d930da500fa9c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bec779a091766eb809048cf84d103b020badca80f63c0dbba7135454237490e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr__to_t_struct$_ArbitrageParams_$1431_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_ExactInputSingleParams_$1265_memory_ptr__to_t_struct$_ExactInputSingleParams_$1265_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5536,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":5703,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":4252,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_contract_IERC20_dyn":{"entryPoint":4301,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5167,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5133,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5104,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5186,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":5400,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5082,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4823,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4230,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3979,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint24":{"entryPoint":4003,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17294:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:16"},"nodeType":"YulFunctionCall","src":"125:12:16"},"nodeType":"YulExpressionStatement","src":"125:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:16"},"nodeType":"YulFunctionCall","src":"104:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:16"},"nodeType":"YulFunctionCall","src":"100:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:16"},"nodeType":"YulFunctionCall","src":"89:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:16"},"nodeType":"YulFunctionCall","src":"79:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:16"},"nodeType":"YulFunctionCall","src":"72:50:16"},"nodeType":"YulIf","src":"69:70:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:16","type":""}],"src":"14:131:16"},{"body":{"nodeType":"YulBlock","src":"194:75:16","statements":[{"body":{"nodeType":"YulBlock","src":"247:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"256:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"259:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"249:6:16"},"nodeType":"YulFunctionCall","src":"249:12:16"},"nodeType":"YulExpressionStatement","src":"249:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"235:8:16","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:16"},"nodeType":"YulFunctionCall","src":"224:20:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:16"},"nodeType":"YulFunctionCall","src":"214:31:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:16"},"nodeType":"YulFunctionCall","src":"207:39:16"},"nodeType":"YulIf","src":"204:59:16"}]},"name":"validator_revert_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"183:5:16","type":""}],"src":"150:119:16"},{"body":{"nodeType":"YulBlock","src":"411:528:16","statements":[{"body":{"nodeType":"YulBlock","src":"458:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"467:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"470:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"460:6:16"},"nodeType":"YulFunctionCall","src":"460:12:16"},"nodeType":"YulExpressionStatement","src":"460:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"432:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"441:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"428:3:16"},"nodeType":"YulFunctionCall","src":"428:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"453:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"424:3:16"},"nodeType":"YulFunctionCall","src":"424:33:16"},"nodeType":"YulIf","src":"421:53:16"},{"nodeType":"YulVariableDeclaration","src":"483:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"509:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:16"},"nodeType":"YulFunctionCall","src":"496:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"487:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"553:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"528:24:16"},"nodeType":"YulFunctionCall","src":"528:31:16"},"nodeType":"YulExpressionStatement","src":"528:31:16"},{"nodeType":"YulAssignment","src":"568:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"568:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"592:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"624:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"635:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"620:3:16"},"nodeType":"YulFunctionCall","src":"620:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"607:12:16"},"nodeType":"YulFunctionCall","src":"607:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"596:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"673:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"648:24:16"},"nodeType":"YulFunctionCall","src":"648:33:16"},"nodeType":"YulExpressionStatement","src":"648:33:16"},{"nodeType":"YulAssignment","src":"690:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"700:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"690:6:16"}]},{"nodeType":"YulAssignment","src":"716:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"743:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"754:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"739:3:16"},"nodeType":"YulFunctionCall","src":"739:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"726:12:16"},"nodeType":"YulFunctionCall","src":"726:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"716:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"767:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"810:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:16"},"nodeType":"YulFunctionCall","src":"795:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"782:12:16"},"nodeType":"YulFunctionCall","src":"782:32:16"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"771:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"847:7:16"}],"functionName":{"name":"validator_revert_uint24","nodeType":"YulIdentifier","src":"823:23:16"},"nodeType":"YulFunctionCall","src":"823:32:16"},"nodeType":"YulExpressionStatement","src":"823:32:16"},{"nodeType":"YulAssignment","src":"864:17:16","value":{"name":"value_2","nodeType":"YulIdentifier","src":"874:7:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"864:6:16"}]},{"nodeType":"YulAssignment","src":"890:43:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"917:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"928:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"913:3:16"},"nodeType":"YulFunctionCall","src":"913:19:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"900:12:16"},"nodeType":"YulFunctionCall","src":"900:33:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"890:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint24t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"345:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"356:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"368:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"376:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"384:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"392:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"400:6:16","type":""}],"src":"274:665:16"},{"body":{"nodeType":"YulBlock","src":"1045:76:16","statements":[{"nodeType":"YulAssignment","src":"1055:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1067:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1078:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1063:3:16"},"nodeType":"YulFunctionCall","src":"1063:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1055:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1097:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1108:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1090:6:16"},"nodeType":"YulFunctionCall","src":"1090:25:16"},"nodeType":"YulExpressionStatement","src":"1090:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1014:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1025:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1036:4:16","type":""}],"src":"944:177:16"},{"body":{"nodeType":"YulBlock","src":"1246:476:16","statements":[{"body":{"nodeType":"YulBlock","src":"1293:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1302:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1305:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1295:6:16"},"nodeType":"YulFunctionCall","src":"1295:12:16"},"nodeType":"YulExpressionStatement","src":"1295:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1267:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1263:3:16"},"nodeType":"YulFunctionCall","src":"1263:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1288:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1259:3:16"},"nodeType":"YulFunctionCall","src":"1259:33:16"},"nodeType":"YulIf","src":"1256:53:16"},{"nodeType":"YulVariableDeclaration","src":"1318:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1344:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1331:12:16"},"nodeType":"YulFunctionCall","src":"1331:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1322:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1388:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1363:24:16"},"nodeType":"YulFunctionCall","src":"1363:31:16"},"nodeType":"YulExpressionStatement","src":"1363:31:16"},{"nodeType":"YulAssignment","src":"1403:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1413:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1403:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1427:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1459:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1470:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1455:3:16"},"nodeType":"YulFunctionCall","src":"1455:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1442:12:16"},"nodeType":"YulFunctionCall","src":"1442:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1431:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1508:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1483:24:16"},"nodeType":"YulFunctionCall","src":"1483:33:16"},"nodeType":"YulExpressionStatement","src":"1483:33:16"},{"nodeType":"YulAssignment","src":"1525:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1535:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1525:6:16"}]},{"nodeType":"YulAssignment","src":"1551:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1578:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1589:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1574:3:16"},"nodeType":"YulFunctionCall","src":"1574:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1561:12:16"},"nodeType":"YulFunctionCall","src":"1561:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1551:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1602:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1617:12:16"},"nodeType":"YulFunctionCall","src":"1617:32:16"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1606:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1682:7:16"}],"functionName":{"name":"validator_revert_uint24","nodeType":"YulIdentifier","src":"1658:23:16"},"nodeType":"YulFunctionCall","src":"1658:32:16"},"nodeType":"YulExpressionStatement","src":"1658:32:16"},{"nodeType":"YulAssignment","src":"1699:17:16","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1709:7:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1699:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1188:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1199:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1211:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1219:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1227:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1235:6:16","type":""}],"src":"1126:596:16"},{"body":{"nodeType":"YulBlock","src":"1850:135:16","statements":[{"nodeType":"YulAssignment","src":"1860:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:16"},"nodeType":"YulFunctionCall","src":"1868:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1860:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1927:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1920:6:16"},"nodeType":"YulFunctionCall","src":"1920:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1913:6:16"},"nodeType":"YulFunctionCall","src":"1913:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1895:6:16"},"nodeType":"YulFunctionCall","src":"1895:41:16"},"nodeType":"YulExpressionStatement","src":"1895:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1956:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1967:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1952:3:16"},"nodeType":"YulFunctionCall","src":"1952:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"1972:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1945:6:16"},"nodeType":"YulFunctionCall","src":"1945:34:16"},"nodeType":"YulExpressionStatement","src":"1945:34:16"}]},"name":"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1811:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1822:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1830:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1841:4:16","type":""}],"src":"1727:258:16"},{"body":{"nodeType":"YulBlock","src":"2060:177:16","statements":[{"body":{"nodeType":"YulBlock","src":"2106:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2115:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2118:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2108:6:16"},"nodeType":"YulFunctionCall","src":"2108:12:16"},"nodeType":"YulExpressionStatement","src":"2108:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2081:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2090:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2077:3:16"},"nodeType":"YulFunctionCall","src":"2077:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2073:3:16"},"nodeType":"YulFunctionCall","src":"2073:32:16"},"nodeType":"YulIf","src":"2070:52:16"},{"nodeType":"YulVariableDeclaration","src":"2131:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2144:12:16"},"nodeType":"YulFunctionCall","src":"2144:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2135:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2201:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2176:24:16"},"nodeType":"YulFunctionCall","src":"2176:31:16"},"nodeType":"YulExpressionStatement","src":"2176:31:16"},{"nodeType":"YulAssignment","src":"2216:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2226:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2216:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2026:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2037:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2049:6:16","type":""}],"src":"1990:247:16"},{"body":{"nodeType":"YulBlock","src":"2343:102:16","statements":[{"nodeType":"YulAssignment","src":"2353:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2365:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2376:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2361:3:16"},"nodeType":"YulFunctionCall","src":"2361:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2353:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2410:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2426:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2431:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2422:3:16"},"nodeType":"YulFunctionCall","src":"2422:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2418:3:16"},"nodeType":"YulFunctionCall","src":"2418:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2406:3:16"},"nodeType":"YulFunctionCall","src":"2406:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:16"},"nodeType":"YulFunctionCall","src":"2388:51:16"},"nodeType":"YulExpressionStatement","src":"2388:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2312:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2323:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2334:4:16","type":""}],"src":"2242:203:16"},{"body":{"nodeType":"YulBlock","src":"2482:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2506:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2511:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2502:3:16"},"nodeType":"YulFunctionCall","src":"2502:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2492:6:16"},"nodeType":"YulFunctionCall","src":"2492:31:16"},"nodeType":"YulExpressionStatement","src":"2492:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2539:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2542:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2532:6:16"},"nodeType":"YulFunctionCall","src":"2532:15:16"},"nodeType":"YulExpressionStatement","src":"2532:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2566:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2556:6:16"},"nodeType":"YulFunctionCall","src":"2556:15:16"},"nodeType":"YulExpressionStatement","src":"2556:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2450:127:16"},{"body":{"nodeType":"YulBlock","src":"2627:230:16","statements":[{"nodeType":"YulAssignment","src":"2637:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2653:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2647:5:16"},"nodeType":"YulFunctionCall","src":"2647:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2637:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2665:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2687:6:16"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2703:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2709:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:16"},"nodeType":"YulFunctionCall","src":"2699:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2718:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2714:3:16"},"nodeType":"YulFunctionCall","src":"2714:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2695:3:16"},"nodeType":"YulFunctionCall","src":"2695:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:16"},"nodeType":"YulFunctionCall","src":"2683:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2669:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2798:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2800:16:16"},"nodeType":"YulFunctionCall","src":"2800:18:16"},"nodeType":"YulExpressionStatement","src":"2800:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2741:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2753:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2738:2:16"},"nodeType":"YulFunctionCall","src":"2738:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2777:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2789:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2774:2:16"},"nodeType":"YulFunctionCall","src":"2774:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2735:2:16"},"nodeType":"YulFunctionCall","src":"2735:62:16"},"nodeType":"YulIf","src":"2732:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2836:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2840:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2829:6:16"},"nodeType":"YulFunctionCall","src":"2829:22:16"},"nodeType":"YulExpressionStatement","src":"2829:22:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2607:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2616:6:16","type":""}],"src":"2582:275:16"},{"body":{"nodeType":"YulBlock","src":"2939:114:16","statements":[{"body":{"nodeType":"YulBlock","src":"2983:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2985:16:16"},"nodeType":"YulFunctionCall","src":"2985:18:16"},"nodeType":"YulExpressionStatement","src":"2985:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2955:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2963:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2952:2:16"},"nodeType":"YulFunctionCall","src":"2952:30:16"},"nodeType":"YulIf","src":"2949:56:16"},{"nodeType":"YulAssignment","src":"3014:33:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3030:1:16","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3033:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3026:3:16"},"nodeType":"YulFunctionCall","src":"3026:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3042:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3022:3:16"},"nodeType":"YulFunctionCall","src":"3022:25:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3014:4:16"}]}]},"name":"array_allocation_size_array_contract_IERC20_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2919:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2930:4:16","type":""}],"src":"2862:191:16"},{"body":{"nodeType":"YulBlock","src":"3122:606:16","statements":[{"body":{"nodeType":"YulBlock","src":"3171:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3183:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3173:6:16"},"nodeType":"YulFunctionCall","src":"3173:12:16"},"nodeType":"YulExpressionStatement","src":"3173:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3150:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3158:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3146:3:16"},"nodeType":"YulFunctionCall","src":"3146:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"3165:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3142:3:16"},"nodeType":"YulFunctionCall","src":"3142:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3135:6:16"},"nodeType":"YulFunctionCall","src":"3135:35:16"},"nodeType":"YulIf","src":"3132:55:16"},{"nodeType":"YulVariableDeclaration","src":"3196:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3219:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3206:12:16"},"nodeType":"YulFunctionCall","src":"3206:20:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3200:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3235:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3245:4:16","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3239:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3258:79:16","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3333:2:16"}],"functionName":{"name":"array_allocation_size_array_contract_IERC20_dyn","nodeType":"YulIdentifier","src":"3285:47:16"},"nodeType":"YulFunctionCall","src":"3285:51:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3269:15:16"},"nodeType":"YulFunctionCall","src":"3269:68:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3262:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3346:16:16","value":{"name":"dst","nodeType":"YulIdentifier","src":"3359:3:16"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3350:5:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3378:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3383:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3371:6:16"},"nodeType":"YulFunctionCall","src":"3371:15:16"},"nodeType":"YulExpressionStatement","src":"3371:15:16"},{"nodeType":"YulAssignment","src":"3395:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3406:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3411:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3402:3:16"},"nodeType":"YulFunctionCall","src":"3402:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3395:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"3423:46:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3445:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3457:1:16","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3460:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3453:3:16"},"nodeType":"YulFunctionCall","src":"3453:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3441:3:16"},"nodeType":"YulFunctionCall","src":"3441:23:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3466:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3437:3:16"},"nodeType":"YulFunctionCall","src":"3437:32:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3427:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3497:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3506:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3509:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3499:6:16"},"nodeType":"YulFunctionCall","src":"3499:12:16"},"nodeType":"YulExpressionStatement","src":"3499:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3484:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"3492:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3481:2:16"},"nodeType":"YulFunctionCall","src":"3481:15:16"},"nodeType":"YulIf","src":"3478:35:16"},{"nodeType":"YulVariableDeclaration","src":"3522:26:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3537:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3545:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3533:3:16"},"nodeType":"YulFunctionCall","src":"3533:15:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3526:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3613:86:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3634:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3652:3:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3639:12:16"},"nodeType":"YulFunctionCall","src":"3639:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:16"},"nodeType":"YulFunctionCall","src":"3627:30:16"},"nodeType":"YulExpressionStatement","src":"3627:30:16"},{"nodeType":"YulAssignment","src":"3670:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3681:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3686:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:16"},"nodeType":"YulFunctionCall","src":"3677:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3670:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3568:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3573:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3565:2:16"},"nodeType":"YulFunctionCall","src":"3565:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3581:23:16","statements":[{"nodeType":"YulAssignment","src":"3583:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3594:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3599:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3590:3:16"},"nodeType":"YulFunctionCall","src":"3590:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3583:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3561:3:16","statements":[]},"src":"3557:142:16"},{"nodeType":"YulAssignment","src":"3708:14:16","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3717:5:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3708:5:16"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3096:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3104:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3112:5:16","type":""}],"src":"3058:670:16"},{"body":{"nodeType":"YulBlock","src":"3785:478:16","statements":[{"body":{"nodeType":"YulBlock","src":"3834:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3843:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3846:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3836:6:16"},"nodeType":"YulFunctionCall","src":"3836:12:16"},"nodeType":"YulExpressionStatement","src":"3836:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3813:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3821:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:16"},"nodeType":"YulFunctionCall","src":"3809:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"3828:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3805:3:16"},"nodeType":"YulFunctionCall","src":"3805:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3798:6:16"},"nodeType":"YulFunctionCall","src":"3798:35:16"},"nodeType":"YulIf","src":"3795:55:16"},{"nodeType":"YulVariableDeclaration","src":"3859:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3882:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3869:12:16"},"nodeType":"YulFunctionCall","src":"3869:20:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3863:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3928:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3930:16:16"},"nodeType":"YulFunctionCall","src":"3930:18:16"},"nodeType":"YulExpressionStatement","src":"3930:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3904:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"3908:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3901:2:16"},"nodeType":"YulFunctionCall","src":"3901:26:16"},"nodeType":"YulIf","src":"3898:52:16"},{"nodeType":"YulVariableDeclaration","src":"3959:70:16","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4002:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"4006:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4017:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4013:3:16"},"nodeType":"YulFunctionCall","src":"4013:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3994:3:16"},"nodeType":"YulFunctionCall","src":"3994:27:16"},{"kind":"number","nodeType":"YulLiteral","src":"4023:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:16"},"nodeType":"YulFunctionCall","src":"3990:38:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3974:15:16"},"nodeType":"YulFunctionCall","src":"3974:55:16"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"3963:7:16","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4045:7:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4054:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4038:6:16"},"nodeType":"YulFunctionCall","src":"4038:19:16"},"nodeType":"YulExpressionStatement","src":"4038:19:16"},{"body":{"nodeType":"YulBlock","src":"4105:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4114:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4117:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4107:6:16"},"nodeType":"YulFunctionCall","src":"4107:12:16"},"nodeType":"YulExpressionStatement","src":"4107:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4080:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4088:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4076:3:16"},"nodeType":"YulFunctionCall","src":"4076:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"4093:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4072:3:16"},"nodeType":"YulFunctionCall","src":"4072:26:16"},{"name":"end","nodeType":"YulIdentifier","src":"4100:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4069:2:16"},"nodeType":"YulFunctionCall","src":"4069:35:16"},"nodeType":"YulIf","src":"4066:55:16"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4147:7:16"},{"kind":"number","nodeType":"YulLiteral","src":"4156:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4143:3:16"},"nodeType":"YulFunctionCall","src":"4143:18:16"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4167:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4163:3:16"},"nodeType":"YulFunctionCall","src":"4163:17:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4182:2:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4130:12:16"},"nodeType":"YulFunctionCall","src":"4130:55:16"},"nodeType":"YulExpressionStatement","src":"4130:55:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4209:7:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4218:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4205:3:16"},"nodeType":"YulFunctionCall","src":"4205:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"4223:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:16"},"nodeType":"YulFunctionCall","src":"4201:27:16"},{"kind":"number","nodeType":"YulLiteral","src":"4230:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4194:6:16"},"nodeType":"YulFunctionCall","src":"4194:38:16"},"nodeType":"YulExpressionStatement","src":"4194:38:16"},{"nodeType":"YulAssignment","src":"4241:16:16","value":{"name":"array_1","nodeType":"YulIdentifier","src":"4250:7:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4241:5:16"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3759:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3767:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3775:5:16","type":""}],"src":"3733:530:16"},{"body":{"nodeType":"YulBlock","src":"4487:1443:16","statements":[{"body":{"nodeType":"YulBlock","src":"4534:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4543:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4546:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4536:6:16"},"nodeType":"YulFunctionCall","src":"4536:12:16"},"nodeType":"YulExpressionStatement","src":"4536:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4508:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4504:3:16"},"nodeType":"YulFunctionCall","src":"4504:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4529:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4500:3:16"},"nodeType":"YulFunctionCall","src":"4500:33:16"},"nodeType":"YulIf","src":"4497:53:16"},{"nodeType":"YulVariableDeclaration","src":"4559:37:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4586:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4573:12:16"},"nodeType":"YulFunctionCall","src":"4573:23:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4563:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4605:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4615:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4609:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4660:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4669:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4672:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4662:6:16"},"nodeType":"YulFunctionCall","src":"4662:12:16"},"nodeType":"YulExpressionStatement","src":"4662:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4648:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4656:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4645:2:16"},"nodeType":"YulFunctionCall","src":"4645:14:16"},"nodeType":"YulIf","src":"4642:34:16"},{"nodeType":"YulVariableDeclaration","src":"4685:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4699:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4710:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4695:3:16"},"nodeType":"YulFunctionCall","src":"4695:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4689:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4765:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4774:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4777:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4767:6:16"},"nodeType":"YulFunctionCall","src":"4767:12:16"},"nodeType":"YulExpressionStatement","src":"4767:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4744:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"4748:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4740:3:16"},"nodeType":"YulFunctionCall","src":"4740:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4755:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4736:3:16"},"nodeType":"YulFunctionCall","src":"4736:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4729:6:16"},"nodeType":"YulFunctionCall","src":"4729:35:16"},"nodeType":"YulIf","src":"4726:55:16"},{"nodeType":"YulVariableDeclaration","src":"4790:26:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4813:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4800:12:16"},"nodeType":"YulFunctionCall","src":"4800:16:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4794:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4825:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4835:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4829:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4848:79:16","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4923:2:16"}],"functionName":{"name":"array_allocation_size_array_contract_IERC20_dyn","nodeType":"YulIdentifier","src":"4875:47:16"},"nodeType":"YulFunctionCall","src":"4875:51:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4859:15:16"},"nodeType":"YulFunctionCall","src":"4859:68:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4852:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4936:16:16","value":{"name":"dst","nodeType":"YulIdentifier","src":"4949:3:16"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4940:5:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4968:3:16"},{"name":"_3","nodeType":"YulIdentifier","src":"4973:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4961:6:16"},"nodeType":"YulFunctionCall","src":"4961:15:16"},"nodeType":"YulExpressionStatement","src":"4961:15:16"},{"nodeType":"YulAssignment","src":"4985:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4996:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5001:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4992:3:16"},"nodeType":"YulFunctionCall","src":"4992:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4985:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5013:42:16","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5035:2:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5043:1:16","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5046:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5039:3:16"},"nodeType":"YulFunctionCall","src":"5039:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:16"},"nodeType":"YulFunctionCall","src":"5031:19:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5052:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5027:3:16"},"nodeType":"YulFunctionCall","src":"5027:28:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5017:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5087:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5096:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5099:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5089:6:16"},"nodeType":"YulFunctionCall","src":"5089:12:16"},"nodeType":"YulExpressionStatement","src":"5089:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5070:6:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5078:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5067:2:16"},"nodeType":"YulFunctionCall","src":"5067:19:16"},"nodeType":"YulIf","src":"5064:39:16"},{"nodeType":"YulVariableDeclaration","src":"5112:22:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5127:2:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5131:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5123:3:16"},"nodeType":"YulFunctionCall","src":"5123:11:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5116:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5199:161:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5213:30:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5239:3:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5226:12:16"},"nodeType":"YulFunctionCall","src":"5226:17:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5217:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5256:24:16"},"nodeType":"YulFunctionCall","src":"5256:31:16"},"nodeType":"YulExpressionStatement","src":"5256:31:16"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5307:3:16"},{"name":"value","nodeType":"YulIdentifier","src":"5312:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5300:6:16"},"nodeType":"YulFunctionCall","src":"5300:18:16"},"nodeType":"YulExpressionStatement","src":"5300:18:16"},{"nodeType":"YulAssignment","src":"5331:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5342:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5347:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5338:3:16"},"nodeType":"YulFunctionCall","src":"5338:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5331:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5154:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5159:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5151:2:16"},"nodeType":"YulFunctionCall","src":"5151:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5167:23:16","statements":[{"nodeType":"YulAssignment","src":"5169:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5180:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5185:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:16"},"nodeType":"YulFunctionCall","src":"5176:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5169:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5147:3:16","statements":[]},"src":"5143:217:16"},{"nodeType":"YulAssignment","src":"5369:15:16","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5379:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5369:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"5393:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5426:9:16"},{"name":"_4","nodeType":"YulIdentifier","src":"5437:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5422:3:16"},"nodeType":"YulFunctionCall","src":"5422:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5409:12:16"},"nodeType":"YulFunctionCall","src":"5409:32:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5397:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5470:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5479:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5482:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5472:6:16"},"nodeType":"YulFunctionCall","src":"5472:12:16"},"nodeType":"YulExpressionStatement","src":"5472:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5456:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5466:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5453:2:16"},"nodeType":"YulFunctionCall","src":"5453:16:16"},"nodeType":"YulIf","src":"5450:36:16"},{"nodeType":"YulAssignment","src":"5495:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5549:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:16"},"nodeType":"YulFunctionCall","src":"5534:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5560:7:16"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5505:28:16"},"nodeType":"YulFunctionCall","src":"5505:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5495:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"5577:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5610:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5621:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5606:3:16"},"nodeType":"YulFunctionCall","src":"5606:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5593:12:16"},"nodeType":"YulFunctionCall","src":"5593:32:16"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5581:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5654:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5663:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5666:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5656:6:16"},"nodeType":"YulFunctionCall","src":"5656:12:16"},"nodeType":"YulExpressionStatement","src":"5656:12:16"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"5640:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5650:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5637:2:16"},"nodeType":"YulFunctionCall","src":"5637:16:16"},"nodeType":"YulIf","src":"5634:36:16"},{"nodeType":"YulAssignment","src":"5679:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5722:9:16"},{"name":"offset_2","nodeType":"YulIdentifier","src":"5733:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:16"},"nodeType":"YulFunctionCall","src":"5718:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5744:7:16"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5689:28:16"},"nodeType":"YulFunctionCall","src":"5689:63:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5679:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"5761:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5794:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5805:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:16"},"nodeType":"YulFunctionCall","src":"5790:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5777:12:16"},"nodeType":"YulFunctionCall","src":"5777:32:16"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"5765:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5838:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5847:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5850:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5840:6:16"},"nodeType":"YulFunctionCall","src":"5840:12:16"},"nodeType":"YulExpressionStatement","src":"5840:12:16"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"5824:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5834:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5821:2:16"},"nodeType":"YulFunctionCall","src":"5821:16:16"},"nodeType":"YulIf","src":"5818:36:16"},{"nodeType":"YulAssignment","src":"5863:61:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5894:9:16"},{"name":"offset_3","nodeType":"YulIdentifier","src":"5905:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5890:3:16"},"nodeType":"YulFunctionCall","src":"5890:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5916:7:16"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5873:16:16"},"nodeType":"YulFunctionCall","src":"5873:51:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5863:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4429:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4440:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4452:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4460:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4468:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4476:6:16","type":""}],"src":"4268:1662:16"},{"body":{"nodeType":"YulBlock","src":"6109:160:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6137:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6119:6:16"},"nodeType":"YulFunctionCall","src":"6119:21:16"},"nodeType":"YulExpressionStatement","src":"6119:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6160:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6171:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6156:3:16"},"nodeType":"YulFunctionCall","src":"6156:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6176:2:16","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6149:6:16"},"nodeType":"YulFunctionCall","src":"6149:30:16"},"nodeType":"YulExpressionStatement","src":"6149:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6199:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6210:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6195:3:16"},"nodeType":"YulFunctionCall","src":"6195:18:16"},{"hexValue":"4f6e6c79206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6215:12:16","type":"","value":"Only owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6188:6:16"},"nodeType":"YulFunctionCall","src":"6188:40:16"},"nodeType":"YulExpressionStatement","src":"6188:40:16"},{"nodeType":"YulAssignment","src":"6237:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6249:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6260:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6245:3:16"},"nodeType":"YulFunctionCall","src":"6245:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6237:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6086:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6100:4:16","type":""}],"src":"5935:334:16"},{"body":{"nodeType":"YulBlock","src":"6448:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6465:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6476:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6458:6:16"},"nodeType":"YulFunctionCall","src":"6458:21:16"},"nodeType":"YulExpressionStatement","src":"6458:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6499:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6510:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:16"},"nodeType":"YulFunctionCall","src":"6495:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"6515:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6488:6:16"},"nodeType":"YulFunctionCall","src":"6488:30:16"},"nodeType":"YulExpressionStatement","src":"6488:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6549:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6534:3:16"},"nodeType":"YulFunctionCall","src":"6534:18:16"},{"hexValue":"4e6f2070726f66697461626c65206f70706f7274756e697479","kind":"string","nodeType":"YulLiteral","src":"6554:27:16","type":"","value":"No profitable opportunity"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6527:6:16"},"nodeType":"YulFunctionCall","src":"6527:55:16"},"nodeType":"YulExpressionStatement","src":"6527:55:16"},{"nodeType":"YulAssignment","src":"6591:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:16"},"nodeType":"YulFunctionCall","src":"6599:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6591:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_21971e62578e10cd34ab65d1697b9c5f963a7a937afc895e049ad66dce7f0f37__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6425:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6439:4:16","type":""}],"src":"6274:349:16"},{"body":{"nodeType":"YulBlock","src":"6660:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6677:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6684:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6689:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6680:3:16"},"nodeType":"YulFunctionCall","src":"6680:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6670:6:16"},"nodeType":"YulFunctionCall","src":"6670:31:16"},"nodeType":"YulExpressionStatement","src":"6670:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6717:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6720:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6710:6:16"},"nodeType":"YulFunctionCall","src":"6710:15:16"},"nodeType":"YulExpressionStatement","src":"6710:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6741:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6744:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6734:6:16"},"nodeType":"YulFunctionCall","src":"6734:15:16"},"nodeType":"YulExpressionStatement","src":"6734:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6628:127:16"},{"body":{"nodeType":"YulBlock","src":"6927:407:16","statements":[{"nodeType":"YulAssignment","src":"6937:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6949:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6960:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6945:3:16"},"nodeType":"YulFunctionCall","src":"6945:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6937:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"6973:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6991:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6996:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6987:3:16"},"nodeType":"YulFunctionCall","src":"6987:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"7000:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6983:3:16"},"nodeType":"YulFunctionCall","src":"6983:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6977:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7018:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7039:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7033:5:16"},"nodeType":"YulFunctionCall","src":"7033:13:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7048:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7029:3:16"},"nodeType":"YulFunctionCall","src":"7029:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7011:6:16"},"nodeType":"YulFunctionCall","src":"7011:41:16"},"nodeType":"YulExpressionStatement","src":"7011:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7072:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7083:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7068:3:16"},"nodeType":"YulFunctionCall","src":"7068:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7104:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7112:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:16"},"nodeType":"YulFunctionCall","src":"7100:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7094:5:16"},"nodeType":"YulFunctionCall","src":"7094:24:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7120:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7090:3:16"},"nodeType":"YulFunctionCall","src":"7090:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:16"},"nodeType":"YulFunctionCall","src":"7061:63:16"},"nodeType":"YulExpressionStatement","src":"7061:63:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7144:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7155:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:16"},"nodeType":"YulFunctionCall","src":"7140:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7172:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7180:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7168:3:16"},"nodeType":"YulFunctionCall","src":"7168:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7162:5:16"},"nodeType":"YulFunctionCall","src":"7162:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7133:6:16"},"nodeType":"YulFunctionCall","src":"7133:54:16"},"nodeType":"YulExpressionStatement","src":"7133:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7207:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7218:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7203:3:16"},"nodeType":"YulFunctionCall","src":"7203:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7239:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7247:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7235:3:16"},"nodeType":"YulFunctionCall","src":"7235:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7229:5:16"},"nodeType":"YulFunctionCall","src":"7229:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"7255:8:16","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7225:3:16"},"nodeType":"YulFunctionCall","src":"7225:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7196:6:16"},"nodeType":"YulFunctionCall","src":"7196:69:16"},"nodeType":"YulExpressionStatement","src":"7196:69:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7285:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7296:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7281:3:16"},"nodeType":"YulFunctionCall","src":"7281:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7313:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7321:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7309:3:16"},"nodeType":"YulFunctionCall","src":"7309:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7303:5:16"},"nodeType":"YulFunctionCall","src":"7303:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7274:6:16"},"nodeType":"YulFunctionCall","src":"7274:54:16"},"nodeType":"YulExpressionStatement","src":"7274:54:16"}]},"name":"abi_encode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr__to_t_struct$_ArbitrageParams_$1431_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6907:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6918:4:16","type":""}],"src":"6760:574:16"},{"body":{"nodeType":"YulBlock","src":"7400:374:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7410:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7430:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7424:5:16"},"nodeType":"YulFunctionCall","src":"7424:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7414:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7452:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"7457:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7445:6:16"},"nodeType":"YulFunctionCall","src":"7445:19:16"},"nodeType":"YulExpressionStatement","src":"7445:19:16"},{"nodeType":"YulVariableDeclaration","src":"7473:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7483:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7477:2:16","type":""}]},{"nodeType":"YulAssignment","src":"7496:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7507:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7512:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:16"},"nodeType":"YulFunctionCall","src":"7503:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7496:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"7524:28:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7542:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7549:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7538:3:16"},"nodeType":"YulFunctionCall","src":"7538:14:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7528:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7561:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7570:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7565:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7629:120:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7650:3:16"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7661:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7655:5:16"},"nodeType":"YulFunctionCall","src":"7655:13:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7643:6:16"},"nodeType":"YulFunctionCall","src":"7643:26:16"},"nodeType":"YulExpressionStatement","src":"7643:26:16"},{"nodeType":"YulAssignment","src":"7682:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7693:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7698:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:16"},"nodeType":"YulFunctionCall","src":"7689:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7682:3:16"}]},{"nodeType":"YulAssignment","src":"7714:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7728:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"7736:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7724:3:16"},"nodeType":"YulFunctionCall","src":"7724:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7714:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7591:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"7594:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7588:2:16"},"nodeType":"YulFunctionCall","src":"7588:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7602:18:16","statements":[{"nodeType":"YulAssignment","src":"7604:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7613:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7616:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7609:3:16"},"nodeType":"YulFunctionCall","src":"7609:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7604:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7584:3:16","statements":[]},"src":"7580:169:16"},{"nodeType":"YulAssignment","src":"7758:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"7765:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7758:3:16"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7377:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7384:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7392:3:16","type":""}],"src":"7339:435:16"},{"body":{"nodeType":"YulBlock","src":"8123:1112:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8133:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8151:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8162:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8147:3:16"},"nodeType":"YulFunctionCall","src":"8147:19:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"8137:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8175:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8193:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8198:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8189:3:16"},"nodeType":"YulFunctionCall","src":"8189:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"8202:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8185:3:16"},"nodeType":"YulFunctionCall","src":"8185:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8179:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8220:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8235:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8243:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8231:3:16"},"nodeType":"YulFunctionCall","src":"8231:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8213:6:16"},"nodeType":"YulFunctionCall","src":"8213:34:16"},"nodeType":"YulExpressionStatement","src":"8213:34:16"},{"nodeType":"YulVariableDeclaration","src":"8256:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8266:2:16","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8260:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8288:9:16"},{"name":"_2","nodeType":"YulIdentifier","src":"8299:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8284:3:16"},"nodeType":"YulFunctionCall","src":"8284:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8304:3:16","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8277:6:16"},"nodeType":"YulFunctionCall","src":"8277:31:16"},"nodeType":"YulExpressionStatement","src":"8277:31:16"},{"nodeType":"YulVariableDeclaration","src":"8317:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"8328:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"8321:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8343:27:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8363:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8357:5:16"},"nodeType":"YulFunctionCall","src":"8357:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8347:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"8386:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"8394:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8379:6:16"},"nodeType":"YulFunctionCall","src":"8379:22:16"},"nodeType":"YulExpressionStatement","src":"8379:22:16"},{"nodeType":"YulAssignment","src":"8410:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8421:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8432:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8417:3:16"},"nodeType":"YulFunctionCall","src":"8417:19:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8410:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"8445:29:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8463:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"8471:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8459:3:16"},"nodeType":"YulFunctionCall","src":"8459:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8449:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8483:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8492:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8487:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8551:129:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8572:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8587:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8581:5:16"},"nodeType":"YulFunctionCall","src":"8581:13:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8596:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8577:3:16"},"nodeType":"YulFunctionCall","src":"8577:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8565:6:16"},"nodeType":"YulFunctionCall","src":"8565:35:16"},"nodeType":"YulExpressionStatement","src":"8565:35:16"},{"nodeType":"YulAssignment","src":"8613:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8624:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"8629:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8620:3:16"},"nodeType":"YulFunctionCall","src":"8620:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8613:3:16"}]},{"nodeType":"YulAssignment","src":"8645:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8659:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"8667:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8655:3:16"},"nodeType":"YulFunctionCall","src":"8655:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8645:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8513:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"8516:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8510:2:16"},"nodeType":"YulFunctionCall","src":"8510:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8524:18:16","statements":[{"nodeType":"YulAssignment","src":"8526:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8535:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"8538:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8531:3:16"},"nodeType":"YulFunctionCall","src":"8531:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8526:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"8506:3:16","statements":[]},"src":"8502:178:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8700:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8711:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8696:3:16"},"nodeType":"YulFunctionCall","src":"8696:18:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8720:3:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8725:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8716:3:16"},"nodeType":"YulFunctionCall","src":"8716:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8689:6:16"},"nodeType":"YulFunctionCall","src":"8689:47:16"},"nodeType":"YulExpressionStatement","src":"8689:47:16"},{"nodeType":"YulVariableDeclaration","src":"8745:55:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8788:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"8796:3:16"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8759:28:16"},"nodeType":"YulFunctionCall","src":"8759:41:16"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"8749:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8820:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8831:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8816:3:16"},"nodeType":"YulFunctionCall","src":"8816:18:16"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8840:6:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8848:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8836:3:16"},"nodeType":"YulFunctionCall","src":"8836:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8809:6:16"},"nodeType":"YulFunctionCall","src":"8809:50:16"},"nodeType":"YulExpressionStatement","src":"8809:50:16"},{"nodeType":"YulVariableDeclaration","src":"8868:29:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8890:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8884:5:16"},"nodeType":"YulFunctionCall","src":"8884:13:16"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"8872:8:16","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"8913:6:16"},{"name":"length_1","nodeType":"YulIdentifier","src":"8921:8:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8906:6:16"},"nodeType":"YulFunctionCall","src":"8906:24:16"},"nodeType":"YulExpressionStatement","src":"8906:24:16"},{"nodeType":"YulVariableDeclaration","src":"8939:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8950:1:16","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"8943:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9018:91:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"9047:6:16"},{"name":"i_1","nodeType":"YulIdentifier","src":"9055:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9043:3:16"},"nodeType":"YulFunctionCall","src":"9043:16:16"},{"name":"_2","nodeType":"YulIdentifier","src":"9061:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9039:3:16"},"nodeType":"YulFunctionCall","src":"9039:25:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9080:6:16"},{"name":"i_1","nodeType":"YulIdentifier","src":"9088:3:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9076:3:16"},"nodeType":"YulFunctionCall","src":"9076:16:16"},{"name":"_2","nodeType":"YulIdentifier","src":"9094:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9072:3:16"},"nodeType":"YulFunctionCall","src":"9072:25:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9066:5:16"},"nodeType":"YulFunctionCall","src":"9066:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9032:6:16"},"nodeType":"YulFunctionCall","src":"9032:67:16"},"nodeType":"YulExpressionStatement","src":"9032:67:16"}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"8971:3:16"},{"name":"length_1","nodeType":"YulIdentifier","src":"8976:8:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8968:2:16"},"nodeType":"YulFunctionCall","src":"8968:17:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8986:23:16","statements":[{"nodeType":"YulAssignment","src":"8988:19:16","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"8999:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"9004:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8995:3:16"},"nodeType":"YulFunctionCall","src":"8995:12:16"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"8988:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"8964:3:16","statements":[]},"src":"8960:149:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"9133:6:16"},{"name":"length_1","nodeType":"YulIdentifier","src":"9141:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:16"},"nodeType":"YulFunctionCall","src":"9129:21:16"},{"name":"_2","nodeType":"YulIdentifier","src":"9152:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9125:3:16"},"nodeType":"YulFunctionCall","src":"9125:30:16"},{"kind":"number","nodeType":"YulLiteral","src":"9157:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9118:6:16"},"nodeType":"YulFunctionCall","src":"9118:41:16"},"nodeType":"YulExpressionStatement","src":"9118:41:16"},{"nodeType":"YulAssignment","src":"9168:61:16","value":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"9184:6:16"},{"arguments":[{"arguments":[{"name":"length_1","nodeType":"YulIdentifier","src":"9200:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9196:3:16"},"nodeType":"YulFunctionCall","src":"9196:17:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9219:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9215:3:16"},"nodeType":"YulFunctionCall","src":"9215:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9192:3:16"},"nodeType":"YulFunctionCall","src":"9192:31:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:16"},"nodeType":"YulFunctionCall","src":"9180:44:16"},{"name":"_2","nodeType":"YulIdentifier","src":"9226:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9176:3:16"},"nodeType":"YulFunctionCall","src":"9176:53:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9168:4:16"}]}]},"name":"abi_encode_tuple_t_contract$_FlashLoanArbitrage_$2043_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8068:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8079:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8087:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8095:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8103:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8114:4:16","type":""}],"src":"7779:1456:16"},{"body":{"nodeType":"YulBlock","src":"9272:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9289:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9296:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9301:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9292:3:16"},"nodeType":"YulFunctionCall","src":"9292:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9282:6:16"},"nodeType":"YulFunctionCall","src":"9282:31:16"},"nodeType":"YulExpressionStatement","src":"9282:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9329:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9332:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9322:6:16"},"nodeType":"YulFunctionCall","src":"9322:15:16"},"nodeType":"YulExpressionStatement","src":"9322:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9353:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9356:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9346:6:16"},"nodeType":"YulFunctionCall","src":"9346:15:16"},"nodeType":"YulExpressionStatement","src":"9346:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9240:127:16"},{"body":{"nodeType":"YulBlock","src":"9424:116:16","statements":[{"nodeType":"YulAssignment","src":"9434:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9449:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9452:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9445:3:16"},"nodeType":"YulFunctionCall","src":"9445:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9434:7:16"}]},{"body":{"nodeType":"YulBlock","src":"9512:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9514:16:16"},"nodeType":"YulFunctionCall","src":"9514:18:16"},"nodeType":"YulExpressionStatement","src":"9514:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9483:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9476:6:16"},"nodeType":"YulFunctionCall","src":"9476:9:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9490:1:16"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"9497:7:16"},{"name":"x","nodeType":"YulIdentifier","src":"9506:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9493:3:16"},"nodeType":"YulFunctionCall","src":"9493:15:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9487:2:16"},"nodeType":"YulFunctionCall","src":"9487:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9473:2:16"},"nodeType":"YulFunctionCall","src":"9473:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9466:6:16"},"nodeType":"YulFunctionCall","src":"9466:45:16"},"nodeType":"YulIf","src":"9463:71:16"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9403:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9406:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9412:7:16","type":""}],"src":"9372:168:16"},{"body":{"nodeType":"YulBlock","src":"9591:171:16","statements":[{"body":{"nodeType":"YulBlock","src":"9622:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9643:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9650:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9655:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9646:3:16"},"nodeType":"YulFunctionCall","src":"9646:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9636:6:16"},"nodeType":"YulFunctionCall","src":"9636:31:16"},"nodeType":"YulExpressionStatement","src":"9636:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9687:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9690:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9680:6:16"},"nodeType":"YulFunctionCall","src":"9680:15:16"},"nodeType":"YulExpressionStatement","src":"9680:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9715:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9718:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9708:6:16"},"nodeType":"YulFunctionCall","src":"9708:15:16"},"nodeType":"YulExpressionStatement","src":"9708:15:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9611:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9604:6:16"},"nodeType":"YulFunctionCall","src":"9604:9:16"},"nodeType":"YulIf","src":"9601:132:16"},{"nodeType":"YulAssignment","src":"9742:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9751:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9754:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9747:3:16"},"nodeType":"YulFunctionCall","src":"9747:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9742:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9576:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9579:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9585:1:16","type":""}],"src":"9545:217:16"},{"body":{"nodeType":"YulBlock","src":"9815:77:16","statements":[{"nodeType":"YulAssignment","src":"9825:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9836:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9839:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9832:3:16"},"nodeType":"YulFunctionCall","src":"9832:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9825:3:16"}]},{"body":{"nodeType":"YulBlock","src":"9864:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9866:16:16"},"nodeType":"YulFunctionCall","src":"9866:18:16"},"nodeType":"YulExpressionStatement","src":"9866:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9856:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"9859:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9853:2:16"},"nodeType":"YulFunctionCall","src":"9853:10:16"},"nodeType":"YulIf","src":"9850:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9798:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9801:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9807:3:16","type":""}],"src":"9767:125:16"},{"body":{"nodeType":"YulBlock","src":"9946:79:16","statements":[{"nodeType":"YulAssignment","src":"9956:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9968:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9971:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9964:3:16"},"nodeType":"YulFunctionCall","src":"9964:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9956:4:16"}]},{"body":{"nodeType":"YulBlock","src":"9997:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9999:16:16"},"nodeType":"YulFunctionCall","src":"9999:18:16"},"nodeType":"YulExpressionStatement","src":"9999:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9988:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"9994:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9985:2:16"},"nodeType":"YulFunctionCall","src":"9985:11:16"},"nodeType":"YulIf","src":"9982:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9928:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9931:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9937:4:16","type":""}],"src":"9897:128:16"},{"body":{"nodeType":"YulBlock","src":"10215:262:16","statements":[{"nodeType":"YulAssignment","src":"10225:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10237:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10248:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10233:3:16"},"nodeType":"YulFunctionCall","src":"10233:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10225:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"10261:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10279:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10284:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10275:3:16"},"nodeType":"YulFunctionCall","src":"10275:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"10288:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10271:3:16"},"nodeType":"YulFunctionCall","src":"10271:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10265:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10306:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10321:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"10329:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10317:3:16"},"nodeType":"YulFunctionCall","src":"10317:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10299:6:16"},"nodeType":"YulFunctionCall","src":"10299:34:16"},"nodeType":"YulExpressionStatement","src":"10299:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10353:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10364:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10349:3:16"},"nodeType":"YulFunctionCall","src":"10349:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10373:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"10381:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10369:3:16"},"nodeType":"YulFunctionCall","src":"10369:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10342:6:16"},"nodeType":"YulFunctionCall","src":"10342:43:16"},"nodeType":"YulExpressionStatement","src":"10342:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10416:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10401:3:16"},"nodeType":"YulFunctionCall","src":"10401:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"10421:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10394:6:16"},"nodeType":"YulFunctionCall","src":"10394:34:16"},"nodeType":"YulExpressionStatement","src":"10394:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10448:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10459:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:16"},"nodeType":"YulFunctionCall","src":"10444:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"10464:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10437:6:16"},"nodeType":"YulFunctionCall","src":"10437:34:16"},"nodeType":"YulExpressionStatement","src":"10437:34:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10160:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10171:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10179:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10187:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10195:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10206:4:16","type":""}],"src":"10030:447:16"},{"body":{"nodeType":"YulBlock","src":"10563:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"10609:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10618:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10621:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10611:6:16"},"nodeType":"YulFunctionCall","src":"10611:12:16"},"nodeType":"YulExpressionStatement","src":"10611:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10584:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10593:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10580:3:16"},"nodeType":"YulFunctionCall","src":"10580:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10605:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10576:3:16"},"nodeType":"YulFunctionCall","src":"10576:32:16"},"nodeType":"YulIf","src":"10573:52:16"},{"nodeType":"YulAssignment","src":"10634:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10650:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10644:5:16"},"nodeType":"YulFunctionCall","src":"10644:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10634:6:16"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10540:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10552:6:16","type":""}],"src":"10482:184:16"},{"body":{"nodeType":"YulBlock","src":"10800:145:16","statements":[{"nodeType":"YulAssignment","src":"10810:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10822:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10833:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10818:3:16"},"nodeType":"YulFunctionCall","src":"10818:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10810:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10852:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10867:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10883:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10888:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10879:3:16"},"nodeType":"YulFunctionCall","src":"10879:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"10892:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10875:3:16"},"nodeType":"YulFunctionCall","src":"10875:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10863:3:16"},"nodeType":"YulFunctionCall","src":"10863:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10845:6:16"},"nodeType":"YulFunctionCall","src":"10845:51:16"},"nodeType":"YulExpressionStatement","src":"10845:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10916:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10927:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10912:3:16"},"nodeType":"YulFunctionCall","src":"10912:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"10932:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10905:6:16"},"nodeType":"YulFunctionCall","src":"10905:34:16"},"nodeType":"YulExpressionStatement","src":"10905:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10761:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10772:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10780:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10791:4:16","type":""}],"src":"10671:274:16"},{"body":{"nodeType":"YulBlock","src":"11028:199:16","statements":[{"body":{"nodeType":"YulBlock","src":"11074:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11083:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11086:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11076:6:16"},"nodeType":"YulFunctionCall","src":"11076:12:16"},"nodeType":"YulExpressionStatement","src":"11076:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11049:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11058:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11045:3:16"},"nodeType":"YulFunctionCall","src":"11045:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11070:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11041:3:16"},"nodeType":"YulFunctionCall","src":"11041:32:16"},"nodeType":"YulIf","src":"11038:52:16"},{"nodeType":"YulVariableDeclaration","src":"11099:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11118:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11112:5:16"},"nodeType":"YulFunctionCall","src":"11112:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11103:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11181:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11190:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11193:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11183:6:16"},"nodeType":"YulFunctionCall","src":"11183:12:16"},"nodeType":"YulExpressionStatement","src":"11183:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11150:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11171:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11164:6:16"},"nodeType":"YulFunctionCall","src":"11164:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11157:6:16"},"nodeType":"YulFunctionCall","src":"11157:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11147:2:16"},"nodeType":"YulFunctionCall","src":"11147:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11140:6:16"},"nodeType":"YulFunctionCall","src":"11140:40:16"},"nodeType":"YulIf","src":"11137:60:16"},{"nodeType":"YulAssignment","src":"11206:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"11216:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11206:6:16"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10994:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11005:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11017:6:16","type":""}],"src":"10950:277:16"},{"body":{"nodeType":"YulBlock","src":"11406:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11423:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11434:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11416:6:16"},"nodeType":"YulFunctionCall","src":"11416:21:16"},"nodeType":"YulExpressionStatement","src":"11416:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11457:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11468:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:16"},"nodeType":"YulFunctionCall","src":"11453:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11473:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11446:6:16"},"nodeType":"YulFunctionCall","src":"11446:30:16"},"nodeType":"YulExpressionStatement","src":"11446:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11496:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11507:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11492:3:16"},"nodeType":"YulFunctionCall","src":"11492:18:16"},{"hexValue":"4f6e6c792042616c616e636572205661756c74","kind":"string","nodeType":"YulLiteral","src":"11512:21:16","type":"","value":"Only Balancer Vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11485:6:16"},"nodeType":"YulFunctionCall","src":"11485:49:16"},"nodeType":"YulExpressionStatement","src":"11485:49:16"},{"nodeType":"YulAssignment","src":"11543:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11555:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11566:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11551:3:16"},"nodeType":"YulFunctionCall","src":"11551:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11543:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_bec779a091766eb809048cf84d103b020badca80f63c0dbba7135454237490e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11383:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11397:4:16","type":""}],"src":"11232:343:16"},{"body":{"nodeType":"YulBlock","src":"11694:788:16","statements":[{"body":{"nodeType":"YulBlock","src":"11741:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11750:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11753:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11743:6:16"},"nodeType":"YulFunctionCall","src":"11743:12:16"},"nodeType":"YulExpressionStatement","src":"11743:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11715:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11724:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11711:3:16"},"nodeType":"YulFunctionCall","src":"11711:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11736:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11707:3:16"},"nodeType":"YulFunctionCall","src":"11707:33:16"},"nodeType":"YulIf","src":"11704:53:16"},{"nodeType":"YulVariableDeclaration","src":"11766:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11786:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11780:5:16"},"nodeType":"YulFunctionCall","src":"11780:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"11770:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11798:34:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11820:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11828:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:16"},"nodeType":"YulFunctionCall","src":"11816:16:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"11802:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11907:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11909:16:16"},"nodeType":"YulFunctionCall","src":"11909:18:16"},"nodeType":"YulExpressionStatement","src":"11909:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11850:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"11862:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11847:2:16"},"nodeType":"YulFunctionCall","src":"11847:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11886:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"11898:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11883:2:16"},"nodeType":"YulFunctionCall","src":"11883:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11844:2:16"},"nodeType":"YulFunctionCall","src":"11844:62:16"},"nodeType":"YulIf","src":"11841:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"11949:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:16"},"nodeType":"YulFunctionCall","src":"11938:22:16"},"nodeType":"YulExpressionStatement","src":"11938:22:16"},{"nodeType":"YulVariableDeclaration","src":"11969:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11988:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11982:5:16"},"nodeType":"YulFunctionCall","src":"11982:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11973:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12032:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12007:24:16"},"nodeType":"YulFunctionCall","src":"12007:31:16"},"nodeType":"YulExpressionStatement","src":"12007:31:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12054:6:16"},{"name":"value","nodeType":"YulIdentifier","src":"12062:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12047:6:16"},"nodeType":"YulFunctionCall","src":"12047:21:16"},"nodeType":"YulExpressionStatement","src":"12047:21:16"},{"nodeType":"YulVariableDeclaration","src":"12077:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12102:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12113:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12098:3:16"},"nodeType":"YulFunctionCall","src":"12098:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12092:5:16"},"nodeType":"YulFunctionCall","src":"12092:25:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12081:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12151:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12126:24:16"},"nodeType":"YulFunctionCall","src":"12126:33:16"},"nodeType":"YulExpressionStatement","src":"12126:33:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12179:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12187:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12175:3:16"},"nodeType":"YulFunctionCall","src":"12175:15:16"},{"name":"value_1","nodeType":"YulIdentifier","src":"12192:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12168:6:16"},"nodeType":"YulFunctionCall","src":"12168:32:16"},"nodeType":"YulExpressionStatement","src":"12168:32:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12220:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12228:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:16"},"nodeType":"YulFunctionCall","src":"12216:15:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12243:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12254:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12239:3:16"},"nodeType":"YulFunctionCall","src":"12239:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12233:5:16"},"nodeType":"YulFunctionCall","src":"12233:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12209:6:16"},"nodeType":"YulFunctionCall","src":"12209:50:16"},"nodeType":"YulExpressionStatement","src":"12209:50:16"},{"nodeType":"YulVariableDeclaration","src":"12268:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12293:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12304:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12289:3:16"},"nodeType":"YulFunctionCall","src":"12289:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12283:5:16"},"nodeType":"YulFunctionCall","src":"12283:25:16"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"12272:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"12341:7:16"}],"functionName":{"name":"validator_revert_uint24","nodeType":"YulIdentifier","src":"12317:23:16"},"nodeType":"YulFunctionCall","src":"12317:32:16"},"nodeType":"YulExpressionStatement","src":"12317:32:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12369:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12365:3:16"},"nodeType":"YulFunctionCall","src":"12365:15:16"},{"name":"value_2","nodeType":"YulIdentifier","src":"12382:7:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12358:6:16"},"nodeType":"YulFunctionCall","src":"12358:32:16"},"nodeType":"YulExpressionStatement","src":"12358:32:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12410:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12418:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12406:3:16"},"nodeType":"YulFunctionCall","src":"12406:16:16"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12434:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12445:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12430:3:16"},"nodeType":"YulFunctionCall","src":"12430:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12424:5:16"},"nodeType":"YulFunctionCall","src":"12424:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12399:6:16"},"nodeType":"YulFunctionCall","src":"12399:52:16"},"nodeType":"YulExpressionStatement","src":"12399:52:16"},{"nodeType":"YulAssignment","src":"12460:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"12470:6:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12460:6:16"}]}]},"name":"abi_decode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11660:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11671:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11683:6:16","type":""}],"src":"11580:902:16"},{"body":{"nodeType":"YulBlock","src":"12661:158:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12678:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12689:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12671:6:16"},"nodeType":"YulFunctionCall","src":"12671:21:16"},"nodeType":"YulExpressionStatement","src":"12671:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12712:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12723:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12708:3:16"},"nodeType":"YulFunctionCall","src":"12708:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12728:1:16","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12701:6:16"},"nodeType":"YulFunctionCall","src":"12701:29:16"},"nodeType":"YulExpressionStatement","src":"12701:29:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12750:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12761:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12746:3:16"},"nodeType":"YulFunctionCall","src":"12746:18:16"},{"hexValue":"4e6f2070726f666974","kind":"string","nodeType":"YulLiteral","src":"12766:11:16","type":"","value":"No profit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12739:6:16"},"nodeType":"YulFunctionCall","src":"12739:39:16"},"nodeType":"YulExpressionStatement","src":"12739:39:16"},{"nodeType":"YulAssignment","src":"12787:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12799:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12810:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12795:3:16"},"nodeType":"YulFunctionCall","src":"12795:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12787:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b8077984201be275e1ea17f5751a9d31c877fc60f88f5c477062be112bf7b97__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12638:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12652:4:16","type":""}],"src":"12487:332:16"},{"body":{"nodeType":"YulBlock","src":"12998:169:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13015:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13026:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13008:6:16"},"nodeType":"YulFunctionCall","src":"13008:21:16"},"nodeType":"YulExpressionStatement","src":"13008:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13049:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13060:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13045:3:16"},"nodeType":"YulFunctionCall","src":"13045:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13065:2:16","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13038:6:16"},"nodeType":"YulFunctionCall","src":"13038:30:16"},"nodeType":"YulExpressionStatement","src":"13038:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13099:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13084:3:16"},"nodeType":"YulFunctionCall","src":"13084:18:16"},{"hexValue":"496e73756666696369656e742070726f666974","kind":"string","nodeType":"YulLiteral","src":"13104:21:16","type":"","value":"Insufficient profit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13077:6:16"},"nodeType":"YulFunctionCall","src":"13077:49:16"},"nodeType":"YulExpressionStatement","src":"13077:49:16"},{"nodeType":"YulAssignment","src":"13135:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13147:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13158:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13143:3:16"},"nodeType":"YulFunctionCall","src":"13143:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13135:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b152b760143d31fd8ff5fec447c2175b6bd780222e6f19b3a88d930da500fa9c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12975:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12989:4:16","type":""}],"src":"12824:343:16"},{"body":{"nodeType":"YulBlock","src":"13219:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"13250:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13252:16:16"},"nodeType":"YulFunctionCall","src":"13252:18:16"},"nodeType":"YulExpressionStatement","src":"13252:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13235:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13246:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13242:3:16"},"nodeType":"YulFunctionCall","src":"13242:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13232:2:16"},"nodeType":"YulFunctionCall","src":"13232:17:16"},"nodeType":"YulIf","src":"13229:43:16"},{"nodeType":"YulAssignment","src":"13281:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13292:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"13299:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13288:3:16"},"nodeType":"YulFunctionCall","src":"13288:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13281:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13201:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13211:3:16","type":""}],"src":"13172:135:16"},{"body":{"nodeType":"YulBlock","src":"13373:400:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13383:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13403:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13397:5:16"},"nodeType":"YulFunctionCall","src":"13397:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13387:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13425:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13430:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13418:6:16"},"nodeType":"YulFunctionCall","src":"13418:19:16"},"nodeType":"YulExpressionStatement","src":"13418:19:16"},{"nodeType":"YulVariableDeclaration","src":"13446:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13456:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13450:2:16","type":""}]},{"nodeType":"YulAssignment","src":"13469:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13480:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13485:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13476:3:16"},"nodeType":"YulFunctionCall","src":"13476:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13469:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"13497:28:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13515:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13522:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13511:3:16"},"nodeType":"YulFunctionCall","src":"13511:14:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13501:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13534:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13543:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13538:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13602:146:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13623:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13638:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13632:5:16"},"nodeType":"YulFunctionCall","src":"13632:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13655:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13660:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13651:3:16"},"nodeType":"YulFunctionCall","src":"13651:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"13664:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13647:3:16"},"nodeType":"YulFunctionCall","src":"13647:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13628:3:16"},"nodeType":"YulFunctionCall","src":"13628:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13616:6:16"},"nodeType":"YulFunctionCall","src":"13616:52:16"},"nodeType":"YulExpressionStatement","src":"13616:52:16"},{"nodeType":"YulAssignment","src":"13681:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13692:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13697:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13688:3:16"},"nodeType":"YulFunctionCall","src":"13688:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13681:3:16"}]},{"nodeType":"YulAssignment","src":"13713:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13727:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"13735:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13723:3:16"},"nodeType":"YulFunctionCall","src":"13723:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13713:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13564:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13561:2:16"},"nodeType":"YulFunctionCall","src":"13561:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13575:18:16","statements":[{"nodeType":"YulAssignment","src":"13577:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13586:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"13589:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13582:3:16"},"nodeType":"YulFunctionCall","src":"13582:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13577:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"13557:3:16","statements":[]},"src":"13553:195:16"},{"nodeType":"YulAssignment","src":"13757:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"13764:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13757:3:16"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13350:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13357:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13365:3:16","type":""}],"src":"13312:461:16"},{"body":{"nodeType":"YulBlock","src":"14035:279:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14052:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14063:2:16","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14045:6:16"},"nodeType":"YulFunctionCall","src":"14045:21:16"},"nodeType":"YulExpressionStatement","src":"14045:21:16"},{"nodeType":"YulVariableDeclaration","src":"14075:70:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14118:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14130:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14141:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14126:3:16"},"nodeType":"YulFunctionCall","src":"14126:18:16"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"14089:28:16"},"nodeType":"YulFunctionCall","src":"14089:56:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"14079:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14165:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14176:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14161:3:16"},"nodeType":"YulFunctionCall","src":"14161:18:16"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14185:6:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14193:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14181:3:16"},"nodeType":"YulFunctionCall","src":"14181:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14154:6:16"},"nodeType":"YulFunctionCall","src":"14154:50:16"},"nodeType":"YulExpressionStatement","src":"14154:50:16"},{"nodeType":"YulAssignment","src":"14213:52:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14250:6:16"},{"name":"tail_1","nodeType":"YulIdentifier","src":"14258:6:16"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"14221:28:16"},"nodeType":"YulFunctionCall","src":"14221:44:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14213:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14285:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14296:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14281:3:16"},"nodeType":"YulFunctionCall","src":"14281:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"14301:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14274:6:16"},"nodeType":"YulFunctionCall","src":"14274:34:16"},"nodeType":"YulExpressionStatement","src":"14274:34:16"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13988:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13999:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14007:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14015:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14026:4:16","type":""}],"src":"13778:536:16"},{"body":{"nodeType":"YulBlock","src":"14493:181:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14510:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14521:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14503:6:16"},"nodeType":"YulFunctionCall","src":"14503:21:16"},"nodeType":"YulExpressionStatement","src":"14503:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14544:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14555:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14540:3:16"},"nodeType":"YulFunctionCall","src":"14540:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14560:2:16","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14533:6:16"},"nodeType":"YulFunctionCall","src":"14533:30:16"},"nodeType":"YulExpressionStatement","src":"14533:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14583:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14594:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14579:3:16"},"nodeType":"YulFunctionCall","src":"14579:18:16"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"14599:33:16","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14572:6:16"},"nodeType":"YulFunctionCall","src":"14572:61:16"},"nodeType":"YulExpressionStatement","src":"14572:61:16"},{"nodeType":"YulAssignment","src":"14642:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14654:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14665:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14650:3:16"},"nodeType":"YulFunctionCall","src":"14650:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14642:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14470:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14484:4:16","type":""}],"src":"14319:355:16"},{"body":{"nodeType":"YulBlock","src":"14858:153:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14875:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"14886:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14868:6:16"},"nodeType":"YulFunctionCall","src":"14868:25:16"},"nodeType":"YulExpressionStatement","src":"14868:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14913:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14924:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14909:3:16"},"nodeType":"YulFunctionCall","src":"14909:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14929:2:16","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14902:6:16"},"nodeType":"YulFunctionCall","src":"14902:30:16"},"nodeType":"YulExpressionStatement","src":"14902:30:16"},{"nodeType":"YulAssignment","src":"14941:64:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14978:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14990:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15001:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14986:3:16"},"nodeType":"YulFunctionCall","src":"14986:18:16"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"14949:28:16"},"nodeType":"YulFunctionCall","src":"14949:56:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14941:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14819:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14830:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14838:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14849:4:16","type":""}],"src":"14679:332:16"},{"body":{"nodeType":"YulBlock","src":"15122:783:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15132:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15142:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15136:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15189:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15198:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15201:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15191:6:16"},"nodeType":"YulFunctionCall","src":"15191:12:16"},"nodeType":"YulExpressionStatement","src":"15191:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15164:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15173:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15160:3:16"},"nodeType":"YulFunctionCall","src":"15160:23:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15185:2:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15156:3:16"},"nodeType":"YulFunctionCall","src":"15156:32:16"},"nodeType":"YulIf","src":"15153:52:16"},{"nodeType":"YulVariableDeclaration","src":"15214:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15234:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15228:5:16"},"nodeType":"YulFunctionCall","src":"15228:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15218:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15287:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15296:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15299:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15289:6:16"},"nodeType":"YulFunctionCall","src":"15289:12:16"},"nodeType":"YulExpressionStatement","src":"15289:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15259:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15267:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15256:2:16"},"nodeType":"YulFunctionCall","src":"15256:30:16"},"nodeType":"YulIf","src":"15253:50:16"},{"nodeType":"YulVariableDeclaration","src":"15312:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15326:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15337:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15322:3:16"},"nodeType":"YulFunctionCall","src":"15322:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15316:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15392:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15401:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15404:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15394:6:16"},"nodeType":"YulFunctionCall","src":"15394:12:16"},"nodeType":"YulExpressionStatement","src":"15394:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15371:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"15375:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15367:3:16"},"nodeType":"YulFunctionCall","src":"15367:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15382:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15363:3:16"},"nodeType":"YulFunctionCall","src":"15363:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15356:6:16"},"nodeType":"YulFunctionCall","src":"15356:35:16"},"nodeType":"YulIf","src":"15353:55:16"},{"nodeType":"YulVariableDeclaration","src":"15417:19:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15433:2:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15427:5:16"},"nodeType":"YulFunctionCall","src":"15427:9:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"15421:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15445:79:16","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"15520:2:16"}],"functionName":{"name":"array_allocation_size_array_contract_IERC20_dyn","nodeType":"YulIdentifier","src":"15472:47:16"},"nodeType":"YulFunctionCall","src":"15472:51:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"15456:15:16"},"nodeType":"YulFunctionCall","src":"15456:68:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"15449:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15533:16:16","value":{"name":"dst","nodeType":"YulIdentifier","src":"15546:3:16"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"15537:5:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15565:3:16"},{"name":"_3","nodeType":"YulIdentifier","src":"15570:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15558:6:16"},"nodeType":"YulFunctionCall","src":"15558:15:16"},"nodeType":"YulExpressionStatement","src":"15558:15:16"},{"nodeType":"YulAssignment","src":"15582:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15593:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15598:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15589:3:16"},"nodeType":"YulFunctionCall","src":"15589:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15582:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"15610:42:16","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15632:2:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15640:1:16","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"15643:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15636:3:16"},"nodeType":"YulFunctionCall","src":"15636:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15628:3:16"},"nodeType":"YulFunctionCall","src":"15628:19:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15649:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15624:3:16"},"nodeType":"YulFunctionCall","src":"15624:28:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"15614:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15684:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15693:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15696:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15686:6:16"},"nodeType":"YulFunctionCall","src":"15686:12:16"},"nodeType":"YulExpressionStatement","src":"15686:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"15667:6:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15675:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15664:2:16"},"nodeType":"YulFunctionCall","src":"15664:19:16"},"nodeType":"YulIf","src":"15661:39:16"},{"nodeType":"YulVariableDeclaration","src":"15709:22:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"15724:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15728:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:16"},"nodeType":"YulFunctionCall","src":"15720:11:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"15713:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15796:79:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15817:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15828:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15822:5:16"},"nodeType":"YulFunctionCall","src":"15822:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15810:6:16"},"nodeType":"YulFunctionCall","src":"15810:23:16"},"nodeType":"YulExpressionStatement","src":"15810:23:16"},{"nodeType":"YulAssignment","src":"15846:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15857:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15862:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15853:3:16"},"nodeType":"YulFunctionCall","src":"15853:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15846:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15751:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"15756:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15748:2:16"},"nodeType":"YulFunctionCall","src":"15748:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15764:23:16","statements":[{"nodeType":"YulAssignment","src":"15766:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15777:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"15782:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15773:3:16"},"nodeType":"YulFunctionCall","src":"15773:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"15766:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"15744:3:16","statements":[]},"src":"15740:135:16"},{"nodeType":"YulAssignment","src":"15884:15:16","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"15894:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15884:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15088:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15099:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15111:6:16","type":""}],"src":"15016:889:16"},{"body":{"nodeType":"YulBlock","src":"16091:614:16","statements":[{"nodeType":"YulAssignment","src":"16101:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16113:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16124:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:16"},"nodeType":"YulFunctionCall","src":"16109:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16101:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"16137:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16155:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16160:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16151:3:16"},"nodeType":"YulFunctionCall","src":"16151:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"16164:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16147:3:16"},"nodeType":"YulFunctionCall","src":"16147:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16141:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16182:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16203:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16197:5:16"},"nodeType":"YulFunctionCall","src":"16197:13:16"},{"name":"_1","nodeType":"YulIdentifier","src":"16212:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16193:3:16"},"nodeType":"YulFunctionCall","src":"16193:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16175:6:16"},"nodeType":"YulFunctionCall","src":"16175:41:16"},"nodeType":"YulExpressionStatement","src":"16175:41:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16236:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16247:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16232:3:16"},"nodeType":"YulFunctionCall","src":"16232:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16268:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16276:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16264:3:16"},"nodeType":"YulFunctionCall","src":"16264:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16258:5:16"},"nodeType":"YulFunctionCall","src":"16258:24:16"},{"name":"_1","nodeType":"YulIdentifier","src":"16284:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16254:3:16"},"nodeType":"YulFunctionCall","src":"16254:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16225:6:16"},"nodeType":"YulFunctionCall","src":"16225:63:16"},"nodeType":"YulExpressionStatement","src":"16225:63:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16319:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16304:3:16"},"nodeType":"YulFunctionCall","src":"16304:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16340:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16348:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16336:3:16"},"nodeType":"YulFunctionCall","src":"16336:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16330:5:16"},"nodeType":"YulFunctionCall","src":"16330:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"16356:8:16","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16326:3:16"},"nodeType":"YulFunctionCall","src":"16326:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16297:6:16"},"nodeType":"YulFunctionCall","src":"16297:69:16"},"nodeType":"YulExpressionStatement","src":"16297:69:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16386:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16397:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16382:3:16"},"nodeType":"YulFunctionCall","src":"16382:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16418:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16426:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16414:3:16"},"nodeType":"YulFunctionCall","src":"16414:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16408:5:16"},"nodeType":"YulFunctionCall","src":"16408:24:16"},{"name":"_1","nodeType":"YulIdentifier","src":"16434:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16404:3:16"},"nodeType":"YulFunctionCall","src":"16404:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16375:6:16"},"nodeType":"YulFunctionCall","src":"16375:63:16"},"nodeType":"YulExpressionStatement","src":"16375:63:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16458:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16469:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16454:3:16"},"nodeType":"YulFunctionCall","src":"16454:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16486:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16494:4:16","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16482:3:16"},"nodeType":"YulFunctionCall","src":"16482:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16476:5:16"},"nodeType":"YulFunctionCall","src":"16476:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16447:6:16"},"nodeType":"YulFunctionCall","src":"16447:54:16"},"nodeType":"YulExpressionStatement","src":"16447:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16521:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16532:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16517:3:16"},"nodeType":"YulFunctionCall","src":"16517:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16549:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16557:4:16","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16545:3:16"},"nodeType":"YulFunctionCall","src":"16545:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16539:5:16"},"nodeType":"YulFunctionCall","src":"16539:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16510:6:16"},"nodeType":"YulFunctionCall","src":"16510:54:16"},"nodeType":"YulExpressionStatement","src":"16510:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16584:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16595:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16580:3:16"},"nodeType":"YulFunctionCall","src":"16580:20:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16612:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16620:4:16","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16608:3:16"},"nodeType":"YulFunctionCall","src":"16608:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16602:5:16"},"nodeType":"YulFunctionCall","src":"16602:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16573:6:16"},"nodeType":"YulFunctionCall","src":"16573:54:16"},"nodeType":"YulExpressionStatement","src":"16573:54:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16647:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16658:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16643:3:16"},"nodeType":"YulFunctionCall","src":"16643:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16679:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16687:4:16","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16675:3:16"},"nodeType":"YulFunctionCall","src":"16675:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16669:5:16"},"nodeType":"YulFunctionCall","src":"16669:24:16"},{"name":"_1","nodeType":"YulIdentifier","src":"16695:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16665:3:16"},"nodeType":"YulFunctionCall","src":"16665:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16636:6:16"},"nodeType":"YulFunctionCall","src":"16636:63:16"},"nodeType":"YulExpressionStatement","src":"16636:63:16"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$1265_memory_ptr__to_t_struct$_ExactInputSingleParams_$1265_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16060:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16071:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16082:4:16","type":""}],"src":"15910:795:16"},{"body":{"nodeType":"YulBlock","src":"16981:311:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16998:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"17009:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16991:6:16"},"nodeType":"YulFunctionCall","src":"16991:25:16"},"nodeType":"YulExpressionStatement","src":"16991:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17036:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17047:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17032:3:16"},"nodeType":"YulFunctionCall","src":"17032:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"17052:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17025:6:16"},"nodeType":"YulFunctionCall","src":"17025:34:16"},"nodeType":"YulExpressionStatement","src":"17025:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17079:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17090:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:16"},"nodeType":"YulFunctionCall","src":"17075:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"17095:3:16","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17068:6:16"},"nodeType":"YulFunctionCall","src":"17068:31:16"},"nodeType":"YulExpressionStatement","src":"17068:31:16"},{"nodeType":"YulAssignment","src":"17108:65:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17145:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17157:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17168:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17153:3:16"},"nodeType":"YulFunctionCall","src":"17153:19:16"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"17116:28:16"},"nodeType":"YulFunctionCall","src":"17116:57:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17108:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17193:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17204:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17189:3:16"},"nodeType":"YulFunctionCall","src":"17189:18:16"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17213:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17229:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17234:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17225:3:16"},"nodeType":"YulFunctionCall","src":"17225:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"17238:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17221:3:16"},"nodeType":"YulFunctionCall","src":"17221:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17209:3:16"},"nodeType":"YulFunctionCall","src":"17209:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17182:6:16"},"nodeType":"YulFunctionCall","src":"17182:60:16"},"nodeType":"YulExpressionStatement","src":"17182:60:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17262:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17273:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17258:3:16"},"nodeType":"YulFunctionCall","src":"17258:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"17279:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17251:6:16"},"nodeType":"YulFunctionCall","src":"17251:35:16"},"nodeType":"YulExpressionStatement","src":"17251:35:16"}]},"name":"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16918:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16929:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16937:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16945:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16953:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16961:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16972:4:16","type":""}],"src":"16710:582:16"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_uint24(value)\n    {\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint24t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_uint24(value_2)\n        value3 := value_2\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint24(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_uint24(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_contract_IERC20_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_contract_IERC20_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_contract_IERC20_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_3), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Only owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_21971e62578e10cd34ab65d1697b9c5f963a7a937afc895e049ad66dce7f0f37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"No profitable opportunity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr__to_t_struct$_ArbitrageParams_$1431_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xffffff))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_contract$_FlashLoanArbitrage_$2043_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), 128)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 160)\n        let srcPtr := add(value1, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _1))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value2, pos)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        let length_1 := mload(value3)\n        mstore(tail_2, length_1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, _2) }\n        {\n            mstore(add(add(tail_2, i_1), _2), mload(add(add(value3, i_1), _2)))\n        }\n        mstore(add(add(tail_2, length_1), _2), 0)\n        tail := add(add(tail_2, and(add(length_1, 31), not(31))), _2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_bec779a091766eb809048cf84d103b020badca80f63c0dbba7135454237490e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Only Balancer Vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_struct$_ArbitrageParams_$1431_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_address(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        mstore(add(memPtr, 32), value_1)\n        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n        let value_2 := mload(add(headStart, 96))\n        validator_revert_uint24(value_2)\n        mstore(add(memPtr, 96), value_2)\n        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_6b8077984201be275e1ea17f5751a9d31c877fc60f88f5c477062be112bf7b97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"No profit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b152b760143d31fd8ff5fec447c2175b6bd780222e6f19b3a88d930da500fa9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient profit\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_contract_IERC20_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$1265_memory_ptr__to_t_struct$_ExactInputSingleParams_$1265_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1356":[{"length":32,"start":703},{"length":32,"start":1508},{"length":32,"start":2036}],"1359":[{"length":32,"start":2956},{"length":32,"start":3194}],"1362":[{"length":32,"start":2701},{"length":32,"start":3463},{"length":32,"start":3615}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FF1C9BC GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF99D519 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x507A2291 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x5ABAAA74 EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x198 DUP7 DUP7 DUP7 DUP7 PUSH2 0x3B8 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2070726F66697461626C65206F70706F7274756E69747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x21E JUMPI PUSH2 0x21E PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26F JUMPI PUSH2 0x26F PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C38449E ADDRESS DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x343 SWAP2 SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1328 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH2 0x3B1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 PUSH2 0x3C8 DUP8 DUP10 DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 PUSH2 0x3DA DUP9 PUSH1 0x2 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP2 DUP9 PUSH2 0x142F JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 PUSH2 0x403 DUP3 DUP10 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x40D SWAP1 DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 PUSH2 0x41E PUSH2 0x2710 DUP5 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP3 MSTORE DUP14 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x173AF69DB85FC7C0AECDBE45FC8B7A7D0873AD923AE56C1FB04EC3A98F5AA07E SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x32 GT ISZERO SWAP6 POP SWAP4 POP PUSH2 0x499 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E4810985B185B98D95C8815985D5B1D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x698 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xB2F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B4 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP7 PUSH1 0x80 ADD MLOAD PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6CB JUMPI PUSH2 0x6CB PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6E6 JUMPI PUSH2 0x6E6 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH2 0x702 SWAP1 DUP4 PUSH2 0x1442 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x139BC81C1C9BD99A5D PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 DUP4 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP PUSH1 0x32 DUP2 LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9CDD59999A58DA595B9D081C1C9BD99A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP10 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7DC JUMPI PUSH2 0x7DC PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH32 0x0 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x825 JUMPI PUSH2 0x825 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP13 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI PUSH2 0x83F PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP DUP1 PUSH2 0x8CB DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7C1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x954 JUMPI DUP5 MLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x952 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP JUMPDEST PUSH32 0x12024CCA099DB52261A6691770D3065970EFA9AFD5E6DEAFD4E1225E3A51201C PUSH2 0x97E DUP11 PUSH2 0xED8 JUMP JUMPDEST DUP10 DUP5 PUSH1 0x40 MLOAD PUSH2 0x98F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA68 JUMPI PUSH2 0xA68 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0xAC6 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB0B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB1D JUMPI PUSH2 0xB1D PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP4 MSTORE DUP8 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xFFFFFF DUP7 AND DUP4 DUP6 ADD MSTORE ADDRESS PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC07 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 DUP5 ADD MLOAD DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 DUP4 ADD MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 AND PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x414BF389 SWAP1 PUSH2 0x104 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD2E JUMPI PUSH2 0xD2E PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD62 JUMPI PUSH2 0xD62 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE04 SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xE5C SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP8 SWAP1 ADDRESS SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEA3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP3 MLOAD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC4 JUMPI PUSH2 0xEC4 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF6 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF1F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xF84 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xF7C DUP2 PUSH2 0x1518 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF25 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xFD7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xFE7 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0xFFE DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1030 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1040 DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x1057 DUP2 PUSH2 0xFA3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x107F DUP2 PUSH2 0xF8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x1086 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1117 PUSH2 0x1112 DUP4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1151 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x113A JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH2 0x1187 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x119A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x109C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x121E PUSH2 0x1112 DUP4 PUSH2 0x10CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x123D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1264 JUMPI DUP6 CALLDATALOAD PUSH2 0x1255 DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP9 POP POP DUP9 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x127A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1286 DUP9 DUP4 DUP10 ADD PUSH2 0x10F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP9 DUP4 DUP10 ADD PUSH2 0x10F1 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12CB DUP8 DUP3 DUP9 ADD PUSH2 0x115C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131D JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1301 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x80 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP7 MLOAD SWAP2 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP8 DUP3 ADD SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xA0 DUP7 ADD SWAP1 DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1358 JUMP JUMPDEST POP POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x138A DUP2 DUP10 PUSH2 0x12ED JUMP JUMPDEST SWAP4 POP POP DUP5 DUP4 SUB PUSH1 0x60 DUP7 ADD MSTORE DUP6 MLOAD SWAP2 POP DUP2 DUP4 MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13BA JUMPI DUP7 DUP2 ADD DUP3 ADD MLOAD DUP5 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x139F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP4 ADD DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x142A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1407 JUMPI PUSH2 0x1407 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14C5 JUMPI PUSH2 0x14C5 PUSH2 0x1086 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD PUSH2 0x14D3 DUP2 PUSH2 0xF8B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x14E3 DUP2 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x1500 DUP2 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x152A JUMPI PUSH2 0x152A PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x157D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1531 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x158F DUP2 DUP7 PUSH2 0x12ED JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x15B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1531 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x160A PUSH2 0x1112 DUP3 PUSH2 0x10CD JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xCEA JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x162E JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1666 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD CHAINID 0xAA 0x49 0x49 0xEA 0x4D 0x4B 0xBC PUSH27 0x8CA21123A82224F4860EA3F1A9065207337A382CB1664736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"500:8189:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:1190;;;;;;:::i;:::-;;:::i;:::-;;787:43;;828:2;787:43;;;;;1090:25:16;;;1078:2;1063:18;787:43:15;;;;;;;;6164:1187;;;;;;:::i;:::-;;:::i;:::-;;;;1920:14:16;;1913:22;1895:41;;1967:2;1952:18;;1945:34;;;;1868:18;6164:1187:15;1727:258:16;8422:265:15;;;;;;:::i;:::-;;:::i;717:20::-;;;;;-1:-1:-1;;;;;717:20:15;;;;;;-1:-1:-1;;;;;2406:32:16;;;2388:51;;2376:2;2361:18;717:20:15;2242:203:16;836:47:15;;878:5;836:47;;1581:1672;;;;;;:::i;:::-;;:::i;3259:1190::-;2261:21:10;:19;:21::i;:::-;3473:5:15::1;::::0;-1:-1:-1;;;;;3473:5:15::1;3459:10;:19;3451:42;;;::::0;-1:-1:-1;;;3451:42:15;;6137:2:16;3451:42:15::1;::::0;::::1;6119:21:16::0;6176:2;6156:18;;;6149:30;-1:-1:-1;;;6195:18:16;;;6188:40;6245:18;;3451:42:15::1;;;;;;;;;3543:17;3565:115;3597:7;3618:8;3640:6;3660:10;3565:18;:115::i;:::-;3542:138;;;3698:12;3690:50;;;::::0;-1:-1:-1;;;3690:50:15;;6476:2:16;3690:50:15::1;::::0;::::1;6458:21:16::0;6515:2;6495:18;;;6488:30;6554:27;6534:18;;;6527:55;6599:18;;3690:50:15::1;6274:349:16::0;3690:50:15::1;3839:15;::::0;;3852:1:::1;3839:15:::0;;;;;::::1;::::0;;;3814:22:::1;::::0;3839:15:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;3839:15:15::1;3814:40;;3883:7;3864:6;3871:1;3864:9;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3864:27:15;;;::::1;:9;::::0;;::::1;::::0;;;;;;;:27;3929:16:::1;::::0;;3943:1:::1;3929:16:::0;;;;;::::1;::::0;;;3902:24:::1;::::0;3929:16:::1;;;;;;;;;;;::::0;-1:-1:-1;3929:16:15::1;3902:43;;3968:6;3955:7;3963:1;3955:10;;;;;;;;:::i;:::-;;;;;;:19;;;::::0;::::1;4051:29;4083:187;;;;;;;;4122:7;-1:-1:-1::0;;;;;4083:187:15::1;;;;;4153:8;-1:-1:-1::0;;;;;4083:187:15::1;;;;;4185:6;4083:187;;;;4217:10;4083:187;;;;;;4251:8;4083:187;;::::0;4051:219:::1;;4326:5;-1:-1:-1::0;;;;;4326:15:15::1;;4355:4;4373:6;4393:7;4425:6;4414:18;;;;;;;7033:13:16::0;;-1:-1:-1;;;;;7029:22:16;;;7011:41;;7112:4;7100:17;;;7094:24;7090:33;;;7068:20;;;7061:63;7180:4;7168:17;;;7162:24;7140:20;;;7133:54;7247:4;7235:17;;;7229:24;7255:8;7225:39;7203:20;;;7196:69;7321:4;7309:17;;;7303:24;7281:20;;;7274:54;;;;6960:3;6945:19;;6760:574;4414:18:15::1;;;;;;;;;;;;;4326:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3441:1008;;;;2303:20:10::0;1716:1;2809:7;:22;2629:209;2303:20;3259:1190:15;;;;;:::o;6164:1187::-;6316:4;;6480:6;6316:4;6602:97;6633:8;6655:7;6480:6;6602:17;:97::i;:::-;6576:123;-1:-1:-1;6777:20:15;6815:5;6801:10;:6;6810:1;6801:10;:::i;:::-;6800:20;;;;:::i;:::-;6777:43;-1:-1:-1;6886:21:15;6777:43;6886:6;:21;:::i;:::-;6868:15;:39;6864:453;;;6923:22;6967:21;6976:12;6967:6;:21;:::i;:::-;6948:41;;:15;:41;:::i;:::-;6923:66;-1:-1:-1;7003:17:15;7060:6;7024:32;878:5;6923:66;7024:32;:::i;:::-;7023:43;;;;:::i;:::-;7098:141;;;-1:-1:-1;;;;;10317:15:16;;;10299:34;;10369:15;;10364:2;10349:18;;10342:43;10401:18;;;10394:34;;;10459:2;10444:18;;10437:34;;;7003:63:15;;-1:-1:-1;7098:141:15;;10248:3:16;10233:19;7098:141:15;;;;;;;828:2;-1:-1:-1;7262:27:15;;-1:-1:-1;7291:14:15;-1:-1:-1;7254:52:15;;-1:-1:-1;;;7254:52:15;6864:453;7335:5;7342:1;7327:17;;;;;;;6164:1187;;;;;;;;:::o;8422:265::-;8505:5;;-1:-1:-1;;;;;8505:5:15;8491:10;:19;8483:42;;;;-1:-1:-1;;;8483:42:15;;6137:2:16;8483:42:15;;;6119:21:16;6176:2;6156:18;;;6149:30;-1:-1:-1;;;6195:18:16;;;6188:40;6245:18;;8483:42:15;5935:334:16;8483:42:15;8553:38;;-1:-1:-1;;;8553:38:15;;8585:4;8553:38;;;2388:51:16;8535:15:15;;-1:-1:-1;;;;;8553:23:15;;;;;2361:18:16;;8553:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8535:56;-1:-1:-1;8605:11:15;;8601:80;;8655:5;;8632:38;;-1:-1:-1;;;8632:38:15;;-1:-1:-1;;;;;8655:5:15;;;8632:38;;;10845:51:16;10912:18;;;10905:34;;;8632:22:15;;;;;;10818:18:16;;8632:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8601:80;8473:214;8422:265;:::o;1581:1672::-;1783:10;-1:-1:-1;;;;;1805:5:15;1783:28;;1775:60;;;;-1:-1:-1;;;1775:60:15;;11434:2:16;1775:60:15;;;11416:21:16;11473:2;11453:18;;;11446:30;-1:-1:-1;;;11492:18:16;;;11485:49;11551:18;;1775:60:15;11232:343:16;1775:60:15;1903:29;1946:8;1935:39;;;;;;;;;;;;:::i;:::-;1903:71;;2022:22;2047:170;2080:6;:14;;;2108:6;:15;;;2137:7;2145:1;2137:10;;;;;;;;:::i;:::-;;;;;;;2161:6;:17;;;2192:6;:15;;;2047:19;:170::i;:::-;2022:195;;2270:19;2292:145;2327:6;:15;;;2356:6;:14;;;2384;2412:6;:15;;;2292:21;:145::i;:::-;2270:167;;2475:14;2520:10;2531:1;2520:13;;;;;;;;:::i;:::-;;;;;;;2507:7;2515:1;2507:10;;;;;;;;:::i;:::-;;;;;;;:26;;;;:::i;:::-;2492:42;;:11;:42;:::i;:::-;2475:59;;2561:1;2552:6;:10;2544:32;;;;-1:-1:-1;;;2544:32:15;;12689:2:16;2544:32:15;;;12671:21:16;12728:1;12708:18;;;12701:29;-1:-1:-1;;;12746:18:16;;;12739:39;12795:18;;2544:32:15;12487:332:16;2544:32:15;2629:17;2678:7;2686:1;2678:10;;;;;;;;:::i;:::-;;;;;;;878:5;2650:6;:24;;;;:::i;:::-;2649:39;;;;:::i;:::-;2629:59;;828:2;2706:9;:27;;2698:59;;;;-1:-1:-1;;;2698:59:15;;13026:2:16;2698:59:15;;;13008:21:16;13065:2;13045:18;;;13038:30;-1:-1:-1;;;13084:18:16;;;13077:49;13143:18;;2698:59:15;12824:343:16;2698:59:15;2803:9;2798:185;2822:6;:13;2818:1;:17;2798:185;;;2863:6;2870:1;2863:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2856:26:15;;2908:5;2945:10;2956:1;2945:13;;;;;;;;:::i;:::-;;;;;;;2932:7;2940:1;2932:10;;;;;;;;:::i;:::-;;;;;;;:26;;;;:::i;:::-;2856:116;;-1:-1:-1;;;;;;2856:116:15;;;;;;;-1:-1:-1;;;;;10863:32:16;;;2856:116:15;;;10845:51:16;10912:18;;;10905:34;10818:18;;2856:116:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2837:3:15;;;;:::i;:::-;;;;2798:185;;;-1:-1:-1;3036:10:15;;3032:87;;3069:14;;3094:5;;3062:46;;-1:-1:-1;;;3062:46:15;;-1:-1:-1;;;;;3094:5:15;;;3062:46;;;10845:51:16;10912:18;;;10905:34;;;3062:31:15;;;;;10818:18:16;;3062:46:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3032:87;3134:112;3165:30;3188:6;3165:22;:30::i;:::-;3209:7;3230:6;3134:112;;;;;;;;:::i;:::-;;;;;;;;1765:1488;;;;;1581:1672;;;;:::o;2336:287:10:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:10;;14521:2:16;2460:63:10;;;14503:21:16;14560:2;14540:18;;;14533:30;14599:33;14579:18;;;14572:61;14650:18;;2460:63:10;14319:355:16;2460:63:10;1759:1;2598:7;:18;2336:287::o;7694:382:15:-;7924:16;;;7938:1;7924:16;;;;;;;;7827:7;;;;7924:16;7938:1;7924:16;;;;;;;;;;-1:-1:-1;7924:16:15;7900:40;;7960:7;7950:4;7955:1;7950:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;7950:17:15;;;-1:-1:-1;;;;;7950:17:15;;;;;7987:8;7977:4;7982:1;7977:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7977:18:15;;;:7;;;;;;;;;:18;8021:45;;-1:-1:-1;;;8021:45:15;;:15;:29;;;;;;:45;;8051:8;;8061:4;;8021:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8021:45:15;;;;;;;;;;;;:::i;:::-;8067:1;8021:48;;;;;;;;:::i;:::-;;;;;;;8014:55;;;7694:382;;;;;:::o;4455:932::-;4766:424;;;;;;;;-1:-1:-1;;;;;4766:424:15;;;;;;;;;;;;;;;;;;;;4947:4;4766:424;;;;;;;;;;;;;;;;-1:-1:-1;4766:424:15;;;;;;;;;;;;5234:57;;-1:-1:-1;;;5234:57:15;;5266:13;10863:32:16;;;5234:57:15;;;10845:51:16;10912:18;;;10905:34;;;4766:424:15;5234:23;;10818:18:16;;5234:57:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5342:38:15;;;-1:-1:-1;;;5342:38:15;;16197:13:16;;-1:-1:-1;;;;;16193:22:16;;;5342:38:15;;;16175:41:16;16276:4;16264:17;;16258:24;16254:33;;16232:20;;;16225:63;16336:17;;;16330:24;16356:8;16326:39;16304:20;;;16297:69;16426:4;16414:17;;16408:24;16404:33;;16382:20;;;16375:63;16494:4;16482:17;;16476:24;16454:20;;;16447:54;16155:3;16545:17;;16539:24;16517:20;;;16510:54;16620:4;16608:17;;16602:24;16580:20;;;16573:54;16687:4;16675:17;;16669:24;16665:33;;16643:20;;;16636:63;5342:13:15;:30;;;;;;16109:19:16;;5342:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5335:45;4455:932;-1:-1:-1;;;;;;;4455:932:15:o;5393:765::-;5631:16;;;5645:1;5631:16;;;;;;;;5551:17;;;;5631:16;5645:1;5631:16;;;;;;;;;;-1:-1:-1;5631:16:15;5607:40;;5667:7;5657:4;5662:1;5657:7;;;;;;;;:::i;:::-;;;;;;:17;-1:-1:-1;;;;;5657:17:15;;;-1:-1:-1;;;;;5657:17:15;;;;;5694:8;5684:4;5689:1;5684:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5684:18:15;;;:7;;;;;;;;;:18;5746:59;;-1:-1:-1;;;5746:59:15;;5778:15;10863:32:16;;5746:59:15;;;10845:51:16;10912:18;;;10905:34;;;5746:23:15;;;;;;10818:18:16;;5746:59:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5876:230:15;;-1:-1:-1;;;5876:230:15;;5849:24;;-1:-1:-1;;;;;5876:15:15;:40;;;;:230;;5930:8;;5849:24;;6043:4;;6069;;6088:8;;5876:230;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5876:230:15;;;;;;;;;;;;:::i;:::-;5849:257;;6124:7;6149:1;6132:7;:14;:18;;;;:::i;:::-;6124:27;;;;;;;;:::i;:::-;;;;;;;6117:34;;;;5393:765;;;;;;:::o;8082:308::-;8161:16;8189:26;8232:6;:13;8218:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8218:28:15;;8189:57;;8261:9;8256:102;8280:6;:13;8276:1;:17;8256:102;;;8337:6;8344:1;8337:9;;;;;;;;:::i;:::-;;;;;;;8314;8324:1;8314:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8314:33:15;;;:12;;;;;;;;;;;:33;8295:3;;;;:::i;:::-;;;;8256:102;;;-1:-1:-1;8374:9:15;8082:308;-1:-1:-1;;8082:308:15:o;14:131:16:-;-1:-1:-1;;;;;89:31:16;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:119::-;235:8;228:5;224:20;217:5;214:31;204:59;;259:1;256;249:12;274:665;368:6;376;384;392;400;453:3;441:9;432:7;428:23;424:33;421:53;;;470:1;467;460:12;421:53;509:9;496:23;528:31;553:5;528:31;:::i;:::-;578:5;-1:-1:-1;635:2:16;620:18;;607:32;648:33;607:32;648:33;:::i;:::-;700:7;-1:-1:-1;754:2:16;739:18;;726:32;;-1:-1:-1;810:2:16;795:18;;782:32;823;782;823;:::i;:::-;274:665;;;;-1:-1:-1;274:665:16;;928:3;913:19;900:33;;274:665;-1:-1:-1;;274:665:16:o;1126:596::-;1211:6;1219;1227;1235;1288:3;1276:9;1267:7;1263:23;1259:33;1256:53;;;1305:1;1302;1295:12;1256:53;1344:9;1331:23;1363:31;1388:5;1363:31;:::i;:::-;1413:5;-1:-1:-1;1470:2:16;1455:18;;1442:32;1483:33;1442:32;1483:33;:::i;:::-;1535:7;-1:-1:-1;1589:2:16;1574:18;;1561:32;;-1:-1:-1;1645:2:16;1630:18;;1617:32;1658;1617;1658;:::i;:::-;1126:596;;;;-1:-1:-1;1126:596:16;;-1:-1:-1;;1126:596:16:o;1990:247::-;2049:6;2102:2;2090:9;2081:7;2077:23;2073:32;2070:52;;;2118:1;2115;2108:12;2070:52;2157:9;2144:23;2176:31;2201:5;2176:31;:::i;:::-;2226:5;1990:247;-1:-1:-1;;;1990:247:16:o;2450:127::-;2511:10;2506:3;2502:20;2499:1;2492:31;2542:4;2539:1;2532:15;2566:4;2563:1;2556:15;2582:275;2653:2;2647:9;2718:2;2699:13;;-1:-1:-1;;2695:27:16;2683:40;;2753:18;2738:34;;2774:22;;;2735:62;2732:88;;;2800:18;;:::i;:::-;2836:2;2829:22;2582:275;;-1:-1:-1;2582:275:16:o;2862:191::-;2930:4;2963:18;2955:6;2952:30;2949:56;;;2985:18;;:::i;:::-;-1:-1:-1;3030:1:16;3026:14;3042:4;3022:25;;2862:191::o;3058:670::-;3112:5;3165:3;3158:4;3150:6;3146:17;3142:27;3132:55;;3183:1;3180;3173:12;3132:55;3219:6;3206:20;3245:4;3269:68;3285:51;3333:2;3285:51;:::i;:::-;3269:68;:::i;:::-;3371:15;;;3457:1;3453:10;;;;3441:23;;3437:32;;;3402:12;;;;3481:15;;;3478:35;;;3509:1;3506;3499:12;3478:35;3545:2;3537:6;3533:15;3557:142;3573:6;3568:3;3565:15;3557:142;;;3639:17;;3627:30;;3677:12;;;;3590;;3557:142;;;-1:-1:-1;3717:5:16;3058:670;-1:-1:-1;;;;;;3058:670:16:o;3733:530::-;3775:5;3828:3;3821:4;3813:6;3809:17;3805:27;3795:55;;3846:1;3843;3836:12;3795:55;3882:6;3869:20;3908:18;3904:2;3901:26;3898:52;;;3930:18;;:::i;:::-;3974:55;4017:2;3998:13;;-1:-1:-1;;3994:27:16;4023:4;3990:38;3974:55;:::i;:::-;4054:2;4045:7;4038:19;4100:3;4093:4;4088:2;4080:6;4076:15;4072:26;4069:35;4066:55;;;4117:1;4114;4107:12;4066:55;4182:2;4175:4;4167:6;4163:17;4156:4;4147:7;4143:18;4130:55;4230:1;4205:16;;;4223:4;4201:27;4194:38;;;;4209:7;3733:530;-1:-1:-1;;;3733:530:16:o;4268:1662::-;4452:6;4460;4468;4476;4529:3;4517:9;4508:7;4504:23;4500:33;4497:53;;;4546:1;4543;4536:12;4497:53;4586:9;4573:23;4615:18;4656:2;4648:6;4645:14;4642:34;;;4672:1;4669;4662:12;4642:34;4710:6;4699:9;4695:22;4685:32;;4755:7;4748:4;4744:2;4740:13;4736:27;4726:55;;4777:1;4774;4767:12;4726:55;4813:2;4800:16;4835:4;4859:68;4875:51;4923:2;4875:51;:::i;4859:68::-;4961:15;;;5043:1;5039:10;;;;5031:19;;5027:28;;;4992:12;;;;5067:19;;;5064:39;;;5099:1;5096;5089:12;5064:39;5123:11;;;;5143:217;5159:6;5154:3;5151:15;5143:217;;;5239:3;5226:17;5256:31;5281:5;5256:31;:::i;:::-;5300:18;;5176:12;;;;5338;;;;5143:217;;;5379:5;-1:-1:-1;;5422:18:16;;5409:32;;-1:-1:-1;;5453:16:16;;;5450:36;;;5482:1;5479;5472:12;5450:36;5505:63;5560:7;5549:8;5538:9;5534:24;5505:63;:::i;:::-;5495:73;;5621:2;5610:9;5606:18;5593:32;5577:48;;5650:2;5640:8;5637:16;5634:36;;;5666:1;5663;5656:12;5634:36;5689:63;5744:7;5733:8;5722:9;5718:24;5689:63;:::i;:::-;5679:73;;5805:2;5794:9;5790:18;5777:32;5761:48;;5834:2;5824:8;5821:16;5818:36;;;5850:1;5847;5840:12;5818:36;;5873:51;5916:7;5905:8;5894:9;5890:24;5873:51;:::i;:::-;5863:61;;;4268:1662;;;;;;;:::o;6628:127::-;6689:10;6684:3;6680:20;6677:1;6670:31;6720:4;6717:1;6710:15;6744:4;6741:1;6734:15;7339:435;7392:3;7430:5;7424:12;7457:6;7452:3;7445:19;7483:4;7512:2;7507:3;7503:12;7496:19;;7549:2;7542:5;7538:14;7570:1;7580:169;7594:6;7591:1;7588:13;7580:169;;;7655:13;;7643:26;;7689:12;;;;7724:15;;;;7616:1;7609:9;7580:169;;;-1:-1:-1;7765:3:16;;7339:435;-1:-1:-1;;;;;7339:435:16:o;7779:1456::-;-1:-1:-1;;;;;8231:15:16;;;8213:34;;8162:3;8266:2;8284:18;;;8277:31;;;8357:13;;8147:19;;;8379:22;;;8114:4;;8459:15;;;;8185:19;;8266:2;8193:3;8417:19;;;8114:4;8502:178;8516:6;8513:1;8510:13;8502:178;;;8581:13;;8577:22;;8565:35;;8655:15;;;;8620:12;;;;8538:1;8531:9;8502:178;;;8506:3;;8725:9;8720:3;8716:19;8711:2;8700:9;8696:18;8689:47;8759:41;8796:3;8788:6;8759:41;:::i;:::-;8745:55;;;8848:9;8840:6;8836:22;8831:2;8820:9;8816:18;8809:50;8890:6;8884:13;8868:29;;8921:8;8913:6;8906:24;8950:1;8960:149;8976:8;8971:3;8968:17;8960:149;;;9076:16;;;9072:25;;9066:32;9043:16;;;9039:25;;9032:67;8995:12;;8960:149;;;-1:-1:-1;9157:1:16;9129:21;;;9125:30;;9118:41;9219:2;9196:17;;;-1:-1:-1;;9192:31:16;9180:44;;;9176:53;;7779:1456;-1:-1:-1;;;;;;7779:1456:16:o;9240:127::-;9301:10;9296:3;9292:20;9289:1;9282:31;9332:4;9329:1;9322:15;9356:4;9353:1;9346:15;9372:168;9445:9;;;9476;;9493:15;;;9487:22;;9473:37;9463:71;;9514:18;;:::i;:::-;9372:168;;;;:::o;9545:217::-;9585:1;9611;9601:132;;9655:10;9650:3;9646:20;9643:1;9636:31;9690:4;9687:1;9680:15;9718:4;9715:1;9708:15;9601:132;-1:-1:-1;9747:9:16;;9545:217::o;9767:125::-;9832:9;;;9853:10;;;9850:36;;;9866:18;;:::i;9897:128::-;9964:9;;;9985:11;;;9982:37;;;9999:18;;:::i;10482:184::-;10552:6;10605:2;10593:9;10584:7;10580:23;10576:32;10573:52;;;10621:1;10618;10611:12;10573:52;-1:-1:-1;10644:16:16;;10482:184;-1:-1:-1;10482:184:16:o;10950:277::-;11017:6;11070:2;11058:9;11049:7;11045:23;11041:32;11038:52;;;11086:1;11083;11076:12;11038:52;11118:9;11112:16;11171:5;11164:13;11157:21;11150:5;11147:32;11137:60;;11193:1;11190;11183:12;11580:902;11683:6;11736:3;11724:9;11715:7;11711:23;11707:33;11704:53;;;11753:1;11750;11743:12;11704:53;11786:2;11780:9;11828:3;11820:6;11816:16;11898:6;11886:10;11883:22;11862:18;11850:10;11847:34;11844:62;11841:88;;;11909:18;;:::i;:::-;11945:2;11938:22;11982:16;;12007:31;11982:16;12007:31;:::i;:::-;12047:21;;12113:2;12098:18;;12092:25;12126:33;12092:25;12126:33;:::i;:::-;12187:2;12175:15;;12168:32;12254:2;12239:18;;;12233:25;12216:15;;;12209:50;12304:2;12289:18;;12283:25;12317:32;12283:25;12317:32;:::i;:::-;12377:2;12365:15;;12358:32;12445:3;12430:19;;;12424:26;12406:16;;;12399:52;;;;-1:-1:-1;12369:6:16;11580:902;-1:-1:-1;11580:902:16:o;13172:135::-;13211:3;13232:17;;;13229:43;;13252:18;;:::i;:::-;-1:-1:-1;13299:1:16;13288:13;;13172:135::o;13312:461::-;13365:3;13403:5;13397:12;13430:6;13425:3;13418:19;13456:4;13485:2;13480:3;13476:12;13469:19;;13522:2;13515:5;13511:14;13543:1;13553:195;13567:6;13564:1;13561:13;13553:195;;;13632:13;;-1:-1:-1;;;;;13628:39:16;13616:52;;13688:12;;;;13723:15;;;;13664:1;13582:9;13553:195;;13778:536;14063:2;14052:9;14045:21;14026:4;14089:56;14141:2;14130:9;14126:18;14118:6;14089:56;:::i;:::-;14193:9;14185:6;14181:22;14176:2;14165:9;14161:18;14154:50;14221:44;14258:6;14250;14221:44;:::i;:::-;14213:52;;;14301:6;14296:2;14285:9;14281:18;14274:34;13778:536;;;;;;:::o;14679:332::-;14886:6;14875:9;14868:25;14929:2;14924;14913:9;14909:18;14902:30;14849:4;14949:56;15001:2;14990:9;14986:18;14978:6;14949:56;:::i;:::-;14941:64;14679:332;-1:-1:-1;;;;14679:332:16:o;15016:889::-;15111:6;15142:2;15185;15173:9;15164:7;15160:23;15156:32;15153:52;;;15201:1;15198;15191:12;15153:52;15234:9;15228:16;15267:18;15259:6;15256:30;15253:50;;;15299:1;15296;15289:12;15253:50;15322:22;;15375:4;15367:13;;15363:27;-1:-1:-1;15353:55:16;;15404:1;15401;15394:12;15353:55;15433:2;15427:9;15456:68;15472:51;15520:2;15472:51;:::i;15456:68::-;15558:15;;;15640:1;15636:10;;;;15628:19;;15624:28;;;15589:12;;;;15664:19;;;15661:39;;;15696:1;15693;15686:12;15661:39;15720:11;;;;15740:135;15756:6;15751:3;15748:15;15740:135;;;15822:10;;15810:23;;15773:12;;;;15853;;;;15740:135;;16710:582;17009:6;16998:9;16991:25;17052:6;17047:2;17036:9;17032:18;17025:34;17095:3;17090:2;17079:9;17075:18;17068:31;16972:4;17116:57;17168:3;17157:9;17153:19;17145:6;17116:57;:::i;:::-;-1:-1:-1;;;;;17209:32:16;;;;17204:2;17189:18;;17182:60;-1:-1:-1;17273:3:16;17258:19;17251:35;17108:65;16710:582;-1:-1:-1;;;16710:582:16:o"},"methodIdentifiers":{"BPS_DENOMINATOR()":"e1a45218","MIN_PROFIT_BPS()":"507a2291","checkProfitability(address,address,uint256,uint24)":"5abaaa74","emergencyWithdraw(address)":"6ff1c9bc","executeArbitrage(address,address,uint256,uint24,uint256)":"0f99d519","owner()":"8da5cb5b","receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"contract ISwapRouter\",\"name\":\"_uniswapRouter\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_sushiswapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"ArbitrageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uniswapPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sushiswapPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChecked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROFIT_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"uniswapFee\",\"type\":\"uint24\"}],\"name\":\"checkProfitability\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"uniswapFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"executeArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FlashLoanArbitrage.sol\":\"FlashLoanArbitrage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/FlashLoanArbitrage.sol\":{\"keccak256\":\"0xb67687ad1fe3574c483679473ea51e65e31f9511bf8cf30ec7bc9210f9a72a40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdb1dca82a1a2dc1b7e651f5669a97fa3deaa4f8b469c598d5567d469dec60f1\",\"dweb:/ipfs/QmUV7aJDa7YZhokiH7C8HP9DVsmpYKb8Q2z3RHaHuQQ8uH\"]}},\"version\":1}"}}}}}