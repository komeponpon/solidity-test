"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/hooks/useArbitrage.ts":
/*!***********************************!*\
  !*** ./app/hooks/useArbitrage.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useArbitrage: () => (/* binding */ useArbitrage)\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wagmi */ \"(app-pages-browser)/./node_modules/wagmi/dist/esm/hooks/useWriteContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/unit/parseEther.js\");\n/* harmony import */ var _config_contracts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/contracts */ \"(app-pages-browser)/./app/config/contracts.ts\");\n/* harmony import */ var _config_abis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/abis */ \"(app-pages-browser)/./app/config/abis.ts\");\n\n\n\n\nconst formatError = (error)=>{\n    if (error instanceof Error) {\n        if (error.message.includes('insufficient funds')) {\n            return '残高が不足しています';\n        }\n        if (error.message.includes('user rejected')) {\n            return 'トランザクションがキャンセルされました';\n        }\n        return \"エラーが発生しました: \".concat(error.message);\n    }\n    return 'エラーが発生しました';\n};\nfunction useArbitrage() {\n    const { write: writeContract, data: writeData, error: writeError, isPending: isWriteLoading, isSuccess } = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.useWriteContract)({\n        address: _config_contracts__WEBPACK_IMPORTED_MODULE_0__.ARBITRAGE_CONTRACT_ADDRESS,\n        abi: _config_abis__WEBPACK_IMPORTED_MODULE_1__.arbitrageABI,\n        functionName: 'executeArbitrage'\n    });\n    const executeArbitrage = async (param)=>{\n        let { tokenA, tokenB, amount, uniswapFee } = param;\n        if (!writeContract) throw new Error('コントラクトの初期化に失敗しました');\n        const deadline = Math.floor(Date.now() / 1000) + 60 * 20 // 20分後\n        ;\n        try {\n            const tx = await writeContract({\n                args: [\n                    tokenA,\n                    tokenB,\n                    (0,viem__WEBPACK_IMPORTED_MODULE_3__.parseEther)(amount),\n                    uniswapFee,\n                    BigInt(deadline)\n                ]\n            });\n            return tx;\n        } catch (err) {\n            console.error('アービトラージの実行に失敗しました:', err);\n            throw new Error(formatError(err));\n        }\n    };\n    const estimateGas = async (params)=>{\n        if (!writeContract) return null;\n        try {\n            const config = {\n                address: _config_contracts__WEBPACK_IMPORTED_MODULE_0__.ARBITRAGE_CONTRACT_ADDRESS,\n                abi: _config_abis__WEBPACK_IMPORTED_MODULE_1__.arbitrageABI,\n                functionName: 'executeArbitrage',\n                args: [\n                    params.tokenA,\n                    params.tokenB,\n                    (0,viem__WEBPACK_IMPORTED_MODULE_3__.parseEther)(params.amount),\n                    params.uniswapFee,\n                    BigInt(Math.floor(Date.now() / 1000) + 60 * 20)\n                ]\n            };\n            // ガス見積もりを取得\n            const gasEstimate = await writeContract.estimateGas(config);\n            return gasEstimate;\n        } catch (err) {\n            console.error('ガス見積もりに失敗しました:', err);\n            return null;\n        }\n    };\n    return {\n        executeArbitrage,\n        estimateGas,\n        isLoading: isWriteLoading,\n        isSuccess,\n        error: writeError ? new Error(formatError(writeError)) : null\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9ob29rcy91c2VBcmJpdHJhZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0Y7QUFDbkQ7QUFDK0I7QUFDbkI7QUFTN0MsTUFBTUksY0FBYyxDQUFDQztJQUNuQixJQUFJQSxpQkFBaUJDLE9BQU87UUFDMUIsSUFBSUQsTUFBTUUsT0FBTyxDQUFDQyxRQUFRLENBQUMsdUJBQXVCO1lBQ2hELE9BQU87UUFDVDtRQUNBLElBQUlILE1BQU1FLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGtCQUFrQjtZQUMzQyxPQUFPO1FBQ1Q7UUFDQSxPQUFPLGVBQTZCLE9BQWRILE1BQU1FLE9BQU87SUFDckM7SUFDQSxPQUFPO0FBQ1Q7QUFFTyxTQUFTRTtJQUNkLE1BQU0sRUFDSkMsT0FBT0MsYUFBYSxFQUNwQkMsTUFBTUMsU0FBUyxFQUNmUixPQUFPUyxVQUFVLEVBQ2pCQyxXQUFXQyxjQUFjLEVBQ3pCQyxTQUFTLEVBQ1YsR0FBR2pCLHVEQUFnQkEsQ0FBQztRQUNuQmtCLFNBQVNoQix5RUFBMEJBO1FBQ25DaUIsS0FBS2hCLHNEQUFZQTtRQUNqQmlCLGNBQWM7SUFDaEI7SUFFQSxNQUFNQyxtQkFBbUI7WUFBTyxFQUM5QkMsTUFBTSxFQUNOQyxNQUFNLEVBQ05DLE1BQU0sRUFDTkMsVUFBVSxFQUNhO1FBQ3ZCLElBQUksQ0FBQ2QsZUFBZSxNQUFNLElBQUlMLE1BQU07UUFFcEMsTUFBTW9CLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLLFFBQVEsS0FBSyxHQUFHLE9BQU87O1FBRWhFLElBQUk7WUFDRixNQUFNQyxLQUFLLE1BQU1wQixjQUFjO2dCQUM3QnFCLE1BQU07b0JBQ0pWO29CQUNBQztvQkFDQXRCLGdEQUFVQSxDQUFDdUI7b0JBQ1hDO29CQUNBUSxPQUFPUDtpQkFDUjtZQUNIO1lBQ0EsT0FBT0s7UUFDVCxFQUFFLE9BQU9HLEtBQUs7WUFDWkMsUUFBUTlCLEtBQUssQ0FBQyxzQkFBc0I2QjtZQUNwQyxNQUFNLElBQUk1QixNQUFNRixZQUFZOEI7UUFDOUI7SUFDRjtJQUVBLE1BQU1FLGNBQWMsT0FBT0M7UUFDekIsSUFBSSxDQUFDMUIsZUFBZSxPQUFPO1FBRTNCLElBQUk7WUFDRixNQUFNMkIsU0FBUztnQkFDYnBCLFNBQVNoQix5RUFBMEJBO2dCQUNuQ2lCLEtBQUtoQixzREFBWUE7Z0JBQ2pCaUIsY0FBYztnQkFDZFksTUFBTTtvQkFDSkssT0FBT2YsTUFBTTtvQkFDYmUsT0FBT2QsTUFBTTtvQkFDYnRCLGdEQUFVQSxDQUFDb0MsT0FBT2IsTUFBTTtvQkFDeEJhLE9BQU9aLFVBQVU7b0JBQ2pCUSxPQUFPTixLQUFLQyxLQUFLLENBQUNDLEtBQUtDLEdBQUcsS0FBSyxRQUFRLEtBQUs7aUJBQzdDO1lBQ0g7WUFFQSxZQUFZO1lBQ1osTUFBTVMsY0FBYyxNQUFNNUIsY0FBY3lCLFdBQVcsQ0FBQ0U7WUFDcEQsT0FBT0M7UUFDVCxFQUFFLE9BQU9MLEtBQUs7WUFDWkMsUUFBUTlCLEtBQUssQ0FBQyxrQkFBa0I2QjtZQUNoQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87UUFDTGI7UUFDQWU7UUFDQUksV0FBV3hCO1FBQ1hDO1FBQ0FaLE9BQU9TLGFBQWEsSUFBSVIsTUFBTUYsWUFBWVUsZUFBZTtJQUMzRDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMveW9uZXlhbWFjL3NvbGlkaXR5X3Rlc3QvYXBwL2hvb2tzL3VzZUFyYml0cmFnZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250cmFjdFdyaXRlLCB1c2VDb250cmFjdFdyaXRlIGFzIHVzZUNvbnRyYWN0V3JpdGVDb25maWcgfSBmcm9tICd3YWdtaSdcbmltcG9ydCB7IHBhcnNlRXRoZXIgfSBmcm9tICd2aWVtJ1xuaW1wb3J0IHsgQVJCSVRSQUdFX0NPTlRSQUNUX0FERFJFU1MgfSBmcm9tICcuLi9jb25maWcvY29udHJhY3RzJ1xuaW1wb3J0IHsgYXJiaXRyYWdlQUJJIH0gZnJvbSAnLi4vY29uZmlnL2FiaXMnXG5cbmludGVyZmFjZSBFeGVjdXRlQXJiaXRyYWdlUGFyYW1zIHtcbiAgdG9rZW5BOiBzdHJpbmdcbiAgdG9rZW5COiBzdHJpbmdcbiAgYW1vdW50OiBzdHJpbmdcbiAgdW5pc3dhcEZlZTogbnVtYmVyXG59XG5cbmNvbnN0IGZvcm1hdEVycm9yID0gKGVycm9yOiB1bmtub3duKTogc3RyaW5nID0+IHtcbiAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnaW5zdWZmaWNpZW50IGZ1bmRzJykpIHtcbiAgICAgIHJldHVybiAn5q6L6auY44GM5LiN6Laz44GX44Gm44GE44G+44GZJ1xuICAgIH1cbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygndXNlciByZWplY3RlZCcpKSB7XG4gICAgICByZXR1cm4gJ+ODiOODqeODs+OCtuOCr+OCt+ODp+ODs+OBjOOCreODo+ODs+OCu+ODq+OBleOCjOOBvuOBl+OBnydcbiAgICB9XG4gICAgcmV0dXJuIGDjgqjjg6njg7zjgYznmbrnlJ/jgZfjgb7jgZfjgZ86ICR7ZXJyb3IubWVzc2FnZX1gXG4gIH1cbiAgcmV0dXJuICfjgqjjg6njg7zjgYznmbrnlJ/jgZfjgb7jgZfjgZ8nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBcmJpdHJhZ2UoKSB7XG4gIGNvbnN0IHsgXG4gICAgd3JpdGU6IHdyaXRlQ29udHJhY3QsXG4gICAgZGF0YTogd3JpdGVEYXRhLFxuICAgIGVycm9yOiB3cml0ZUVycm9yLFxuICAgIGlzUGVuZGluZzogaXNXcml0ZUxvYWRpbmcsXG4gICAgaXNTdWNjZXNzXG4gIH0gPSB1c2VDb250cmFjdFdyaXRlKHtcbiAgICBhZGRyZXNzOiBBUkJJVFJBR0VfQ09OVFJBQ1RfQUREUkVTUyBhcyBgMHgke3N0cmluZ31gLFxuICAgIGFiaTogYXJiaXRyYWdlQUJJLFxuICAgIGZ1bmN0aW9uTmFtZTogJ2V4ZWN1dGVBcmJpdHJhZ2UnXG4gIH0pXG5cbiAgY29uc3QgZXhlY3V0ZUFyYml0cmFnZSA9IGFzeW5jICh7XG4gICAgdG9rZW5BLFxuICAgIHRva2VuQixcbiAgICBhbW91bnQsXG4gICAgdW5pc3dhcEZlZVxuICB9OiBFeGVjdXRlQXJiaXRyYWdlUGFyYW1zKSA9PiB7XG4gICAgaWYgKCF3cml0ZUNvbnRyYWN0KSB0aHJvdyBuZXcgRXJyb3IoJ+OCs+ODs+ODiOODqeOCr+ODiOOBruWIneacn+WMluOBq+WkseaVl+OBl+OBvuOBl+OBnycpXG5cbiAgICBjb25zdCBkZWFkbGluZSA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApICsgNjAgKiAyMCAvLyAyMOWIhuW+jFxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHR4ID0gYXdhaXQgd3JpdGVDb250cmFjdCh7XG4gICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICB0b2tlbkEgYXMgYDB4JHtzdHJpbmd9YCxcbiAgICAgICAgICB0b2tlbkIgYXMgYDB4JHtzdHJpbmd9YCxcbiAgICAgICAgICBwYXJzZUV0aGVyKGFtb3VudCksXG4gICAgICAgICAgdW5pc3dhcEZlZSxcbiAgICAgICAgICBCaWdJbnQoZGVhZGxpbmUpXG4gICAgICAgIF1cbiAgICAgIH0pXG4gICAgICByZXR1cm4gdHhcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+OCouODvOODk+ODiOODqeODvOOCuOOBruWun+ihjOOBq+WkseaVl+OBl+OBvuOBl+OBnzonLCBlcnIpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0RXJyb3IoZXJyKSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBlc3RpbWF0ZUdhcyA9IGFzeW5jIChwYXJhbXM6IEV4ZWN1dGVBcmJpdHJhZ2VQYXJhbXMpID0+IHtcbiAgICBpZiAoIXdyaXRlQ29udHJhY3QpIHJldHVybiBudWxsXG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgY29uZmlnID0ge1xuICAgICAgICBhZGRyZXNzOiBBUkJJVFJBR0VfQ09OVFJBQ1RfQUREUkVTUyBhcyBgMHgke3N0cmluZ31gLFxuICAgICAgICBhYmk6IGFyYml0cmFnZUFCSSxcbiAgICAgICAgZnVuY3Rpb25OYW1lOiAnZXhlY3V0ZUFyYml0cmFnZScgYXMgY29uc3QsXG4gICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICBwYXJhbXMudG9rZW5BIGFzIGAweCR7c3RyaW5nfWAsXG4gICAgICAgICAgcGFyYW1zLnRva2VuQiBhcyBgMHgke3N0cmluZ31gLFxuICAgICAgICAgIHBhcnNlRXRoZXIocGFyYW1zLmFtb3VudCksXG4gICAgICAgICAgcGFyYW1zLnVuaXN3YXBGZWUsXG4gICAgICAgICAgQmlnSW50KE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApICsgNjAgKiAyMClcbiAgICAgICAgXVxuICAgICAgfVxuXG4gICAgICAvLyDjgqzjgrnopovnqY3jgoLjgorjgpLlj5blvpdcbiAgICAgIGNvbnN0IGdhc0VzdGltYXRlID0gYXdhaXQgd3JpdGVDb250cmFjdC5lc3RpbWF0ZUdhcyhjb25maWcpXG4gICAgICByZXR1cm4gZ2FzRXN0aW1hdGVcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+OCrOOCueimi+epjeOCguOCiuOBq+WkseaVl+OBl+OBvuOBl+OBnzonLCBlcnIpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXhlY3V0ZUFyYml0cmFnZSxcbiAgICBlc3RpbWF0ZUdhcyxcbiAgICBpc0xvYWRpbmc6IGlzV3JpdGVMb2FkaW5nLFxuICAgIGlzU3VjY2VzcyxcbiAgICBlcnJvcjogd3JpdGVFcnJvciA/IG5ldyBFcnJvcihmb3JtYXRFcnJvcih3cml0ZUVycm9yKSkgOiBudWxsXG4gIH1cbn0gIl0sIm5hbWVzIjpbInVzZUNvbnRyYWN0V3JpdGUiLCJwYXJzZUV0aGVyIiwiQVJCSVRSQUdFX0NPTlRSQUNUX0FERFJFU1MiLCJhcmJpdHJhZ2VBQkkiLCJmb3JtYXRFcnJvciIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJ1c2VBcmJpdHJhZ2UiLCJ3cml0ZSIsIndyaXRlQ29udHJhY3QiLCJkYXRhIiwid3JpdGVEYXRhIiwid3JpdGVFcnJvciIsImlzUGVuZGluZyIsImlzV3JpdGVMb2FkaW5nIiwiaXNTdWNjZXNzIiwiYWRkcmVzcyIsImFiaSIsImZ1bmN0aW9uTmFtZSIsImV4ZWN1dGVBcmJpdHJhZ2UiLCJ0b2tlbkEiLCJ0b2tlbkIiLCJhbW91bnQiLCJ1bmlzd2FwRmVlIiwiZGVhZGxpbmUiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwidHgiLCJhcmdzIiwiQmlnSW50IiwiZXJyIiwiY29uc29sZSIsImVzdGltYXRlR2FzIiwicGFyYW1zIiwiY29uZmlnIiwiZ2FzRXN0aW1hdGUiLCJpc0xvYWRpbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useArbitrage.ts\n"));

/***/ })

});