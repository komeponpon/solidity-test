"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/hooks/useArbitrage.ts":
/*!***********************************!*\
  !*** ./app/hooks/useArbitrage.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useArbitrage: () => (/* binding */ useArbitrage)\n/* harmony export */ });\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wagmi */ \"(app-pages-browser)/./node_modules/wagmi/dist/esm/hooks/usePublicClient.js\");\n/* harmony import */ var wagmi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! wagmi */ \"(app-pages-browser)/./node_modules/wagmi/dist/esm/hooks/useWriteContract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/unit/parseEther.js\");\n/* harmony import */ var _config_contracts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/contracts */ \"(app-pages-browser)/./app/config/contracts.ts\");\n/* harmony import */ var _config_abis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/abis */ \"(app-pages-browser)/./app/config/abis.ts\");\n\n\n\n\nconst formatError = (error)=>{\n    if (error instanceof Error) {\n        if (error.message.includes('insufficient funds')) {\n            return '残高が不足しています';\n        }\n        if (error.message.includes('user rejected')) {\n            return 'トランザクションがキャンセルされました';\n        }\n        return \"エラーが発生しました: \".concat(error.message);\n    }\n    return 'エラーが発生しました';\n};\nconst calculateDeadline = ()=>{\n    if (false) {}\n    return BigInt(Math.floor(Date.now() / 1000) + 60 * 20);\n};\nconst SLIPPAGE_TOLERANCE = 0.5 // 0.5%\n;\nfunction useArbitrage() {\n    const publicClient = (0,wagmi__WEBPACK_IMPORTED_MODULE_2__.usePublicClient)();\n    const { data: writeData, error: writeError, isPending: isWriteLoading, isSuccess, writeContract } = (0,wagmi__WEBPACK_IMPORTED_MODULE_3__.useWriteContract)();\n    const executeArbitrage = async (param)=>{\n        let { tokenA, tokenB, amount, uniswapFee } = param;\n        if (!writeContract) throw new Error('コントラクトの初期化に失敗しました');\n        if (!publicClient) throw new Error('ネットワーク接続に失敗しました');\n        try {\n            // 取引前に収益性をチェック\n            const profitCheck = await publicClient.simulateContract({\n                address: _config_contracts__WEBPACK_IMPORTED_MODULE_0__.ARBITRAGE_CONTRACT_ADDRESS,\n                abi: _config_abis__WEBPACK_IMPORTED_MODULE_1__.arbitrageABI,\n                functionName: 'checkProfitability',\n                args: [\n                    tokenA,\n                    tokenB,\n                    (0,viem__WEBPACK_IMPORTED_MODULE_4__.parseEther)(amount),\n                    uniswapFee\n                ]\n            });\n            // 収益性チェックの結果を確認\n            if (!profitCheck.result) throw new Error('収益性の確認に失敗しました');\n            const [isProfitable, expectedProfit] = profitCheck.result;\n            if (!isProfitable) {\n                throw new Error('現在の価格差では収益が見込めません');\n            }\n            const tx = await writeContract({\n                abi: _config_abis__WEBPACK_IMPORTED_MODULE_1__.arbitrageABI,\n                address: _config_contracts__WEBPACK_IMPORTED_MODULE_0__.ARBITRAGE_CONTRACT_ADDRESS,\n                functionName: 'executeArbitrage',\n                args: [\n                    tokenA,\n                    tokenB,\n                    (0,viem__WEBPACK_IMPORTED_MODULE_4__.parseEther)(amount),\n                    uniswapFee,\n                    calculateDeadline()\n                ]\n            });\n            return {\n                tx,\n                expectedProfit\n            };\n        } catch (err) {\n            console.error('アービトラージの実行に失敗しました:', err);\n            throw new Error(formatError(err));\n        }\n    };\n    const estimateGas = async (params)=>{\n        if (!publicClient) return null;\n        try {\n            const gasEstimate = await publicClient.estimateContractGas({\n                address: _config_contracts__WEBPACK_IMPORTED_MODULE_0__.ARBITRAGE_CONTRACT_ADDRESS,\n                abi: _config_abis__WEBPACK_IMPORTED_MODULE_1__.arbitrageABI,\n                functionName: 'executeArbitrage',\n                args: [\n                    params.tokenA,\n                    params.tokenB,\n                    (0,viem__WEBPACK_IMPORTED_MODULE_4__.parseEther)(params.amount),\n                    params.uniswapFee,\n                    calculateDeadline()\n                ]\n            });\n            return gasEstimate;\n        } catch (err) {\n            console.error('ガス見積もりに失敗しました:', err);\n            return null;\n        }\n    };\n    return {\n        executeArbitrage,\n        estimateGas,\n        isLoading: isWriteLoading,\n        isSuccess,\n        error: writeError ? new Error(formatError(writeError)) : null\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useArbitrage.ts\n"));

/***/ })

});